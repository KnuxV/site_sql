{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#bienvenue-au-cours-sql","title":"\ud83d\udcca Bienvenue au Cours SQL","text":""},{"location":"#contenu-du-cours","title":"\ud83d\uddc2\ufe0f Contenu du Cours","text":""},{"location":"#cours-0-introduction-rapide-au-monde-de-la-donnees","title":"Cours 0 : Introduction rapide au monde de la donn\u00e9es","text":"<p>Introduction g\u00e9n\u00e9rale sur les donn\u00e9es et les bases de donn\u00e9es</p>"},{"location":"#cours0-histoire","title":"Cours0: Histoire","text":""},{"location":"#cours-1-les-fondamentaux-en-sql","title":"\ud83d\udcd6 Cours 1 : Les Fondamentaux en SQL","text":"<p>Concepts de base du langage SQL et vous familiarise avec la syntaxe essentielle pour interroger des bases de donn\u00e9es. </p> <ul> <li>Th\u00e8mes abord\u00e9s :</li> <li>Syntaxe de base des requ\u00eates (SELECT, FROM, WHERE)</li> <li>Filtrage conditionnel avec op\u00e9rateurs de comparaison</li> <li>Tri des r\u00e9sultats (ORDER BY) et limitation (LIMIT)</li> <li> <p>Introduction \u00e0 SQLite et \u00e0 l'environnement de ligne de commande</p> </li> <li> <p>Exercices pratiques :</p> </li> <li>Cyberchase : S\u00e9rie d'exercices guid\u00e9s pour pratiquer les requ\u00eates SELECT simples dans une base de donn\u00e9es de programme TV</li> <li>Normals : Analyse de donn\u00e9es m\u00e9t\u00e9orologiques avec filtrage avanc\u00e9</li> <li>Players : Manipulation de statistiques sportives avec tri et conditions multiples</li> <li>Views : Cr\u00e9ation de vues pour simplifier l'acc\u00e8s aux donn\u00e9es complexes</li> <li>Lien vers le github/codespace: Cliquez ici</li> </ul>"},{"location":"#cours-2-requetes-avancees-et-agregations","title":"\ud83d\udcca Cours 2 : Requ\u00eates Avanc\u00e9es et Agr\u00e9gations","text":"<p>Techniques de requ\u00eates en introduisant les fonctions d'agr\u00e9gation et les jointures. </p> <ul> <li>Th\u00e8mes abord\u00e9s :</li> <li>Fonctions d'agr\u00e9gation pour l'analyse statistique (COUNT, SUM, AVG, MAX, MIN)</li> <li>Regroupement et filtrage de donn\u00e9es agr\u00e9g\u00e9es (GROUP BY, HAVING)</li> <li>Types de jointures et leurs applications (INNER JOIN, LEFT JOIN, RIGHT JOIN)</li> <li> <p>Sous-requ\u00eates et expressions de table communes</p> </li> <li> <p>Exercices pratiques :</p> </li> <li>DESE : Analyse complexe de donn\u00e9es \u00e9ducatives pour extraire des m\u00e9triques de performance</li> <li>Moneyball : Application des techniques d'agr\u00e9gation pour analyser des statistiques de baseball</li> <li>Packages : Gestion des d\u00e9pendances logicielles avec jointures multiples</li> </ul>"},{"location":"#cours-3-modelisation-et-schemas","title":"\ud83d\udcc8 Cours 3 : Mod\u00e9lisation et Sch\u00e9mas","text":"<p>Principes de conception de bases de donn\u00e9es, la normalisation et la cr\u00e9ation de sch\u00e9mas efficaces. </p> <ul> <li>Th\u00e8mes abord\u00e9s :</li> <li>Conception de sch\u00e9mas relationnels</li> <li>Formes normales et processus de normalisation</li> <li>Cl\u00e9s primaires, \u00e9trang\u00e8res et contraintes d'int\u00e9grit\u00e9</li> <li> <p>Diagrammes entit\u00e9-relation (ER)</p> </li> <li> <p>Exercices pratiques :</p> </li> <li>ATL : Analyse et optimisation d'un sch\u00e9ma de base de donn\u00e9es a\u00e9roportuaire</li> <li>Connect : Cr\u00e9ation d'un mod\u00e8le relationnel complet \u00e0 partir de sp\u00e9cifications</li> <li>Doghnut : Application des principes de normalisation dans la conception d'un syst\u00e8me de gestion</li> </ul>"},{"location":"#cours-4-manipulation-avancee-des-donnees","title":"\ud83d\udd0d Cours 4 : Manipulation Avanc\u00e9e des Donn\u00e9es","text":"<p>Techniques avanc\u00e9es pour manipuler des ensembles de donn\u00e9es complexes.</p> <ul> <li>Th\u00e8mes abord\u00e9s :</li> <li>Sous-requ\u00eates corr\u00e9l\u00e9es et non corr\u00e9l\u00e9es</li> <li>Analyse de s\u00e9ries temporelles avec fonctions de fen\u00eatrage (WINDOW)</li> <li>Transactions et principes ACID</li> <li> <p>Contr\u00f4le de concurrence et verrous</p> </li> <li> <p>Exercices pratiques :</p> </li> <li>Don't Panic : Syst\u00e8me de gestion d'incidents utilisant des transactions et des sous-requ\u00eates</li> <li>M\u00e9t\u00e9orites : Analyse scientifique de donn\u00e9es de m\u00e9t\u00e9orites avec fonctions de fen\u00eatrage</li> </ul>"},{"location":"#cours-5-indexation-et-performance","title":"\ud83d\udcbe Cours 5 : Indexation et Performance","text":"<p>Optimisation des performances des bases de donn\u00e9es.  - Th\u00e8mes abord\u00e9s :   - Types d'index et leur fonctionnement interne   - Analyse des plans d'ex\u00e9cution avec EXPLAIN QUERY PLAN   - Compromis entre espace et temps lors de l'indexation   - Techniques d'optimisation des requ\u00eates complexes</p> <ul> <li>Exercices pratiques :</li> <li>Optimization : Techniques diverses pour am\u00e9liorer la performance des requ\u00eates</li> <li>Indexes : Cr\u00e9ation et utilisation strat\u00e9gique d'index pour acc\u00e9l\u00e9rer des requ\u00eates sp\u00e9cifiques</li> </ul>"},{"location":"#cours-6-indexation-avancee-et-optimisation","title":"\ud83d\udd10 Cours 6 : Indexation Avanc\u00e9e et Optimisation","text":"<p>Techniques d'optimisation des bases de donn\u00e9es en explorant l'indexation avanc\u00e9e, l'analyse des plans d'ex\u00e9cution et les strat\u00e9gies de performance pour les applications \u00e0 forte charge.</p> <ul> <li>Th\u00e8mes abord\u00e9s :</li> <li>Indexation avanc\u00e9e et indexation sur plusieurs colonnes</li> <li>Compromis entre espace disque et performance des requ\u00eates</li> <li>Analyse des goulots d'\u00e9tranglement avec EXPLAIN QUERY PLAN</li> <li> <p>Concurrence et transactions pour l'int\u00e9grit\u00e9 des donn\u00e9es</p> </li> <li> <p>Exercices pratiques :</p> </li> <li>Harvard : Optimisation d'une base de donn\u00e9es universitaire de cours avec cr\u00e9ation d'index strat\u00e9giques</li> <li>Snap : \u00c9criture de requ\u00eates efficaces pour une application de messagerie utilisant des index existants</li> </ul>"},{"location":"#cours-7-systemes-de-gestion-de-bases-de-donnees-avances","title":"\ud83c\udf10 Cours 7 : Syst\u00e8mes de Gestion de Bases de Donn\u00e9es Avanc\u00e9s","text":"<p>Diff\u00e9rents syst\u00e8mes de gestion de bases de donn\u00e9es, leurs caract\u00e9ristiques sp\u00e9cifiques et les techniques avanc\u00e9es pour la mise \u00e0 l'\u00e9chelle des applications.</p> <ul> <li>Th\u00e8mes abord\u00e9s :</li> <li>Diff\u00e9rences entre SQLite, MySQL, PostgreSQL et MariaDB</li> <li>Types de donn\u00e9es sp\u00e9cialis\u00e9s comme JSONB dans PostgreSQL</li> <li>Proc\u00e9dures stock\u00e9es et fonctions personnalis\u00e9es</li> <li> <p>Strat\u00e9gies de partitionnement et mise \u00e0 l'\u00e9chelle horizontale</p> </li> <li> <p>Exercices pratiques :</p> </li> <li>LinkedIn : Conception d'un sch\u00e9ma complexe inspir\u00e9 de LinkedIn avec MySQL</li> <li>From the Deep : Impl\u00e9mentation de strat\u00e9gies de partitionnement pour g\u00e9rer des donn\u00e9es volumineuses</li> <li>Don't Panic Python : Interaction avec des bases de donn\u00e9es via Python et protection contre les injections SQL</li> </ul> <p>FOR LATER documentation de connexion aux bases de donn\u00e9es </p>"},{"location":"cours0/","title":"Introduction aux Donn\u00e9es et aux Bases de Donn\u00e9es","text":""},{"location":"cours0/#1-quest-ce-quune-donnee","title":"1. Qu'est-ce qu'une Donn\u00e9e ?","text":""},{"location":"cours0/#definition","title":"D\u00e9finition","text":"<p>Une donn\u00e9e (data) est une information brute, non interpr\u00e9t\u00e9e, qui peut \u00eatre stock\u00e9e et trait\u00e9e par un ordinateur. Elle repr\u00e9sente des faits, des concepts, des mesures ou des instructions sous une forme qui peut \u00eatre communiqu\u00e9e, interpr\u00e9t\u00e9e et trait\u00e9e.</p>"},{"location":"cours0/#caracteristiques-des-donnees","title":"Caract\u00e9ristiques des donn\u00e9es","text":"<ul> <li>Objectivit\u00e9 : Les donn\u00e9es sont des faits bruts, sans interpr\u00e9tation ni contexte</li> <li>Atomicit\u00e9 : Une donn\u00e9e est g\u00e9n\u00e9ralement la plus petite unit\u00e9 d'information utilisable</li> <li>Persistance : Les donn\u00e9es peuvent \u00eatre stock\u00e9es pour une utilisation ult\u00e9rieure</li> <li>Transformabilit\u00e9 : Elles peuvent \u00eatre transform\u00e9es en information utile apr\u00e8s traitement</li> </ul>"},{"location":"cours0/#types-de-valeurs-de-donnees","title":"Types de valeurs de donn\u00e9es","text":"<ol> <li>Donn\u00e9es num\u00e9riques (Numeric Data)</li> <li>Entiers (Integers) (ex: 1, 42, -7) : nombres sans partie d\u00e9cimale</li> <li>R\u00e9els/Flottants (Floats) (ex: 3.14, 0.5, -2.75) : nombres avec partie d\u00e9cimale</li> <li> <p>Bool\u00e9ens (Booleans) (Vrai/Faux, 1/0) : valeurs binaires repr\u00e9sentant une condition</p> </li> <li> <p>Donn\u00e9es alphanum\u00e9riques (Alphanumeric Data)</p> </li> <li>Cha\u00eenes de caract\u00e8res (Strings) (ex: \"Bonjour\", \"Paris\", \"A123\") : s\u00e9quences de caract\u00e8res</li> <li> <p>Caract\u00e8res (Characters) (ex: 'A', '9', '&amp;') : symboles individuels</p> </li> <li> <p>Donn\u00e9es temporelles (Temporal Data)</p> </li> <li>Dates (ex: 2023-10-01) : jour, mois, ann\u00e9e</li> <li>Heures (Times) (ex: 14:30:00) : heure, minute, seconde</li> <li> <p>Horodatages (Timestamps) (ex: 2023-10-01 14:30:00) : combinaison date et heure</p> </li> <li> <p>Donn\u00e9es sp\u00e9ciales (Special Data)</p> </li> <li>BLOB (Binary Large Object) : images, fichiers audio, vid\u00e9os</li> <li>Donn\u00e9es g\u00e9ospatiales (Geospatial Data) : coordonn\u00e9es, formes, r\u00e9gions</li> <li>Donn\u00e9es JSON/XML : structures hi\u00e9rarchiques de donn\u00e9es</li> </ol>"},{"location":"cours0/#exemples-concrets-de-donnees","title":"Exemples concrets de donn\u00e9es","text":"<ul> <li>Informations personnelles :</li> <li>Nom : \"Alice Dupont\"</li> <li>\u00c2ge : 30</li> <li>Adresse email : alice.dupont@example.com</li> <li> <p>Num\u00e9ro de t\u00e9l\u00e9phone : +33 6 12 34 56 78</p> </li> <li> <p>Donn\u00e9es de transaction :</p> </li> <li>Identifiant de transaction : TX-12345</li> <li>Date : 2023-10-01</li> <li>Montant : 150,75 \u20ac</li> <li> <p>M\u00e9thode de paiement : \"Carte de cr\u00e9dit\"</p> </li> <li> <p>Donn\u00e9es m\u00e9t\u00e9orologiques :</p> </li> <li>Temp\u00e9rature : 22,5\u00b0C</li> <li>Humidit\u00e9 : 65%</li> <li>Vitesse du vent : 12 km/h</li> <li> <p>Pr\u00e9cipitations : 0 mm</p> </li> <li> <p>Donn\u00e9es de produit :</p> </li> <li>Code produit : \"PRD-789\"</li> <li>Nom : \"Smartphone Galaxy S23\"</li> <li>Prix : 899,99 \u20ac</li> <li>Stock disponible : 45 unit\u00e9s</li> </ul>"},{"location":"cours0/#le-cycle-de-vie-des-donnees","title":"Le cycle de vie des donn\u00e9es","text":"<ol> <li>Cr\u00e9ation/Acquisition : collecte de donn\u00e9es brutes</li> <li>Stockage : enregistrement dans un support (disque dur, base de donn\u00e9es)</li> <li>Traitement : nettoyage, transformation, agr\u00e9gation</li> <li>Analyse : extraction d'informations utiles</li> <li>Visualisation/Utilisation : pr\u00e9sentation des r\u00e9sultats</li> <li>Archivage/Suppression : conservation \u00e0 long terme ou effacement</li> </ol>"},{"location":"cours0/#2-types-de-bases-de-donnees","title":"2. Types de Bases de Donn\u00e9es","text":"<p>Une base de donn\u00e9es (database) est une collection organis\u00e9e de donn\u00e9es structur\u00e9es, stock\u00e9es \u00e9lectroniquement dans un syst\u00e8me informatique. Elle est con\u00e7ue pour stocker, g\u00e9rer et r\u00e9cup\u00e9rer efficacement des informations.</p>"},{"location":"cours0/#a-bases-de-donnees-relationnelles-relational-databases","title":"a. Bases de Donn\u00e9es Relationnelles (Relational Databases)","text":""},{"location":"cours0/#structure-et-principes","title":"Structure et principes","text":"<ul> <li>Tables (ou relations) : les donn\u00e9es sont organis\u00e9es en tableaux compos\u00e9s de lignes (enregistrements) et de colonnes (attributs)</li> <li>Sch\u00e9ma : structure pr\u00e9d\u00e9finie qui sp\u00e9cifie les types de donn\u00e9es pour chaque colonne</li> <li>Cl\u00e9s primaires (Primary Keys) : identifiants uniques pour chaque enregistrement</li> <li>Cl\u00e9s \u00e9trang\u00e8res (Foreign Keys) : r\u00e9f\u00e9rences aux cl\u00e9s primaires d'autres tables, cr\u00e9ant des relations</li> <li>Normalisation : processus d'organisation des donn\u00e9es pour r\u00e9duire la redondance</li> </ul>"},{"location":"cours0/#types-de-relations","title":"Types de relations","text":"<ul> <li>One-to-One (1:1) : Une ligne d'une table est associ\u00e9e \u00e0 une seule ligne d'une autre table.</li> <li>Exemple : Une personne a un seul passeport, et un passeport appartient \u00e0 une seule personne.</li> <li>One-to-Many (1:N) : Une ligne d'une table est associ\u00e9e \u00e0 plusieurs lignes d'une autre table.</li> <li>Exemple : Un auteur peut \u00e9crire plusieurs livres, mais chaque livre a un seul auteur.</li> <li>Many-to-Many (N:N) : Plusieurs lignes d'une table sont associ\u00e9es \u00e0 plusieurs lignes d'une autre table.</li> <li>Exemple : Des \u00e9tudiants peuvent s'inscrire \u00e0 plusieurs cours, et chaque cours peut avoir plusieurs \u00e9tudiants.</li> </ul>"},{"location":"cours0/#caracteristiques-principales","title":"Caract\u00e9ristiques principales","text":"<ul> <li>Langage SQL (Structured Query Language) pour interagir avec les donn\u00e9es</li> <li>Jointures (Joins) entre tables pour combiner des donn\u00e9es connexes</li> <li>Contraintes d'int\u00e9grit\u00e9 pour assurer la qualit\u00e9 des donn\u00e9es</li> </ul>"},{"location":"cours0/#exemples-de-sgbdr-populaires","title":"Exemples de SGBDR populaires","text":"<ul> <li>MySQL : open-source, tr\u00e8s utilis\u00e9 pour les applications web</li> <li>PostgreSQL : open-source, fonctionnalit\u00e9s avanc\u00e9es, extensible</li> <li>Oracle Database : solution d'entreprise robuste, fonctionnalit\u00e9s compl\u00e8tes</li> <li>Microsoft SQL Server : bien int\u00e9gr\u00e9 \u00e0 l'\u00e9cosyst\u00e8me Microsoft</li> <li>SQLite : base de donn\u00e9es l\u00e9g\u00e8re, int\u00e9gr\u00e9e \u00e0 l'application, sans serveur</li> </ul>"},{"location":"cours0/#exemple-simplifie","title":"Exemple simplifi\u00e9","text":""},{"location":"cours0/#1-relationnel","title":"1. Relationnel","text":""},{"location":"cours0/#table-clients","title":"Table Clients:","text":"<pre><code>| ID_Client | Nom     | Pr\u00e9nom  | Email               | T\u00e9l\u00e9phone      |\n|-----------|---------|---------|---------------------|----------------|\n| 1         | Dupont  | Marie   | marie.d@example.com | +33612345678   |\n| 2         | Martin  | Jean    | jean.m@example.com  | +33698765432   |\n| 3         | Durand  | Sophie  | sophie.d@example.com| +33655555555   |\n</code></pre>"},{"location":"cours0/#table-vendeurs","title":"Table Vendeurs:","text":"<pre><code>| ID_Vendeur | Nom     | Pr\u00e9nom  | Email               | T\u00e9l\u00e9phone      |\n|------------|---------|---------|---------------------|----------------|\n| 1          | Lefevre | Pierre  | pierre.l@example.com| +33611111111   |\n| 2          | Moreau  | Paul    | paul.m@example.com  | +33622222222   |\n| 3          | Cheval  | Claire  | claire.c@example.com| +33633333333   |\n</code></pre>"},{"location":"cours0/#table-commandes","title":"Table Commandes:","text":"<pre><code>| ID_Commande | ID_Client | ID_Vendeur | Date       | Montant | Statut      |\n|-------------|-----------|------------|------------|---------|-------------|\n| 101         | 1         | 1          | 2023-09-15 | 125,50  | Livr\u00e9       |\n| 102         | 2         | 2          | 2023-09-20 | 78,90   | En cours    |\n| 103         | 1         | 1          | 2023-10-01 | 45,00   | En attente  |\n| 104         | 3         | 3          | 2023-10-05 | 200,00  | Livr\u00e9       |\n| 105         | 2         | 2          | 2023-10-10 | 99,99   | En cours    |\n| 106         | 3         | 1          | 2023-10-15 | 50,00   | En attente  |\n</code></pre>"},{"location":"cours0/#2-non-relationel-excel","title":"2. Non-Relationel (Excel)","text":"ID_Commande ID_Client Nom_Client Pr\u00e9nom_Client Email_Client T\u00e9l\u00e9phone_Client ID_Vendeur Nom_Vendeur Pr\u00e9nom_Vendeur Email_Vendeur T\u00e9l\u00e9phone_Vendeur Date Montant Statut 101 1 Dupont Marie marie.d@example.com +33612345678 1 Lefevre Pierre pierre.l@example.com +33611111111 2023-09-15 125,50 Livr\u00e9 102 2 Martin Jean jean.m@example.com +33698765432 2 Moreau Paul paul.m@example.com +33622222222 2023-09-20 78,90 En cours 103 1 Dupont Marie marie.d@example.com +33612345678 1 Lefevre Pierre pierre.l@example.com +33611111111 2023-10-01 45,00 En attente 104 3 Durand Sophie sophie.d@example.com +33655555555 3 Cheval Claire claire.c@example.com +33633333333 2023-10-05 200,00 Livr\u00e9 105 2 Martin Jean jean.m@example.com +33698765432 2 Moreau Paul paul.m@example.com +33622222222 2023-10-10 99,99 En cours 106 3 Durand Sophie sophie.d@example.com +33655555555 1 Lefevre Pierre pierre.l@example.com +33611111111 2023-10-15 50,00 En attente"},{"location":"cours0/#b-bases-de-donnees-hierarchiques-hierarchical-databases","title":"b. Bases de Donn\u00e9es Hi\u00e9rarchiques (Hierarchical Databases)","text":""},{"location":"cours0/#structure-et-principes_1","title":"Structure et principes","text":"<ul> <li>Organisation arborescente des donn\u00e9es (structure parent-enfant)</li> <li>Chaque enregistrement (n\u0153ud) a un seul parent, mais peut avoir plusieurs enfants</li> <li>Les donn\u00e9es sont acc\u00e9d\u00e9es en suivant un chemin hi\u00e9rarchique depuis la racine</li> </ul>"},{"location":"cours0/#caracteristiques-principales_1","title":"Caract\u00e9ristiques principales","text":"<ul> <li>Simplicit\u00e9 conceptuelle facile \u00e0 comprendre</li> <li>Acc\u00e8s rapide aux donn\u00e9es lorsque la structure hi\u00e9rarchique est connue</li> <li>Relations un-\u00e0-plusieurs bien g\u00e9r\u00e9es</li> <li>Navigation efficace de parent \u00e0 enfant</li> </ul>"},{"location":"cours0/#exemples-de-sgbd-hierarchiques","title":"Exemples de SGBD hi\u00e9rarchiques","text":"<ul> <li>IBM Information Management System (IMS) : utilis\u00e9 dans les mainframes</li> <li>Windows Registry : stockage hi\u00e9rarchique de la configuration Windows</li> <li>Syst\u00e8mes de fichiers : organisation des fichiers et dossiers</li> </ul>"},{"location":"cours0/#cas-dutilisation-typiques","title":"Cas d'utilisation typiques","text":"<ul> <li>Syst\u00e8mes bancaires traditionnels</li> <li>Syst\u00e8mes de gestion de documents</li> <li>Applications n\u00e9cessitant une navigation verticale rapide</li> </ul>"},{"location":"cours0/#exemple-simplifie_1","title":"Exemple simplifi\u00e9","text":"<pre><code>Organisation (Racine)\n\u251c\u2500\u2500 D\u00e9partement Marketing\n\u2502   \u251c\u2500\u2500 \u00c9quipe M\u00e9dias Sociaux\n\u2502   \u2502   \u251c\u2500\u2500 Employ\u00e9: Alice\n\u2502   \u2502   \u2514\u2500\u2500 Employ\u00e9: Bob\n\u2502   \u2514\u2500\u2500 \u00c9quipe Publicit\u00e9\n\u2502       \u2514\u2500\u2500 Employ\u00e9: Charles\n\u2514\u2500\u2500 D\u00e9partement Technique\n    \u251c\u2500\u2500 \u00c9quipe D\u00e9veloppement\n    \u2502   \u251c\u2500\u2500 Employ\u00e9: David\n    \u2502   \u2514\u2500\u2500 Employ\u00e9: Emma\n    \u2514\u2500\u2500 \u00c9quipe Infrastructure\n        \u2514\u2500\u2500 Employ\u00e9: Frank\n</code></pre>"},{"location":"cours0/#c-bases-de-donnees-reseau-network-databases","title":"c. Bases de Donn\u00e9es R\u00e9seau (Network Databases)","text":""},{"location":"cours0/#structure-et-principes_2","title":"Structure et principes","text":"<ul> <li>Extension du mod\u00e8le hi\u00e9rarchique permettant des relations plusieurs-\u00e0-plusieurs</li> <li>Les enregistrements sont organis\u00e9s en \"ensembles\" o\u00f9 un enregistrement propri\u00e9taire peut \u00eatre li\u00e9 \u00e0 plusieurs enregistrements membres</li> <li>Un enregistrement membre peut appartenir \u00e0 plusieurs ensembles (contrairement au mod\u00e8le hi\u00e9rarchique)</li> </ul>"},{"location":"cours0/#caracteristiques-principales_2","title":"Caract\u00e9ristiques principales","text":"<ul> <li>Flexibilit\u00e9 dans la repr\u00e9sentation des relations complexes</li> <li>Navigation bidirectionnelle entre les enregistrements li\u00e9s</li> <li>Performances optimis\u00e9es pour les chemins d'acc\u00e8s pr\u00e9d\u00e9finis</li> </ul>"},{"location":"cours0/#exemples-de-sgbd-reseau","title":"Exemples de SGBD r\u00e9seau","text":"<ul> <li>Integrated Data Store (IDS) d\u00e9velopp\u00e9 par Charles Bachman</li> <li>IDMS (Integrated Database Management System)</li> <li>RDM Embedded (pour syst\u00e8mes embarqu\u00e9s)</li> </ul>"},{"location":"cours0/#cas-dutilisation-typiques_1","title":"Cas d'utilisation typiques","text":"<ul> <li>Applications industrielles complexes</li> <li>Syst\u00e8mes de fabrication</li> <li>Certains syst\u00e8mes bancaires h\u00e9rit\u00e9s</li> </ul>"},{"location":"cours0/#exemple-simplifie_2","title":"Exemple simplifi\u00e9","text":"<pre><code>\u00c9tudiants                     Cours\n  \u2502                              \u2502\nAlice \u2500\u2500 [inscription] \u2500\u2500&gt; Math\u00e9matiques\n  \u2502                              \u2502\n  \u2502\u2500\u2500 [inscription] \u2500\u2500&gt; Sciences\n  \u2502\nBob \u2500\u2500 [inscription] \u2500\u2500&gt; Histoire\n  \u2502\nCharlie \u2500\u2500 [inscription] \u2500\u2500&gt; Math\u00e9matiques\n  \u2502                              \u2502\n  \u2502\u2500\u2500 [inscription] \u2500\u2500&gt; Histoire\n\n</code></pre>"},{"location":"cours0/#d-bases-de-donnees-orientees-objet-object-oriented-databases","title":"d. Bases de Donn\u00e9es Orient\u00e9es Objet (Object-Oriented Databases)","text":""},{"location":"cours0/#structure-et-principes_3","title":"Structure et principes","text":"<ul> <li>Donn\u00e9es stock\u00e9es sous forme d'objets, comme dans la programmation orient\u00e9e objet</li> <li>Les objets encapsulent \u00e0 la fois les donn\u00e9es (attributs) et les comportements (m\u00e9thodes)</li> <li>H\u00e9ritage et polymorphisme sont support\u00e9s</li> <li>Identit\u00e9 d'objet unique pour chaque instance</li> </ul>"},{"location":"cours0/#caracteristiques-principales_3","title":"Caract\u00e9ristiques principales","text":"<ul> <li>Correspondance directe avec les langages orient\u00e9s objet</li> <li>Types de donn\u00e9es complexes facilement repr\u00e9sentables</li> <li>Encapsulation des donn\u00e9es et comportements</li> </ul>"},{"location":"cours0/#exemples-de-sgbd-orientes-objet","title":"Exemples de SGBD orient\u00e9s objet","text":"<ul> <li>db4o (database for objects)</li> <li>ObjectDB</li> <li>Versant Object Database</li> <li>ObjectStore</li> </ul>"},{"location":"cours0/#cas-dutilisation-typiques_2","title":"Cas d'utilisation typiques","text":"<ul> <li>Applications de CAO (Conception Assist\u00e9e par Ordinateur)</li> <li>Syst\u00e8mes multim\u00e9dias</li> <li>Applications scientifiques avec structures de donn\u00e9es complexes</li> </ul>"},{"location":"cours0/#exemple-simplifie_3","title":"Exemple simplifi\u00e9","text":"<pre><code># D\u00e9finition d'une classe (objet)\nclass Personne:\n    def __init__(self, nom: str, prenom: str, date_naissance: date, contacts: List[str] = None):\n        self.nom = nom\n        self.prenom = prenom\n        self.date_naissance = date_naissance\n        self.contacts = contacts if contacts is not None else []\n\n    def calculer_age(self) -&gt; int:\n        # M\u00e9thode pour calculer l'\u00e2ge\n        today = date.today()\n        age = today.year - self.date_naissance.year\n        if (today.month, today.day) &lt; (self.date_naissance.month, self.date_naissance.day):\n            age -= 1\n        return age\n\n# Exemple d'utilisation\npers1 = Personne(\"Dupont\", \"Marie\", date(1985, 5, 15))\n</code></pre>"},{"location":"cours0/#e-bases-de-donnees-nosql-nosql-databases","title":"e. Bases de Donn\u00e9es NoSQL (NoSQL Databases)","text":""},{"location":"cours0/#structure-et-principes_4","title":"Structure et principes","text":"<ul> <li>\"Not Only SQL\" : alternatives aux bases de donn\u00e9es relationnelles</li> <li>Sch\u00e9ma flexible ou sans sch\u00e9ma pr\u00e9d\u00e9fini</li> <li>Con\u00e7ues pour la scalabilit\u00e9 horizontale (distribution sur plusieurs serveurs)</li> <li>Optimis\u00e9es pour des cas d'utilisation sp\u00e9cifiques</li> </ul>"},{"location":"cours0/#types-principaux-de-bases-de-donnees-nosql","title":"Types principaux de bases de donn\u00e9es NoSQL","text":"<ol> <li> <p>Bases de donn\u00e9es orient\u00e9es documents (Document-Oriented Databases)</p> </li> <li> <p>Stockent des documents (g\u00e9n\u00e9ralement JSON ou BSON)</p> </li> <li>Chaque document contient toutes ses donn\u00e9es associ\u00e9es</li> <li>Exemples : MongoDB, CouchDB, Firestore</li> <li>Cas d'utilisation : applications web, catalogues, gestion de contenu</li> </ol> <p>Exemple (document JSON):    <code>json    [      {        \"id\": \"client-123\",        \"nom\": \"Dupont\",        \"prenom\": \"Marie\",        \"email\": \"marie.d@example.com\",        \"adresses\": [          {            \"type\": \"livraison\",            \"rue\": \"123 rue de Paris\",            \"ville\": \"Lyon\"          },          {            \"type\": \"facturation\",            \"rue\": \"45 avenue Victor Hugo\",            \"ville\": \"Paris\"          }        ]      },      {        \"id\": \"client-124\",        \"nom\": \"Martin\",        \"prenom\": \"Jean\",        \"email\": \"jean.m@example.com\",        \"adresse\": {          \"type\": \"principale\",          \"rue\": \"78 boulevard Saint-Germain\",          \"ville\": \"Marseille\"        }      }    ]</code></p> <ol> <li>Bases de donn\u00e9es cl\u00e9-valeur (Key-Value Databases)</li> <li>Stockent des paires cl\u00e9-valeur simples</li> <li>Tr\u00e8s rapides pour les op\u00e9rations de lecture/\u00e9criture</li> <li>Exemples : Redis, DynamoDB, Riak</li> <li>Cas d'utilisation : caching, sessions utilisateur, pr\u00e9f\u00e9rences</li> </ol> <p>Exemple:    ```    client-123:nom = \"Dupont\"    client-123:prenom = \"Marie\"    client-123:email = \"marie.d@example.com\"    client-123:adresse:livraison:rue = \"123 rue de Paris\"    client-123:adresse:livraison:ville = \"Lyon\"    client-123:adresse:facturation:rue = \"45 avenue Victor Hugo\"    client-123:adresse:facturation:ville = \"Paris\"</p> <p>or </p> <p>client-123 = {      \"nom\": \"Dupont\",      \"prenom\": \"Marie\",      \"email\": \"marie.d@example.com\",      \"adresses\": [        {          \"type\": \"livraison\",          \"rue\": \"123 rue de Paris\",          \"ville\": \"Lyon\"        },        {          \"type\": \"facturation\",          \"rue\": \"45 avenue Victor Hugo\",          \"ville\": \"Paris\"        }      ]    }    ```</p> <ol> <li> <p>Bases de donn\u00e9es en colonnes (Column-Family Databases)</p> </li> <li> <p>Stockent les donn\u00e9es par colonnes plut\u00f4t que par lignes</p> </li> <li>Optimis\u00e9es pour les requ\u00eates analytiques sur de grands volumes</li> <li>Exemples : Cassandra, HBase, Google Bigtable</li> <li> <p>Cas d'utilisation : analyses big data, s\u00e9ries temporelles, t\u00e9l\u00e9m\u00e9trie</p> </li> <li> <p>Bases de donn\u00e9es orient\u00e9es graphes (Graph Databases)</p> </li> <li>Stockent des entit\u00e9s (n\u0153uds) et leurs relations (ar\u00eates)</li> <li>Optimis\u00e9es pour explorer les relations entre donn\u00e9es</li> <li>Exemples : Neo4j, JanusGraph, Amazon Neptune</li> <li>Cas d'utilisation : r\u00e9seaux sociaux, syst\u00e8mes de recommandation, d\u00e9tection de fraude</li> </ol> <p>Exemple simplifi\u00e9:    <code>(Personne:Marie)-[:AMI_DE]-&gt;(Personne:Jean)</code></p>"},{"location":"cours0/#caracteristiques-communes-des-bases-nosql","title":"Caract\u00e9ristiques communes des bases NoSQL","text":"<ul> <li>Scalabilit\u00e9 horizontale : capacit\u00e9 \u00e0 distribuer les donn\u00e9es sur plusieurs serveurs</li> <li>Haute disponibilit\u00e9 : souvent con\u00e7ues pour \u00e9viter les points de d\u00e9faillance uniques</li> <li>Performances \u00e9lev\u00e9es pour certains types d'op\u00e9rations sp\u00e9cifiques</li> <li>Coh\u00e9rence \u00e9ventuelle plut\u00f4t que transactions ACID strictes (dans de nombreux cas)</li> </ul>"},{"location":"cours0/histoire/","title":"SQL : Une Histoire et un Avenir Strat\u00e9gique \ud83d\udd70\ufe0f","text":""},{"location":"cours0/histoire/#origines-historiques","title":"Origines Historiques","text":"<p>SQL (Structured Query Language) a \u00e9t\u00e9 d\u00e9velopp\u00e9 initialement par IBM dans les ann\u00e9es 1970, bas\u00e9 sur le mod\u00e8le relationnel cr\u00e9\u00e9 par Edgar F. Codd en 1970. Le premier prototype, appel\u00e9 SEQUEL (Structured English Query Language), a \u00e9t\u00e9 con\u00e7u par Donald D. Chamberlin et Raymond F. Boyce.</p>"},{"location":"cours0/histoire/#normalisation-et-standards","title":"Normalisation et Standards","text":"<ul> <li>ANSI (American National Standards Institute) :</li> <li>En 1986, ANSI a standardis\u00e9 SQL, d\u00e9finissant un ensemble commun de r\u00e8gles et de syntaxes pour le langage</li> <li>ISO (International Organization for Standardization) :</li> <li>En 1987, ISO a adopt\u00e9 la norme ANSI de SQL comme standard international</li> <li>En 1989, SQL devient officiellement un standard international (ISO/IEC 9075)</li> </ul>"},{"location":"cours0/histoire/#importance-actuelle-en-entreprise","title":"Importance Actuelle en Entreprise \ud83d\udcbc","text":""},{"location":"cours0/histoire/#traitement-des-donnees","title":"Traitement des Donn\u00e9es","text":"<p>SQL reste le langage standard pour :</p> <ul> <li>La gestion des bases de donn\u00e9es relationnelles</li> <li>L'analyse de donn\u00e9es complexes</li> <li>L'extraction et la manipulation d'informations strat\u00e9giques</li> </ul>"},{"location":"cours0/histoire/#omnipresence-sur-le-marche-du-travail","title":"Omnipr\u00e9sence sur le March\u00e9 du Travail \ud83d\udcca","text":"<p>Statistiques LinkedIn France (Mars 2025) :</p> <ul> <li>SQL : 60,671 offres d'emploi</li> <li>Python : 43,372 offres d'emploi</li> <li>Excel : 27,870 offres d'emploi</li> </ul> <p>Ces chiffres d\u00e9montrent clairement que SQL est un comp\u00e9tence critique pour les professionnels de la data et des syst\u00e8mes d'information.</p>"},{"location":"cours0/histoire/#secteurs-cles-utilisant-sql","title":"Secteurs Cl\u00e9s Utilisant SQL","text":"<ol> <li>Finance</li> <li>Tech</li> <li>Sant\u00e9</li> <li>E-commerce</li> <li>T\u00e9l\u00e9communications</li> <li>Administrations publiques</li> </ol>"},{"location":"cours0/histoire/#pourquoi-apprendre-sql-aujourdhui","title":"Pourquoi Apprendre SQL Aujourd'hui ? \ud83d\ude80","text":"<ul> <li>Comp\u00e9tence universelle dans la gestion de donn\u00e9es</li> <li>Facilit\u00e9 de lecture et d'\u00e9criture des requ\u00eates</li> <li>N\u00e9cessaire pour la prise de d\u00e9cision strat\u00e9gique</li> <li>Int\u00e9gration avec de nombreux outils modernes (BI, Data Science)</li> </ul>"},{"location":"cours1/","title":"Introduction","text":""},{"location":"cours1/#cours-1","title":"Cours 1","text":"<ul> <li>Introduction</li> <li>Qu'est-ce qu'une base de donn\u00e9es ?</li> <li>SQL</li> <li>D\u00e9marrer avec SQLite</li> <li>Conseils pour le terminal</li> <li><code>SELECT</code></li> <li><code>LIMIT</code></li> <li><code>WHERE</code></li> <li><code>NULL</code></li> <li><code>LIKE</code></li> <li>Plages</li> <li><code>ORDER BY</code></li> <li>Fonctions d'agr\u00e9gation</li> </ul> <p>Vid\u00e9o en anglais (facultatif)</p>"},{"location":"cours1/#introduction","title":"Introduction","text":"<ul> <li>Les bases de donn\u00e9es (et SQL) sont des outils qui peuvent \u00eatre utilis\u00e9s pour interagir avec, stocker et g\u00e9rer des informations. Bien que les outils que nous utilisons dans ce cours soient nouveaux, une base de donn\u00e9es est une id\u00e9e ancienne.</li> <li>Regardez ce diagramme vieux de quelques milliers d'ann\u00e9es. Il a des lignes et des colonnes, et semble contenir des indemnit\u00e9s pour les travailleurs d'un temple. On pourrait appeler ce diagramme un tableau, ou m\u00eame une feuille de calcul.</li> </ul> <ul> <li>Sur la base de ce que nous voyons dans le diagramme ci-dessus, nous pouvons conclure que :<ul> <li>Un tableau stocke un ensemble d'informations (ici, les indemnit\u00e9s des travailleurs).</li> <li>Chaque ligne d'un tableau stocke un \u00e9l\u00e9ment de cet ensemble (ici, un travailleur).</li> <li>Chaque colonne a un attribut de cet \u00e9l\u00e9ment (ici, l'indemnit\u00e9 pour un mois particulier).</li> </ul> </li> <li>Consid\u00e9rons maintenant un contexte moderne. Disons que vous \u00eates biblioth\u00e9caire et que vous devez organiser des informations sur les titres de livres et les auteurs dans ce diagramme.</li> </ul> <ul> <li>Une fa\u00e7on d'organiser les informations serait d'avoir chaque titre de livre suivi de son auteur, comme ci-dessous.</li> </ul> <pre><code>- Notez que chaque livre est maintenant une ligne dans ce tableau.\n- Chaque ligne a deux colonnes \u2014 chacune un attribut diff\u00e9rent du livre (titre du livre et auteur).\n</code></pre> <ul> <li>\u00c0 l'\u00e8re de l'information d'aujourd'hui, nous pouvons stocker nos tableaux en utilisant des logiciels comme Google Sheets au lieu de papier\ud83d\udcdd ou de tablettes en pierre\ud83e\udea8. Cependant, dans ce cours, nous parlerons de bases de donn\u00e9es et non de feuilles de calcul.</li> <li>Trois raisons de passer des feuilles de calcul aux bases de donn\u00e9es sont :<ul> <li>\u00c9chelle : Les bases de donn\u00e9es peuvent stocker non seulement des \u00e9l\u00e9ments se comptant en dizaines de milliers, mais aussi en millions et en milliards.</li> <li>Capacit\u00e9 de mise \u00e0 jour : Les bases de donn\u00e9es sont capables de g\u00e9rer plusieurs mises \u00e0 jour de donn\u00e9es par seconde.</li> <li>Vitesse : Les bases de donn\u00e9es permettent une recherche plus rapide des informations. Cela est d\u00fb au fait que les bases de donn\u00e9es nous donnent acc\u00e8s \u00e0 diff\u00e9rents algorithmes pour r\u00e9cup\u00e9rer des informations. En revanche, les feuilles de calcul permettent uniquement l'utilisation de Ctrl+F ou Cmd+F pour parcourir les r\u00e9sultats un par un.</li> </ul> </li> </ul>"},{"location":"cours1/#quest-ce-quune-base-de-donnees","title":"Qu'est-ce qu'une base de donn\u00e9es ?","text":"<ul> <li>CRUD: Une base de donn\u00e9es est un moyen d'organiser des donn\u00e9es de mani\u00e8re \u00e0 pouvoir effectuer quatre op\u00e9rations sur celles-ci :<ul> <li>CREATE (cr\u00e9er)</li> <li>READ (lire)</li> <li>UPDATE (mettre \u00e0 jour)</li> <li>DELETE (supprimer)</li> </ul> </li> <li>Un syst\u00e8me de gestion de base de donn\u00e9es (DBMS) est un moyen d'interagir avec une base de donn\u00e9es en utilisant une interface graphique ou un langage textuel.</li> <li>Exemples de DBMS : MySQL, Oracle, PostgreSQL, SQLite, Microsoft Access, MongoDB, etc.</li> <li>Le choix d'un DBMS d\u00e9pend de facteurs tels que :<ul> <li>Co\u00fbt : logiciel propri\u00e9taire vs logiciel gratuit,</li> <li>Quantit\u00e9 de support : les logiciels libres et open source comme MySQL, PostgreSQL et SQLite ont l'inconv\u00e9nient de devoir configurer la base de donn\u00e9es soi-m\u00eame,</li> <li>Poids : les syst\u00e8mes plus complets comme MySQL ou PostgreSQL sont plus lourds et n\u00e9cessitent plus de calculs pour fonctionner que des syst\u00e8mes comme SQLite.</li> </ul> </li> <li>Dans ce cours, nous commencerons par SQLite, puis nous passerons \u00e0 MySQL et PostgreSQL.</li> </ul>"},{"location":"cours1/#sql","title":"SQL","text":"<ul> <li>SQL signifie Structured Query Language (langage de requ\u00eate structur\u00e9). C'est un langage utilis\u00e9 pour interagir avec les bases de donn\u00e9es, gr\u00e2ce auquel vous pouvez cr\u00e9er, lire, mettre \u00e0 jour et supprimer des donn\u00e9es dans une base de donn\u00e9es. Quelques points importants sur SQL :<ul> <li>il est structur\u00e9, comme nous le verrons dans ce cours,</li> <li>il a certains mots-cl\u00e9s qui peuvent \u00eatre utilis\u00e9s pour interagir avec la base de donn\u00e9es, et</li> <li>c'est un langage de requ\u00eate \u2014 il peut \u00eatre utilis\u00e9 pour poser des questions sur les donn\u00e9es \u00e0 l'int\u00e9rieur d'une base de donn\u00e9es.</li> </ul> </li> <li>Dans cette le\u00e7on, nous apprendrons \u00e0 \u00e9crire quelques requ\u00eates SQL simples.</li> </ul>"},{"location":"cours1/#demarrer-avec-sqlite","title":"D\u00e9marrer avec SQLite","text":"<ul> <li>Il est utile de noter que SQLite n'est pas seulement quelque chose que nous utilisons pour ce cours, mais une base de donn\u00e9es utilis\u00e9e dans de nombreuses autres applications, y compris les t\u00e9l\u00e9phones, les applications de bureau et les sites web.</li> <li>Consid\u00e9rons maintenant une base de donn\u00e9es de livres qui ont \u00e9t\u00e9 pr\u00e9s\u00e9lectionn\u00e9s pour le Prix International Booker. Chaque ann\u00e9e, il y a 13 livres sur la liste restreinte et notre base de donn\u00e9es contient 5 ann\u00e9es de telles listes restreintes.</li> <li>Avant de commencer \u00e0 interagir avec cette base de donn\u00e9es :<ul> <li>Connectez-vous \u00e0 votre compte github, et ouvrez le lien suivant.</li> <li>Ouvrez le r\u00e9pertoire github dans codespace</li> <li>L'environnement SQLite est d\u00e9j\u00e0 configur\u00e9 dans votre Codespace ! Ouvrez-le dans le terminal.</li> </ul> </li> </ul>"},{"location":"cours1/#conseils-pour-le-terminal","title":"Conseils pour le terminal","text":"<p>Voici quelques commandes essentielles pour naviguer dans le terminal et manipuler SQLite efficacement.</p>"},{"location":"cours1/#commandes-de-base-du-terminal","title":"Commandes de base du terminal","text":"<ul> <li><code>ls</code> - Affiche le contenu du r\u00e9pertoire actuel</li> <li><code>cd dossier</code> - Change de r\u00e9pertoire vers \"dossier\"</li> <li><code>cd ..</code> - Remonte d'un niveau dans l'arborescence</li> <li><code>mkdir nom_dossier</code> - Cr\u00e9e un nouveau dossier</li> <li><code>touch nom_fichier</code> - Cr\u00e9e un nouveau fichier vide</li> <li><code>rm nom_fichier</code> - Supprime un fichier</li> <li><code>rm -r nom_dossier</code> - Supprime un dossier et son contenu</li> <li><code>pwd</code> - Affiche le chemin du r\u00e9pertoire actuel</li> <li><code>cat nom_fichier</code> - Affiche le contenu d'un fichier</li> </ul>"},{"location":"cours1/#astuces-generales-du-terminal","title":"Astuces g\u00e9n\u00e9rales du terminal","text":"<ul> <li>Pour effacer l'\u00e9cran du terminal, appuyez sur <code>Ctrl + L</code></li> <li>Pour acc\u00e9der aux commandes pr\u00e9c\u00e9demment ex\u00e9cut\u00e9es, utilisez la touche <code>\u2191</code> (fl\u00e8che vers le haut)</li> <li>Pour interrompre une commande en cours d'ex\u00e9cution, appuyez sur <code>Ctrl + C</code></li> <li>Pour compl\u00e9ter automatiquement un nom de fichier ou de dossier, utilisez la touche <code>Tab</code></li> </ul>"},{"location":"cours1/#commandes-specifiques-a-sqlite","title":"Commandes sp\u00e9cifiques \u00e0 SQLite","text":"<ul> <li><code>.quit</code> - Quitter l'environnement SQLite</li> <li><code>.help</code> - Afficher l'aide et la liste des commandes disponibles</li> <li><code>.tables</code> - Afficher toutes les tables dans la base de donn\u00e9es</li> <li><code>.schema [nom_table]</code> - Afficher la structure d'une table</li> <li><code>.mode column</code> - Afficher les r\u00e9sultats en colonnes (plus lisible)</li> <li><code>.headers on</code> - Afficher les noms des colonnes dans les r\u00e9sultats</li> <li><code>.mode csv</code> - Afficher les r\u00e9sultats au format CSV</li> <li><code>.mode box</code> - Afficher les r\u00e9sultats dans des cadres (tr\u00e8s lisible)</li> <li><code>.open nom_fichier.db</code> - Ouvrir une base de donn\u00e9es</li> </ul>"},{"location":"cours1/#conseils-pour-les-requetes-sql","title":"Conseils pour les requ\u00eates SQL","text":"<ul> <li>Si votre requ\u00eate SQL est trop longue, vous pouvez appuyer sur <code>Entr\u00e9e</code> et continuer sur la ligne suivante</li> <li>N'oubliez pas de terminer vos requ\u00eates SQL par un point-virgule <code>;</code></li> <li>Pour ex\u00e9cuter un fichier SQL, utilisez <code>.read nom_fichier.sql</code></li> <li>Pour enregistrer les r\u00e9sultats d'une requ\u00eate dans un fichier, utilisez <code>.output nom_fichier.txt</code></li> </ul>"},{"location":"cours1/#select","title":"<code>SELECT</code>","text":"<ul> <li>Quelles donn\u00e9es se trouvent r\u00e9ellement dans notre base de donn\u00e9es ? Pour r\u00e9pondre \u00e0 cette question, nous utiliserons notre premier mot-cl\u00e9 SQL, <code>SELECT</code>, qui nous permet de s\u00e9lectionner certaines (ou toutes) les lignes d'un tableau \u00e0 l'int\u00e9rieur de la base de donn\u00e9es.</li> <li>Dans l'environnement SQLite, ex\u00e9cutez :</li> </ul> <pre><code>SELECT *\nFROM \"longlist\";\n</code></pre> <p>Cela s\u00e9lectionne toutes les lignes du tableau appel\u00e9 <code>longlist</code>.</p> <ul> <li>La sortie que nous obtenons contient toutes les colonnes de toutes les lignes de ce tableau, ce qui repr\u00e9sente beaucoup de donn\u00e9es. Nous pouvons la simplifier en s\u00e9lectionnant une colonne particuli\u00e8re, par exemple le titre, dans le tableau. Essayons :</li> </ul> <pre><code>SELECT \"title\"\nFROM \"longlist\";\n</code></pre> <ul> <li>Maintenant, nous voyons une liste des titres dans ce tableau. Mais que faire si nous voulons voir les titres et les auteurs dans nos r\u00e9sultats de recherche ? Pour cela, nous ex\u00e9cutons :</li> </ul> <pre><code>SELECT \"title\", \"author\"\nFROM longlist;\n</code></pre>"},{"location":"cours1/#limit","title":"<code>LIMIT</code>","text":"<ul> <li>Si une base de donn\u00e9es contient des millions de lignes, il ne serait peut-\u00eatre pas judicieux de s\u00e9lectionner toutes ses lignes. Au lieu de cela, nous pourrions simplement vouloir jeter un coup d'\u0153il aux donn\u00e9es qu'elle contient. Nous utilisons le mot-cl\u00e9 SQL <code>LIMIT</code> pour sp\u00e9cifier le nombre de lignes dans la sortie de la requ\u00eate.</li> <li>```sql SELECT \"title\" FROM \"longlist\" LIMIT 10;</li> </ul> <pre><code>\nCette requ\u00eate nous donne les 10 premiers titres de la base de donn\u00e9es. Les titres sont tri\u00e9s de la m\u00eame mani\u00e8re dans la sortie de cette requ\u00eate que dans la base de donn\u00e9es.\n\n## `WHERE`\n\n- Le mot-cl\u00e9 `WHERE` est utilis\u00e9 pour s\u00e9lectionner des lignes en fonction d'une condition ; il affiche les lignes pour lesquelles la condition sp\u00e9cifi\u00e9e est vraie.\n- ```sql\nSELECT \"title\", \"author\"\nFROM \"longlist\"\nWHERE \"year\" = 2023;\n</code></pre> <p>Cela nous donne les titres et les auteurs des livres pr\u00e9s\u00e9lectionn\u00e9s en 2023. Notez que <code>2023</code> n'est pas entre guillemets car c'est un entier (integer), et non une cha\u00eene de caract\u00e8res (string) ou un identifiant.</p> <ul> <li>Les op\u00e9rateurs qui peuvent \u00eatre utilis\u00e9s pour sp\u00e9cifier des conditions en SQL sont <code>=</code> (\u201c\u00e9gal \u00e0\u201d), <code>!=</code> (\u201cdiff\u00e9rent de\u201d) et <code>&lt;&gt;</code> (\u00e9galement \u201cdiff\u00e9rent de\u201d).</li> <li>Pour s\u00e9lectionner les livres qui ne sont pas des couvertures rigides (hardcovers), nous pouvons ex\u00e9cuter la requ\u00eate :</li> </ul> <pre><code>SELECT \"title\", \"format\"\nFROM \"longlist\"\nWHERE \"format\" != 'hardcover';\n</code></pre> <pre><code>- Notez que `hardcover` est entre guillemets simples car c'est une cha\u00eene de caract\u00e8res SQL et non un identifiant.\n</code></pre> <ul> <li><code>!=</code> peut \u00eatre remplac\u00e9 par l'op\u00e9rateur <code>&lt;&gt;</code> pour obtenir les m\u00eames r\u00e9sultats. La requ\u00eate modifi\u00e9e serait :</li> </ul> <pre><code>SELECT \"title\", \"format\"\nFROM \"longlist\"\nWHERE \"format\" &lt;&gt; 'hardcover';\n</code></pre> <ul> <li>Une autre fa\u00e7on d'obtenir les m\u00eames r\u00e9sultats est d'utiliser le mot-cl\u00e9 SQL <code>NOT</code>. La requ\u00eate modifi\u00e9e serait :</li> </ul> <pre><code>SELECT \"title\", \"format\"\nFROM \"longlist\"\nWHERE NOT \"format\" = 'hardcover';\n</code></pre> <ul> <li>Pour combiner des conditions, nous pouvons utiliser les mots-cl\u00e9s SQL <code>AND</code> et <code>OR</code>. Nous pouvons \u00e9galement utiliser des parenth\u00e8ses pour indiquer comment combiner les conditions dans une instruction conditionnelle compos\u00e9e.</li> <li>Pour s\u00e9lectionner les titres et les auteurs des livres pr\u00e9s\u00e9lectionn\u00e9s en 2022 ou 2023 :</li> </ul> <pre><code>SELECT \"title\", \"author\"\nFROM \"longlist\"\nWHERE \"year\" = 2022 OR \"year\" = 2023;\n</code></pre> <ul> <li>Pour s\u00e9lectionner les livres pr\u00e9s\u00e9lectionn\u00e9s en 2022 ou 2023 qui n'\u00e9taient pas des couvertures rigides :</li> </ul> <pre><code>SELECT \"title\", \"format\"\nFROM \"longlist\"\nWHERE (\"year\" = 2022 OR \"year\" = 2023) AND \"format\" != 'hardcover';\n</code></pre> <p>Ici, les parenth\u00e8ses indiquent que la clause <code>OR</code> doit \u00eatre \u00e9valu\u00e9e avant la clause <code>AND</code>.</p>"},{"location":"cours1/#null","title":"<code>NULL</code>","text":"<ul> <li>Il est possible que les tableaux aient des donn\u00e9es manquantes. <code>NULL</code> est un type utilis\u00e9 pour indiquer que certaines donn\u00e9es n'ont pas de valeur, ou n'existent pas dans le tableau.</li> <li>Par exemple, les livres de notre base de donn\u00e9es ont un traducteur en plus d'un auteur. Cependant, seuls certains des livres ont \u00e9t\u00e9 traduits en anglais. Pour les autres livres, la valeur du traducteur sera <code>NULL</code>.</li> <li>Les conditions utilis\u00e9es avec <code>NULL</code> sont <code>IS NULL</code> et <code>IS NOT NULL</code>.</li> <li>Pour s\u00e9lectionner les livres pour lesquels les traducteurs n'existent pas, nous pouvons ex\u00e9cuter :</li> </ul> <pre><code>SELECT \"title\", \"translator\"\nFROM \"longlist\"\nWHERE \"translator\" IS NULL;\n</code></pre> <ul> <li>Essayons l'inverse : s\u00e9lectionner les livres pour lesquels les traducteurs existent.</li> </ul> <pre><code>SELECT \"title\", \"translator\"\nFROM \"longlist\"\nWHERE \"translator\" IS NOT NULL;\n</code></pre>"},{"location":"cours1/#like","title":"<code>LIKE</code>","text":"<ul> <li>Ce mot-cl\u00e9 est utilis\u00e9 pour s\u00e9lectionner des donn\u00e9es qui correspondent approximativement \u00e0 la cha\u00eene de caract\u00e8res sp\u00e9cifi\u00e9e. Par exemple, <code>LIKE</code> pourrait \u00eatre utilis\u00e9 pour s\u00e9lectionner des livres qui ont un certain mot ou une certaine phrase dans leur titre.</li> <li><code>LIKE</code> est combin\u00e9 avec les op\u00e9rateurs <code>%</code> (correspond \u00e0 n'importe quels caract\u00e8res autour d'une cha\u00eene donn\u00e9e) et <code>_</code> (correspond \u00e0 un seul caract\u00e8re).</li> <li>Pour s\u00e9lectionner les livres avec le mot \u201clove\u201d dans leurs titres, nous pouvons ex\u00e9cuter :</li> </ul> <pre><code>SELECT \"title\"\nFROM \"longlist\"\nWHERE \"title\" LIKE '%love%';\n</code></pre> <p><code>%</code> correspond \u00e0 0 ou plusieurs caract\u00e8res, donc cette requ\u00eate correspondra aux titres de livres qui ont 0 ou plusieurs caract\u00e8res avant et apr\u00e8s \u201clove\u201d \u2014 c'est-\u00e0-dire, les titres qui contiennent \u201clove\u201d.</p> <ul> <li>Pour s\u00e9lectionner les livres dont le titre commence par \u201cThe\u201d, nous pouvons ex\u00e9cuter :</li> </ul> <pre><code>SELECT \"title\"\nFROM \"longlist\"\nWHERE \"title\" LIKE 'The%';\n</code></pre> <ul> <li>La requ\u00eate ci-dessus pourrait \u00e9galement retourner des livres dont les titres commencent par \u201cTheir\u201d ou \u201cThey\u201d. Pour s\u00e9lectionner uniquement les livres dont les titres commencent par le mot \u201cThe\u201d, nous pouvons ajouter un espace.</li> </ul> <pre><code>SELECT \"title\"\nFROM \"longlist\"\nWHERE \"title\" LIKE 'The %';\n</code></pre> <ul> <li>\u00c9tant donn\u00e9 qu'il y a un livre dans le tableau dont le nom est soit \u201cPyre\u201d soit \u201cPire\u201d, nous pouvons le s\u00e9lectionner en ex\u00e9cutant :</li> </ul> <pre><code>SELECT \"title\"\nFROM \"longlist\"\nWHERE \"title\" LIKE 'P_re';\n</code></pre> <p>Cette requ\u00eate pourrait \u00e9galement retourner des titres de livres comme \u201cPore\u201d ou \u201cPure\u201d s'ils existaient dans notre base de donn\u00e9es, car <code>_</code> correspond \u00e0 n'importe quel caract\u00e8re unique.</p>"},{"location":"cours1/#plages","title":"Plages","text":"<ul> <li>Nous pouvons \u00e9galement utiliser les op\u00e9rateurs <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code> et <code>&gt;=</code> dans nos conditions pour correspondre \u00e0 une plage de valeurs. Par exemple, pour s\u00e9lectionner tous les livres pr\u00e9s\u00e9lectionn\u00e9s entre les ann\u00e9es 2019 et 2022 (inclus), nous pouvons ex\u00e9cuter :</li> </ul> <pre><code>SELECT \"title\", \"author\"\nFROM \"longlist\"\nWHERE \"year\" &gt;= 2019 AND \"year\" &lt;= 2022;\n</code></pre> <ul> <li>Une autre fa\u00e7on d'obtenir les m\u00eames r\u00e9sultats est d'utiliser les mots-cl\u00e9s <code>BETWEEN</code> et <code>AND</code> pour sp\u00e9cifier des plages inclusives. Nous pouvons ex\u00e9cuter :</li> </ul> <pre><code>SELECT \"title\", \"author\"\nFROM \"longlist\"\nWHERE \"year\" BETWEEN 2019 AND 2022;\n</code></pre> <ul> <li>Pour s\u00e9lectionner les livres qui ont une note de 4.0 ou plus, nous pouvons ex\u00e9cuter :</li> </ul> <pre><code>SELECT \"title\", \"rating\"\nFROM \"longlist\"\nWHERE \"rating\" &gt; 4.0;\n</code></pre> <ul> <li>Pour limiter davantage les livres s\u00e9lectionn\u00e9s par le nombre de votes, et n'avoir que les livres avec au moins 10 000 votes, nous pouvons ex\u00e9cuter :</li> </ul> <pre><code>SELECT \"title\", \"rating\", \"votes\"\nFROM \"longlist\"\nWHERE \"rating\" &gt; 4.0 AND \"votes\" &gt; 10000;\n</code></pre> <ul> <li>Pour s\u00e9lectionner les livres qui ont moins de 300 pages, nous pouvons ex\u00e9cuter :</li> </ul> <pre><code>SELECT \"title\", \"pages\"\nFROM \"longlist\"\nWHERE \"pages\" &lt; 300;\n</code></pre>"},{"location":"cours1/#order-by","title":"<code>ORDER BY</code>","text":"<ul> <li>Le mot-cl\u00e9 <code>ORDER BY</code> nous permet d'organiser les lignes retourn\u00e9es dans un certain ordre sp\u00e9cifi\u00e9.</li> <li>La requ\u00eate suivante s\u00e9lectionne les 10 livres les moins bien not\u00e9s de notre base de donn\u00e9es.</li> </ul> <pre><code>SELECT \"title\", \"rating\"\nFROM \"longlist\"\nORDER BY \"rating\" LIMIT 10;\n</code></pre> <ul> <li>Notez que nous obtenons les 10 livres les moins bien not\u00e9s car <code>ORDER BY</code> choisit l'ordre croissant par d\u00e9faut.</li> <li>Au lieu de cela, pour s\u00e9lectionner les 10 meilleurs livres :</li> </ul> <pre><code>SELECT \"title\", \"rating\"\nFROM \"longlist\"\nORDER BY \"rating\" DESC LIMIT 10;\n</code></pre> <p>Notez l'utilisation du mot-cl\u00e9 SQL <code>DESC</code> pour sp\u00e9cifier l'ordre d\u00e9croissant. <code>ASC</code> peut \u00eatre utilis\u00e9 pour sp\u00e9cifier explicitement l'ordre croissant.</p> <ul> <li>Pour s\u00e9lectionner les 10 meilleurs livres par note et inclure \u00e9galement le nombre de votes comme crit\u00e8re de d\u00e9partage, nous pouvons ex\u00e9cuter :</li> </ul> <pre><code>SELECT \"title\", \"rating\", \"votes\"\nFROM \"longlist\"\nORDER BY \"rating\" DESC, \"votes\" DESC\nLIMIT 10;\n</code></pre> <p>Notez que pour chaque colonne dans la clause <code>ORDER BY</code>, nous sp\u00e9cifions l'ordre croissant ou d\u00e9croissant.</p>"},{"location":"cours1/#fonctions-dagregation","title":"Fonctions d'agr\u00e9gation","text":"<ul> <li><code>COUNT</code>, <code>AVG</code>, <code>MIN</code>, <code>MAX</code>, et <code>SUM</code> sont appel\u00e9es fonctions d'agr\u00e9gation et nous permettent d'effectuer les op\u00e9rations correspondantes sur plusieurs lignes de donn\u00e9es. Par leur nature m\u00eame, chacune des fonctions d'agr\u00e9gation suivantes ne retournera qu'une seule sortie \u2014 la valeur agr\u00e9g\u00e9e.</li> <li>Pour trouver la note moyenne de tous les livres dans la base de donn\u00e9es :</li> </ul> <pre><code>SELECT AVG(\"rating\")\nFROM \"longlist\";\n</code></pre> <ul> <li>Pour arrondir la note moyenne \u00e0 2 d\u00e9cimales :</li> </ul> <pre><code>SELECT ROUND(AVG(\"rating\"), 2)\nFROM \"longlist\";\n</code></pre> <ul> <li>Pour renommer la colonne dans laquelle les r\u00e9sultats sont affich\u00e9s :</li> </ul> <pre><code>SELECT ROUND(AVG(\"rating\"), 2) AS \"note moyenne\"\nFROM \"longlist\";\n</code></pre> <p>Notez l'utilisation du mot-cl\u00e9 SQL <code>AS</code> pour renommer les colonnes.</p> <ul> <li>Pour s\u00e9lectionner la note maximale dans la base de donn\u00e9es :</li> </ul> <pre><code>SELECT MAX(\"rating\")\nFROM \"longlist\";\n</code></pre> <ul> <li>Pour s\u00e9lectionner la note minimale dans la base de donn\u00e9es :</li> </ul> <pre><code>SELECT MIN(\"rating\")\nFROM \"longlist\";\n</code></pre> <ul> <li>Pour compter le nombre total de votes dans la base de donn\u00e9es :</li> </ul> <pre><code>SELECT SUM(\"votes\")\nFROM \"longlist\";\n</code></pre> <ul> <li>Pour compter le nombre de livres dans notre base de donn\u00e9es :</li> </ul> <pre><code>SELECT COUNT(*)\nFROM \"longlist\";\n</code></pre> <pre><code>- Souvenez-vous que nous avons utilis\u00e9 `*` pour s\u00e9lectionner chaque ligne et colonne de la base de donn\u00e9es. Dans ce cas, nous essayons de compter chaque ligne de la base de donn\u00e9es et donc nous utilisons le `*`.\n</code></pre> <ul> <li>Pour compter le nombre de traducteurs :</li> </ul> <pre><code>SELECT COUNT(\"translator\")\nFROM \"longlist\";\n</code></pre> <pre><code>- Nous observons que le nombre de traducteurs est inf\u00e9rieur au nombre de lignes dans la base de donn\u00e9es. C'est parce que la fonction `COUNT` ne compte pas les valeurs `NULL`.\n</code></pre> <ul> <li>Pour compter le nombre d'\u00e9diteurs dans la base de donn\u00e9es :</li> </ul> <pre><code>SELECT COUNT(\"publisher\")\nFROM \"longlist\";\n</code></pre> <ul> <li>Comme pour les traducteurs, cette requ\u00eate comptera le nombre de valeurs d'\u00e9diteurs qui ne sont pas <code>NULL</code>. Cependant, cela peut inclure des doublons. Un autre mot-cl\u00e9 SQL, <code>DISTINCT</code>, peut \u00eatre utilis\u00e9 pour s'assurer que seules les valeurs distinctes sont compt\u00e9es.</li> </ul> <pre><code>SELECT COUNT(DISTINCT \"publisher\")\nFROM \"longlist\";\n</code></pre>"},{"location":"cours1/cyberchase/instructions/","title":"Cyberchase","text":""},{"location":"cours1/cyberchase/instructions/#cyberchase","title":"Cyberchase","text":""},{"location":"cours1/cyberchase/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Bienvenue dans le Cyberespace ! Cyberchase est une s\u00e9rie t\u00e9l\u00e9vis\u00e9e anim\u00e9e et \u00e9ducative pour enfants, diffus\u00e9e par le Public Broadcasting Service (PBS) des \u00c9tats-Unis depuis 2002. Con\u00e7ue \u00e0 l'origine pour \u00ab montrer aux enfants que les math\u00e9matiques sont partout et que tout le monde peut \u00eatre bon en maths \u00bb, le monde de Cyberchase tourne autour de Jackie, Matt et Inez qui s'associent \u00e0 Digit, un \u00ab cybird \u00bb, pour emp\u00eacher Hacker de prendre le contr\u00f4le du Cyberespace et d'infecter la Carte M\u00e8re. En chemin, le quatuor apprend des comp\u00e9tences en math\u00e9matiques, en sciences et en r\u00e9solution de probl\u00e8mes pour contrecarrer les tentatives de Hacker.</p> <p>Dans une base de donn\u00e9es appel\u00e9e <code>cyberchase.db</code>, en utilisant une table appel\u00e9e <code>episodes</code>, trouvez des r\u00e9ponses aux questions de PBS sur les \u00e9pisodes de Cyberchase jusqu'\u00e0 pr\u00e9sent.</p>"},{"location":"cours1/cyberchase/instructions/#demonstration","title":"D\u00e9monstration","text":"<pre><code>sqlite3 cyberchase.db                                                  sqlite&gt; .tables                                                         episodes                                                                 sqlite&gt; SELECT \"title\" FROM \"episodes\"      \n</code></pre>"},{"location":"cours1/cyberchase/instructions/#code-de-distribution","title":"Code de Distribution","text":"<p>Pour ce probl\u00e8me, vous devrez utiliser <code>cyberchase.db</code>, ainsi que plusieurs fichiers <code>.sql</code> dans lesquels vous \u00e9crirez vos requ\u00eates.</p> <p>L'ex\u00e9cution de <code>sqlite3 cyberchase.db</code> devrait ouvrir la base de donn\u00e9es dans <code>sqlite3</code>, via laquelle vous ex\u00e9cuterez des requ\u00eates SQL. </p>"},{"location":"cours1/cyberchase/instructions/#schema","title":"Sch\u00e9ma","text":"<p>Chaque base de donn\u00e9es a un certain \u00ab sch\u00e9ma \u00bb \u2014 les tables et colonnes dans lesquelles les donn\u00e9es sont organis\u00e9es. Dans <code>cyberchase.db</code>, vous trouverez une seule table, <code>episodes</code>. Dans la table <code>episodes</code>, vous trouverez les colonnes suivantes :</p> <ul> <li><code>id</code>, qui identifie de mani\u00e8re unique chaque ligne (\u00e9pisode) de la table</li> <li><code>season</code>, qui est le num\u00e9ro de la saison dans laquelle l'\u00e9pisode a \u00e9t\u00e9 diffus\u00e9</li> <li><code>episode_in_season</code>, qui est le num\u00e9ro de l'\u00e9pisode dans sa saison donn\u00e9e</li> <li><code>title</code>, qui est le titre de l'\u00e9pisode</li> <li><code>topic</code>, qui identifie les id\u00e9es que l'\u00e9pisode visait \u00e0 enseigner</li> <li><code>air_date</code>, qui est la date (exprim\u00e9e au format <code>AAAA-MM-JJ</code>) \u00e0 laquelle l'\u00e9pisode a \u00e9t\u00e9 \u00ab diffus\u00e9 \u00bb (c'est-\u00e0-dire publi\u00e9)</li> <li><code>production_code</code>, qui est l'ID unique utilis\u00e9 par PBS pour faire r\u00e9f\u00e9rence \u00e0 chaque \u00e9pisode en interne</li> </ul>"},{"location":"cours1/cyberchase/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Pour chacune des questions suivantes, vous devez \u00e9crire une seule requ\u00eate SQL qui produit les r\u00e9sultats sp\u00e9cifi\u00e9s par chaque probl\u00e8me. Votre r\u00e9ponse doit prendre la forme d'une seule requ\u00eate SQL. Vous ne devez faire aucune supposition sur les <code>id</code> de certains \u00e9pisodes : vos requ\u00eates doivent \u00eatre exactes m\u00eame si l'<code>id</code> d'un \u00e9pisode particulier \u00e9tait diff\u00e9rent. Enfin, chaque requ\u00eate doit renvoyer uniquement les donn\u00e9es n\u00e9cessaires pour r\u00e9pondre \u00e0 la question : si le probl\u00e8me vous demande uniquement de sortir les noms des \u00e9pisodes, par exemple, votre requ\u00eate ne doit pas \u00e9galement sortir la date de diffusion de chaque \u00e9pisode.</p> <ol> <li>Dans <code>1.sql</code>, \u00e9crivez une requ\u00eate SQL pour lister les titres de tous les \u00e9pisodes de la saison originale de Cyberchase, la Saison 1.</li> <li>Dans <code>2.sql</code>, listez le num\u00e9ro de saison et le titre du premier \u00e9pisode de chaque saison.</li> <li>Dans <code>3.sql</code>, trouvez le code de production de l'\u00e9pisode \u00ab Hackerized! \u00bb.</li> <li>Dans <code>4.sql</code>, \u00e9crivez une requ\u00eate pour trouver les titres des \u00e9pisodes qui n'ont pas encore de sujet r\u00e9pertori\u00e9.</li> <li>Dans <code>5.sql</code>, trouvez le titre de l'\u00e9pisode des f\u00eates diffus\u00e9 le 31 d\u00e9cembre 2004.</li> <li>Dans <code>6.sql</code>, listez les titres des \u00e9pisodes de la saison 6 (2008) qui ont \u00e9t\u00e9 publi\u00e9s en avance, en 2007.</li> <li>Dans <code>7.sql</code>, \u00e9crivez une requ\u00eate SQL pour lister les titres et sujets de tous les \u00e9pisodes enseignant les fractions.</li> <li>Dans <code>8.sql</code>, \u00e9crivez une requ\u00eate qui compte le nombre d'\u00e9pisodes publi\u00e9s au cours des 6 derni\u00e8res ann\u00e9es, de 2018 \u00e0 2023 inclus.<ul> <li>Vous trouverez peut-\u00eatre utile de savoir que vous pouvez utiliser <code>BETWEEN</code> avec des dates, comme <code>BETWEEN '2000-01-01' AND '2000-12-31'</code>.</li> </ul> </li> <li>Dans <code>9.sql</code>, \u00e9crivez une requ\u00eate qui compte le nombre d'\u00e9pisodes publi\u00e9s au cours des 6 premi\u00e8res ann\u00e9es de Cyberchase, de 2002 \u00e0 2007 inclus.</li> <li>Dans <code>10.sql</code>, \u00e9crivez une requ\u00eate SQL pour lister les id, titres et codes de production de tous les \u00e9pisodes. Triez les r\u00e9sultats par code de production, du plus ancien au plus r\u00e9cent.</li> <li>Dans <code>11.sql</code>, listez les titres des \u00e9pisodes de la saison 5, en ordre alphab\u00e9tique inverse.</li> <li>Dans <code>12.sql</code>, comptez le nombre de titres d'\u00e9pisodes uniques.</li> <li>Dans <code>13.sql</code>, \u00e9crivez une requ\u00eate SQL pour explorer une question de votre choix. Cette requ\u00eate doit :<ul> <li>Impliquer au moins une condition, en utilisant <code>WHERE</code> avec <code>AND</code> ou <code>OR</code></li> </ul> </li> </ol> <p>Vous sentez-vous plus \u00e0 l'aise ?</p> <p>Vous pouvez \u00e9ventuellement essayer les requ\u00eates ci-dessous, qui peuvent n\u00e9cessiter des connaissances avanc\u00e9es !</p> <ol> <li>\u00c9crivez une requ\u00eate SQL pour trouver les titres des \u00e9pisodes diffus\u00e9s pendant la p\u00e9riode des f\u00eates, g\u00e9n\u00e9ralement en d\u00e9cembre aux \u00c9tats-Unis.<ul> <li>Votre requ\u00eate doit produire une table avec une seule colonne pour le titre de chaque \u00e9pisode.</li> <li>Essayez de trouver une meilleure solution que <code>LIKE</code> si vous le pouvez !</li> </ul> </li> <li>\u00c9crivez une requ\u00eate SQL pour trouver, pour chaque ann\u00e9e, le premier jour de l'ann\u00e9e o\u00f9 PBS a publi\u00e9 un \u00e9pisode de Cyberchase.<ul> <li>Votre requ\u00eate doit produire une table avec deux colonnes, une pour l'ann\u00e9e et une pour le mois et le jour les plus pr\u00e9coces o\u00f9 un \u00e9pisode a \u00e9t\u00e9 publi\u00e9 cette ann\u00e9e-l\u00e0.</li> </ul> </li> </ol>"},{"location":"cours1/cyberchase/instructions/#utilisation","title":"Utilisation","text":"<p>Pour tester vos requ\u00eates au fur et \u00e0 mesure que vous les \u00e9crivez dans vos fichiers <code>.sql</code>, vous pouvez interroger la base de donn\u00e9es en ex\u00e9cutant</p> <pre><code>.read FILENAME\n</code></pre> <p>o\u00f9 <code>FILENAME</code> est le nom du fichier contenant votre requ\u00eate SQL. Par exemple,</p> <pre><code>.read 1.sql\n</code></pre> <p>Vous pouvez \u00e9galement ex\u00e9cuter (dans votre terminal, plut\u00f4t qu'\u00e0 l'int\u00e9rieur de <code>sqlite3</code>)</p> <pre><code>$ cat FILENAME | sqlite3 cyberchase.db &gt; output.txt\n</code></pre> <p>pour rediriger la sortie de la requ\u00eate vers un fichier texte nomm\u00e9 <code>output.txt</code>. (Cela peut \u00eatre utile pour v\u00e9rifier combien de lignes sont renvoy\u00e9es par votre requ\u00eate !)</p>"},{"location":"cours1/cyberchase/instructions/#comment-tester","title":"Comment Tester","text":"<p>R\u00e9ponse \u00e0 la prochaine s\u00e9ance</p> <ul> <li>L'ex\u00e9cution de <code>1.sql</code> produit une table avec 1 colonne et 26 lignes.</li> <li>L'ex\u00e9cution de <code>2.sql</code> produit une table avec 2 colonnes et 14 lignes.</li> <li>L'ex\u00e9cution de <code>3.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>4.sql</code> produit une table avec 1 colonne et 26 lignes.</li> <li>L'ex\u00e9cution de <code>5.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>6.sql</code> produit une table avec 1 colonne et 2 lignes.</li> <li>L'ex\u00e9cution de <code>7.sql</code> produit une table avec 2 colonnes et 6 lignes.</li> <li>L'ex\u00e9cution de <code>8.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>9.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>10.sql</code> produit une table avec 3 colonnes et 140 lignes.</li> <li>L'ex\u00e9cution de <code>11.sql</code> produit une table avec 1 colonne et 10 lignes.</li> <li>L'ex\u00e9cution de <code>12.sql</code> produit une table avec 1 colonne et 1 ligne.</li> </ul> <p><code>13.sql</code> d\u00e9pend de vous !</p> <p>Notez que les comptes de lignes n'incluent pas les lignes d'en-t\u00eate qui ne montrent que les noms de colonnes.</p>"},{"location":"cours1/normals/instructions/","title":"Normals","text":"<p>\u00c0 la suite d'un nouveau record annuel de chaleur \u00e9tabli en 2022 \u2014 le dernier d'une s\u00e9rie d'ann\u00e9es records \u2014 les temp\u00e9ratures moyennes de la surface des oc\u00e9ans dans le monde ont augment\u00e9 depuis d\u00e9but mars. En excluant les r\u00e9gions polaires, elles sont environ deux dixi\u00e8mes de degr\u00e9 Celsius plus chaudes que ce que les scientifiques ont jamais observ\u00e9 \u00e0 cette p\u00e9riode de l'ann\u00e9e via les donn\u00e9es satellites.</p> <p>The Washington Post, 28 avril 2023</p>"},{"location":"cours1/normals/instructions/#demonstration","title":"D\u00e9monstration","text":"<pre><code>$ sqlite3 normals.db                                                     sqlite&gt; .tables                                                         normals                                                                 sqlite&gt; SELECT \"latitude\", \"longitude\", \"0m\", \"250m\", \"500m\" FROM \"normals\"  \n</code></pre>"},{"location":"cours1/normals/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Comment savons-nous si les temp\u00e9ratures des oc\u00e9ans sont plus basses ou plus \u00e9lev\u00e9es que la \"normale\" ? Qu'est-ce qu'une temp\u00e9rature \"normale\" ? Il s'av\u00e8re que les scientifiques ont d\u00e9velopp\u00e9 une m\u00e9trique appel\u00e9e \"Climate Normal\". Une Climate Normal caract\u00e9rise les aspects du climat terrestre \u2014 ses conditions m\u00e9t\u00e9orologiques \u00e0 long terme \u2014 sur une p\u00e9riode de 30 ans. Une m\u00e9trique importante est la temp\u00e9rature des oc\u00e9ans.</p> <p>Dans une base de donn\u00e9es appel\u00e9e <code>normals.db</code>, en utilisant une table appel\u00e9e <code>normals</code>, explorez certaines des donn\u00e9es les plus r\u00e9centes de Climate Normal pour comprendre ce qui constitue une temp\u00e9rature oc\u00e9anique normale dans le monde.</p>"},{"location":"cours1/normals/instructions/#schema","title":"Sch\u00e9ma","text":"<p>Les donn\u00e9es dans <code>normals.db</code> peuvent \u00eatre visualis\u00e9es comme suit :</p> <p></p> <p>Remarquez que la Terre est divis\u00e9e en une grille de coordonn\u00e9es \u2014 des points qui peuvent identifier presque n'importe quel endroit sur Terre. Chaque coordonn\u00e9e est une combinaison de latitude et de longitude. Et remarquez comment chaque coordonn\u00e9e au-dessus d'un oc\u00e9an a une certaine temp\u00e9rature normale de la surface de l'oc\u00e9an qui lui est associ\u00e9e !</p> <p>Dans <code>normals.db</code>, vous trouverez une seule table de coordonn\u00e9es, <code>normals</code>. Dans la table <code>normals</code>, vous trouverez les colonnes suivantes :</p> <ul> <li><code>id</code>, qui identifie de mani\u00e8re unique chaque ligne (coordonn\u00e9e) de la table</li> <li><code>latitude</code>, qui est le degr\u00e9 de latitude (exprim\u00e9 en format d\u00e9cimal) pour la coordonn\u00e9e</li> <li><code>longitude</code>, qui est le degr\u00e9 de longitude (exprim\u00e9 en format d\u00e9cimal) pour la coordonn\u00e9e</li> <li><code>0m</code>, qui est la temp\u00e9rature normale de la surface de l'oc\u00e9an (c'est-\u00e0-dire la temp\u00e9rature normale \u00e0 0 m\u00e8tre de profondeur), en degr\u00e9s Celsius, \u00e0 la coordonn\u00e9e</li> <li><code>5m</code>, qui est la temp\u00e9rature normale de l'oc\u00e9an \u00e0 5 m\u00e8tres de profondeur, en degr\u00e9s Celsius, \u00e0 la coordonn\u00e9e</li> <li><code>10m</code>, qui est la temp\u00e9rature normale de l'oc\u00e9an \u00e0 10 m\u00e8tres de profondeur, en degr\u00e9s Celsius, \u00e0 la coordonn\u00e9e</li> </ul> <p>Et les observations continuent jusqu'\u00e0 <code>5500m</code>, ou 5500 m\u00e8tres de profondeur, pour certaines coordonn\u00e9es !</p> <p>Puisque <code>normals</code> est une table large, si vous voulez pr\u00e9visualiser le contenu, envisagez de <code>SELECT</code>ionner uniquement les colonnes <code>latitude</code>, <code>longitude</code>, et quelques colonnes de profondeur.</p>"},{"location":"cours1/normals/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Pour chacune des questions suivantes, vous devez \u00e9crire une seule requ\u00eate SQL qui produit les r\u00e9sultats sp\u00e9cifi\u00e9s par chaque probl\u00e8me. Votre r\u00e9ponse doit prendre la forme d'une seule requ\u00eate SQL. Vous ne devez pas faire d'hypoth\u00e8ses sur les <code>id</code>s de certaines observations : vos requ\u00eates doivent \u00eatre exactes m\u00eame si l'<code>id</code> d'une observation particuli\u00e8re \u00e9tait diff\u00e9rent. Enfin, chaque requ\u00eate doit retourner uniquement les donn\u00e9es n\u00e9cessaires pour r\u00e9pondre \u00e0 la question.</p> <ol> <li>Dans <code>1.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver la temp\u00e9rature normale de la surface de l'oc\u00e9an dans le Golfe du Maine, au large des c\u00f4tes du Massachusetts. Pour trouver cette temp\u00e9rature, regardez les donn\u00e9es associ\u00e9es \u00e0 42,5\u00b0 de latitude et -69,5\u00b0 de longitude.</li> <li>Rappelez-vous que vous pouvez trouver la temp\u00e9rature normale de la surface de l'oc\u00e9an dans la colonne <code>0m</code>, qui signifie 0 m\u00e8tre de profondeur !</li> <li>Dans <code>2.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver la temp\u00e9rature normale du capteur le plus profond pr\u00e8s du Golfe du Maine, \u00e0 la m\u00eame coordonn\u00e9e ci-dessus.</li> <li>Le capteur le plus profond enregistre les temp\u00e9ratures \u00e0 225 m\u00e8tres de profondeur, vous pouvez donc trouver ces donn\u00e9es dans la colonne <code>225m</code>.</li> <li>Dans <code>3.sql</code>, choisissez un endroit de votre choix et \u00e9crivez une requ\u00eate SQL pour trouver la temp\u00e9rature normale \u00e0 0 m\u00e8tre, 100 m\u00e8tres, et 200 m\u00e8tres. Vous pourriez trouver Google Earth utile si vous souhaitez trouver des coordonn\u00e9es \u00e0 utiliser !</li> <li>Dans <code>4.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver la temp\u00e9rature normale de la surface de l'oc\u00e9an la plus basse.</li> <li>Dans <code>5.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver la temp\u00e9rature normale de la surface de l'oc\u00e9an la plus \u00e9lev\u00e9e.</li> <li>Dans <code>6.sql</code>, \u00e9crivez une requ\u00eate SQL pour retourner toutes les temp\u00e9ratures normales de l'oc\u00e9an \u00e0 50m de profondeur, ainsi que leurs degr\u00e9s respectifs de latitude et de longitude, dans la Mer d'Arabie. Incluez les colonnes latitude, longitude, et temp\u00e9rature. Pour simplifier, supposez que la Mer d'Arabie est encadr\u00e9e par les quatre coordonn\u00e9es suivantes :</li> <li>20\u00b0 de latitude, 55\u00b0 de longitude</li> <li>20\u00b0 de latitude, 75\u00b0 de longitude</li> <li>0\u00b0 de latitude, 55\u00b0 de longitude</li> <li>0\u00b0 de latitude, 75\u00b0 de longitude</li> <li>Dans <code>7.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver la temp\u00e9rature moyenne de la surface de l'oc\u00e9an, arrondie \u00e0 deux d\u00e9cimales, le long de l'\u00e9quateur. Appelez la colonne r\u00e9sultante \"Average Equator Ocean Surface Temperature\".</li> <li>Les temp\u00e9ratures de la surface de l'oc\u00e9an \u00e0 l'\u00e9quateur peuvent \u00eatre trouv\u00e9es \u00e0 toutes les longitudes entre les latitudes -0,5\u00b0 et 0,5\u00b0, inclus.</li> <li>Dans <code>8.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les 10 endroits avec la temp\u00e9rature normale de la surface de l'oc\u00e9an la plus basse, tri\u00e9s du plus froid au plus chaud. Si deux endroits ont la m\u00eame temp\u00e9rature normale de la surface de l'oc\u00e9an, triez par latitude, de la plus petite \u00e0 la plus grande. Incluez les colonnes latitude, longitude, et temp\u00e9rature de surface.</li> <li>Dans <code>9.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les 10 endroits avec la temp\u00e9rature normale de la surface de l'oc\u00e9an la plus \u00e9lev\u00e9e, tri\u00e9s du plus chaud au plus froid. Si deux endroits ont la m\u00eame temp\u00e9rature normale de la surface de l'oc\u00e9an, triez par latitude, de la plus petite \u00e0 la plus grande. Incluez les colonnes latitude, longitude, et temp\u00e9rature de surface.</li> <li>Il y a 180 degr\u00e9s entiers de latitude. Dans <code>10.sql</code>, \u00e9crivez une requ\u00eate SQL pour d\u00e9terminer combien de points de latitude nous avons au moins un point de donn\u00e9e. (Pourquoi pourrions-nous ne pas avoir de points de donn\u00e9es pour toutes les latitudes ?)</li> </ol>"},{"location":"cours1/normals/instructions/#utilisation","title":"Utilisation","text":"<p>Pour tester vos requ\u00eates au fur et \u00e0 mesure que vous les \u00e9crivez dans vos fichiers <code>.sql</code>, vous pouvez interroger la base de donn\u00e9es en ex\u00e9cutant</p> <pre><code>.read FILENAME\n</code></pre> <p>o\u00f9 <code>FILENAME</code> est le nom du fichier contenant votre requ\u00eate SQL. Par exemple,</p> <pre><code>.read 1.sql\n</code></pre> <p>Vous pouvez \u00e9galement ex\u00e9cuter</p> <pre><code>$ cat FILENAME | sqlite3 normals.db &gt; output.txt\n</code></pre> <p>pour rediriger la sortie de la requ\u00eate vers un fichier texte appel\u00e9 <code>output.txt</code>. (Cela peut \u00eatre utile pour v\u00e9rifier combien de lignes sont retourn\u00e9es par votre requ\u00eate !)</p>"},{"location":"cours1/normals/instructions/#comment-tester","title":"Comment Tester","text":"<ul> <li>L'ex\u00e9cution de <code>1.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>2.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li><code>3.sql</code> d\u00e9pend de vous !</li> <li>L'ex\u00e9cution de <code>4.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>5.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>6.sql</code> produit une table avec 3 colonnes et 383 lignes.</li> <li>L'ex\u00e9cution de <code>7.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>8.sql</code> produit une table avec 3 colonnes et 10 lignes.</li> <li>L'ex\u00e9cution de <code>9.sql</code> produit une table avec 3 colonnes et 10 lignes.</li> <li>L'ex\u00e9cution de <code>10.sql</code> produit une table avec 1 colonne et 1 ligne.</li> </ul> <p>Notez que les comptes de lignes n'incluent pas les lignes d'en-t\u00eate qui ne montrent que les noms de colonnes.</p>"},{"location":"cours1/normals/instructions/#remerciements","title":"Remerciements","text":"<p>Donn\u00e9es extraites du World Ocean Atlas 2023, disponibles publiquement aupr\u00e8s de la National Oceanic and Atmospheric Administration (NOAA).</p>"},{"location":"cours1/players/instructions/","title":"Joueurs","text":"<p> L'\u00e9quipe des Boston Americans de 1901 (maintenant les Red Sox)</p>"},{"location":"cours1/players/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Si vous n'\u00eates pas familier, le baseball est un sport populaire dans lequel deux \u00e9quipes de 9 joueurs alternent entre la batte (frapper une balle) et le champ (attraper et lancer les balles frapp\u00e9es). Des points (\"runs\") sont marqu\u00e9s lorsqu'un joueur de l'\u00e9quipe \u00e0 la batte frappe une balle et touche toutes les bases avant que les joueurs de l'\u00e9quipe au champ n'aient la chance de le retirer (\"out\"). Le baseball est sans doute le plus populaire aux \u00c9tats-Unis et au Canada, o\u00f9 la MLB (Major League Baseball) sert d'association professionnelle pour les joueurs depuis 1876.</p> <p>Dans une base de donn\u00e9es appel\u00e9e <code>players.db</code>, en utilisant une table appel\u00e9e <code>players</code>, r\u00e9pondez \u00e0 des questions sur les joueurs de la MLB qui ont jou\u00e9 de 1871 \u00e0 2023.</p>"},{"location":"cours1/players/instructions/#demonstration","title":"D\u00e9monstration","text":"<pre><code>$ sqlite3 players.db                                                     sqlite&gt; .tables                                                         players                                                                 sqlite&gt; SELECT \"first_name\", \"last_name\", \"debut\"                          ...&gt; FROM \"players\"                                                      ...&gt; LIMIT 10;     \n</code></pre>"},{"location":"cours1/players/instructions/#code-de-distribution","title":"Code de Distribution","text":"<p>Pour ce probl\u00e8me, vous devrez utiliser <code>players.db</code>, ainsi que plusieurs fichiers <code>.sql</code> dans lesquels vous \u00e9crirez vos requ\u00eates.</p>"},{"location":"cours1/players/instructions/#schema","title":"Sch\u00e9ma","text":"<p>Dans <code>players.db</code>, vous trouverez une seule table, <code>players</code>. Dans la table <code>players</code>, vous trouverez les colonnes suivantes :</p> <ul> <li><code>id</code>, qui identifie de mani\u00e8re unique chaque ligne (joueur) dans la table</li> <li><code>first_name</code>, qui est le pr\u00e9nom du joueur</li> <li><code>last_name</code>, qui est le nom de famille du joueur</li> <li><code>bats</code>, qui est le c\u00f4t\u00e9 (<code>R</code> pour droit ou <code>L</code> pour gauche) o\u00f9 le joueur frappe</li> <li><code>throws</code>, qui est la main (<code>R</code> pour droit ou <code>L</code> pour gauche) avec laquelle le joueur lance</li> <li><code>weight</code>, qui est le poids du joueur en livres</li> <li><code>height</code>, qui est la taille du joueur en pouces</li> <li><code>debut</code>, qui est la date (exprim\u00e9e sous la forme <code>YYYY-MM-DD</code>) \u00e0 laquelle le joueur a commenc\u00e9 sa carri\u00e8re en MLB</li> <li><code>final_game</code>, qui est la date (exprim\u00e9e sous la forme <code>YYYY-MM-DD</code>) \u00e0 laquelle le joueur a jou\u00e9 son dernier match en MLB</li> <li><code>birth_year</code>, qui est l'ann\u00e9e de naissance du joueur</li> <li><code>birth_month</code>, qui est le mois (exprim\u00e9 en entier) de naissance du joueur</li> <li><code>birth_day</code>, qui est le jour de naissance du joueur</li> <li><code>birth_city</code>, qui est la ville o\u00f9 le joueur est n\u00e9</li> <li><code>birth_state</code>, qui est l'\u00e9tat o\u00f9 le joueur est n\u00e9</li> <li><code>birth_country</code>, qui est le pays o\u00f9 le joueur est n\u00e9</li> </ul>"},{"location":"cours1/players/instructions/#specification","title":"Sp\u00e9cification","text":"<ol> <li>Dans <code>1.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver la ville natale (y compris la ville, l'\u00e9tat et le pays) de Jackie Robinson.</li> <li>Dans <code>2.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver le c\u00f4t\u00e9 (par exemple, droit ou gauche) o\u00f9 Babe Ruth frappait.</li> <li>Dans <code>3.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les ids des lignes pour lesquelles une valeur dans la colonne <code>debut</code> est manquante.</li> <li>Dans <code>4.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les pr\u00e9noms et noms de famille des joueurs qui ne sont pas n\u00e9s aux \u00c9tats-Unis. Triez les r\u00e9sultats par ordre alphab\u00e9tique par pr\u00e9nom, puis par nom de famille.</li> <li>Dans <code>5.sql</code>, \u00e9crivez une requ\u00eate SQL pour retourner les pr\u00e9noms et noms de famille de tous les batteurs droitiers. Triez les r\u00e9sultats par ordre alphab\u00e9tique par pr\u00e9nom, puis par nom de famille.</li> <li>Dans <code>6.sql</code>, \u00e9crivez une requ\u00eate SQL pour retourner le pr\u00e9nom, le nom de famille et la date de d\u00e9but des joueurs n\u00e9s \u00e0 Pittsburgh, Pennsylvanie (PA). Triez les r\u00e9sultats d'abord par date de d\u00e9but\u2014du plus r\u00e9cent au plus ancien\u2014puis par ordre alphab\u00e9tique par pr\u00e9nom, suivi du nom de famille.</li> <li>Dans <code>7.sql</code>, \u00e9crivez une requ\u00eate SQL pour compter le nombre de joueurs qui frappaient (ou ont frapp\u00e9) de la main droite et lan\u00e7aient (ou ont lanc\u00e9) de la main gauche, ou vice versa.</li> <li>Dans <code>8.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver la taille et le poids moyens, arrondis \u00e0 deux d\u00e9cimales, des joueurs de baseball qui ont d\u00e9but\u00e9 le ou apr\u00e8s le 1er janvier 2000. Retournez les colonnes avec les noms \"Average Height\" et \"Average Weight\", respectivement.</li> <li>Dans <code>9.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les joueurs qui ont jou\u00e9 leur dernier match en MLB en 2022. Triez les r\u00e9sultats par ordre alphab\u00e9tique par pr\u00e9nom, puis par nom de famille.</li> <li>Dans <code>10.sql</code>, \u00e9crivez une requ\u00eate SQL pour r\u00e9pondre \u00e0 une question de votre choix. Cette requ\u00eate doit :<ul> <li>Utiliser <code>AS</code> pour renommer une colonne</li> <li>Impliquer au moins une condition, en utilisant <code>WHERE</code></li> <li>Trier par au moins une colonne en utilisant <code>ORDER BY</code></li> </ul> </li> </ol> <p>Vous sentez-vous plus \u00e0 l'aise ?</p> <p>Vous pouvez \u00e9ventuellement tenter les requ\u00eates suivantes, qui peuvent n\u00e9cessiter des connaissances avanc\u00e9es !</p> <ol> <li>\u00c9crivez une seule requ\u00eate SQL pour lister les pr\u00e9noms et noms de famille de tous les joueurs de taille sup\u00e9rieure \u00e0 la moyenne, tri\u00e9s du plus grand au plus petit, puis par pr\u00e9nom et nom de famille.</li> </ol>"},{"location":"cours1/players/instructions/#utilisation","title":"Utilisation","text":"<p>Pour tester vos requ\u00eates au fur et \u00e0 mesure que vous les \u00e9crivez dans vos fichiers <code>.sql</code>, vous pouvez interroger la base de donn\u00e9es en ex\u00e9cutant</p> <pre><code>.read FILENAME\n</code></pre> <p>o\u00f9 <code>FILENAME</code> est le nom du fichier contenant votre requ\u00eate SQL. Par exemple,</p> <pre><code>.read 1.sql\n</code></pre> <p>Vous pouvez \u00e9galement ex\u00e9cuter</p> <pre><code>$ cat FILENAME | sqlite3 players.db &gt; output.txt\n</code></pre> <p>pour rediriger la sortie de la requ\u00eate vers un fichier texte appel\u00e9 <code>output.txt</code>. (Cela peut \u00eatre utile pour v\u00e9rifier combien de lignes sont retourn\u00e9es par votre requ\u00eate !)</p>"},{"location":"cours1/players/instructions/#comment-tester","title":"Comment Tester","text":"<ul> <li>L'ex\u00e9cution de <code>1.sql</code> donne une table avec 3 colonnes et 1 ligne.</li> <li>L'ex\u00e9cution de <code>2.sql</code> donne une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>3.sql</code> donne une table avec 1 colonne et 213 lignes.</li> <li>L'ex\u00e9cution de <code>4.sql</code> donne une table avec 2 colonnes et 2814 lignes.</li> <li>L'ex\u00e9cution de <code>5.sql</code> donne une table avec 2 colonnes et 12878 lignes.</li> <li>L'ex\u00e9cution de <code>6.sql</code> donne une table avec 3 colonnes et 134 lignes.</li> <li>L'ex\u00e9cution de <code>7.sql</code> donne une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>8.sql</code> donne une table avec 2 colonnes et 1 ligne.</li> <li>L'ex\u00e9cution de <code>9.sql</code> donne une table avec 2 colonnes et 516 lignes.</li> </ul> <p><code>10.sql</code> d\u00e9pend de vous !</p> <p>Notez que les comptes de lignes n'incluent pas les lignes d'en-t\u00eate qui ne montrent que les noms de colonnes.</p>"},{"location":"cours1/views/instructions/","title":"Views","text":"<p> Beau Temps, Matin Clair par Katsushika Hokusai</p>"},{"location":"cours1/views/instructions/#demonstration","title":"D\u00e9monstration","text":"<pre><code>$ sqlite3 views.db                                                       sqlite&gt; .tables                                                         views                                                                   sqlite&gt; SELECT \"english_title\", \"artist\" FROM \"views\";  \n</code></pre>"},{"location":"cours1/views/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>De 1830 \u00e0 1832, l'artiste japonais Katsushika Hokusai a cr\u00e9\u00e9 36 estampes repr\u00e9sentant 36 vues diff\u00e9rentes du Mont Fuji, un volcan sur l'\u00eele de Honsh\u016b au Japon. Parmi les \u0153uvres les plus c\u00e9l\u00e8bres de la s\u00e9rie figurent Beau Temps, Matin Clair et La Grande Vague de Kanagawa. Les estampes sont devenues si influentes qu'un autre artiste japonais de l'\u00e9poque, Utagawa Hiroshige, a cr\u00e9\u00e9 sa propre s\u00e9rie de 36 estampes, chacune repr\u00e9sentant une nouvelle vue du Fuji.</p> <p>Dans <code>views.db</code>, vous trouverez des d\u00e9tails sur les 36 estampes cr\u00e9\u00e9es respectivement par Hokusai et Hiroshige. Au total, vous disposerez de donn\u00e9es sur 72 estampes. Bien que ces estampes soient g\u00e9n\u00e9ralement appr\u00e9ci\u00e9es pour leur esth\u00e9tique, la science informatique permet d\u00e9sormais de fournir des informations num\u00e9riques suppl\u00e9mentaires sur les \u0153uvres d'art. En plus du titre et de l'auteur de chaque estampe, vous trouverez des statistiques couramment utilis\u00e9es dans l'analyse computationnelle des images : la couleur moyenne, la luminosit\u00e9, le contraste et l'entropie. Dans les fichiers <code>.sql</code> fournis, \u00e9crivez des requ\u00eates SQL pour r\u00e9pondre \u00e0 des questions sur cette base de donn\u00e9es de 72 estampes et les statistiques sur leur composition.</p>"},{"location":"cours1/views/instructions/#curieux-den-savoir-plus-sur-la-couleur-moyenne-la-luminosite-le-contraste-ou-lentropie","title":"Curieux d'en savoir plus sur la couleur moyenne, la luminosit\u00e9, le contraste ou l'entropie ?","text":"<ul> <li>Couleur moyenne : La couleur obtenue en additionnant les valeurs des canaux rouge, vert et bleu de chaque pixel, puis en divisant chaque somme par le nombre de pixels dans l'image.</li> <li>Luminosit\u00e9 : D\u00e9finie comme la clart\u00e9 ou l'obscurit\u00e9 d'une image, sur une \u00e9chelle de 0 \u00e0 1. Une image blanche mesurerait 1, tandis qu'une image noire mesurerait 0.</li> <li>Contraste : D\u00e9fini comme l'\u00e9tendue des diff\u00e9rences de luminosit\u00e9 dans une image, sur une \u00e9chelle de 0 \u00e0 1. Un contraste plus \u00e9lev\u00e9 (diff\u00e9rences de luminosit\u00e9 plus importantes) permet aux objets de se d\u00e9marquer. Un contraste plus faible (diff\u00e9rences de luminosit\u00e9 plus faibles) signifie que les objets ne se d\u00e9marquent pas autant.</li> <li>Entropie : Une mesure de l'al\u00e9atoire d'une image, souvent utilis\u00e9e pour caract\u00e9riser la complexit\u00e9 d'une \u0153uvre d'art. Une entropie de 10 est assez \u00e9lev\u00e9e, tandis qu'une entropie de 0 est tr\u00e8s faible.</li> </ul>"},{"location":"cours1/views/instructions/#distribution-code","title":"Distribution Code","text":"<p>Pour ce probl\u00e8me, vous devrez acc\u00e9der \u00e0 <code>views.db</code>, ainsi que plusieurs fichiers <code>.sql</code> dans lesquels vous \u00e9crirez vos requ\u00eates.</p>"},{"location":"cours1/views/instructions/#schema","title":"Sch\u00e9ma","text":"<p>Dans <code>views.db</code>, vous trouverez une seule table, <code>views</code>. Dans la table <code>views</code>, vous trouverez les colonnes suivantes :</p> <ul> <li><code>id</code> : Identifie de mani\u00e8re unique chaque ligne (estampe) de la table.</li> <li><code>print_number</code> : Identifie le num\u00e9ro de l'estampe dans la s\u00e9rie de Hokusai ou Hiroshige.</li> <li><code>english_title</code> : Le titre en anglais de l'estampe.</li> <li><code>japanese_title</code> : Le titre en japonais de l'estampe.</li> <li><code>artist</code> : Le nom de famille de l'artiste de l'estampe.</li> <li><code>average_color</code> : La repr\u00e9sentation hexad\u00e9cimale de la couleur obtenue en faisant la moyenne des couleurs de chaque pixel de l'image.</li> <li><code>brightness</code> : Un nombre correspondant \u00e0 la luminosit\u00e9 ou \u00e0 l'obscurit\u00e9 globale de l'image.</li> <li><code>contrast</code> : Un nombre repr\u00e9sentant l'\u00e9tendue de la diff\u00e9rence entre les zones claires et sombres de l'image.</li> <li><code>entropy</code> : Une mesure utilis\u00e9e pour quantifier la complexit\u00e9 de l'\u0153uvre d'art.</li> </ul>"},{"location":"cours1/views/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Pour chacune des questions suivantes, vous devez \u00e9crire une seule requ\u00eate SQL qui produit les r\u00e9sultats sp\u00e9cifi\u00e9s par chaque probl\u00e8me. Votre r\u00e9ponse doit prendre la forme d'une seule requ\u00eate SQL. Vous ne devez pas faire d'hypoth\u00e8ses sur les <code>id</code> de certaines observations : vos requ\u00eates doivent \u00eatre exactes m\u00eame si l'<code>id</code> d'une observation particuli\u00e8re \u00e9tait diff\u00e9rent. Enfin, chaque requ\u00eate doit retourner uniquement les donn\u00e9es n\u00e9cessaires pour r\u00e9pondre \u00e0 la question.</p> <ol> <li>Dans <code>1.sql</code>, \u00e9crivez une requ\u00eate SQL qui pourrait int\u00e9resser un traducteur : listez, c\u00f4te \u00e0 c\u00f4te, le titre japonais et le titre anglais de chaque estampe. Assurez-vous que le titre japonais est la premi\u00e8re colonne, suivi du titre anglais.</li> <li>Dans <code>2.sql</code>, \u00e9crivez une requ\u00eate SQL pour lister les couleurs moyennes des estampes de Hokusai dont le titre anglais contient \"rivi\u00e8re\". (\u00c0 titre indicatif, ont-elles une teinte de bleu ?)</li> <li>Dans <code>3.sql</code>, \u00e9crivez une requ\u00eate SQL pour compter combien d'estampes de Hokusai contiennent \"Fuji\" dans le titre anglais. Bien que toutes les estampes de Hokusai se soient concentr\u00e9es sur le Mont Fuji, combien ont inclus \"Fuji\" dans le titre ?</li> <li>Dans <code>4.sql</code>, \u00e9crivez une requ\u00eate SQL pour compter combien d'estampes de Hiroshige ont des titres anglais qui font r\u00e9f\u00e9rence \u00e0 la \"Capitale de l'Est\". Les estampes de Hiroshige ont \u00e9t\u00e9 cr\u00e9\u00e9es pendant la p\u00e9riode \"Edo\" du Japon, en r\u00e9f\u00e9rence \u00e0 la capitale orientale d'Edo, aujourd'hui Tokyo.</li> <li>Dans <code>5.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver la valeur de contraste la plus \u00e9lev\u00e9e des estampes de Hokusai. Nommez la colonne \"Contraste Maximum\". L'estampe de Hokusai la plus contrast\u00e9e a-t-elle vraiment beaucoup de contraste ?</li> <li>Dans <code>6.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver l'entropie moyenne des estampes de Hiroshige, arrondie \u00e0 deux d\u00e9cimales. Appelez la colonne r\u00e9sultante \"Entropie Moyenne de Hiroshige\".</li> <li>Dans <code>7.sql</code>, \u00e9crivez une requ\u00eate SQL pour lister les titres anglais des 5 estampes les plus lumineuses de Hiroshige, de la plus lumineuse \u00e0 la moins lumineuse. Comparez-les \u00e0 cette liste sur Wikipedia pour voir si vos r\u00e9sultats correspondent \u00e0 l'esth\u00e9tique de l'estampe.</li> <li>Dans <code>8.sql</code>, \u00e9crivez une requ\u00eate SQL pour lister les titres anglais des 5 estampes de Hokusai ayant le moins de contraste, du moins contrast\u00e9 au plus contrast\u00e9. Comparez-les \u00e0 cette liste sur Wikipedia pour voir si vos r\u00e9sultats correspondent \u00e0 l'esth\u00e9tique de l'estampe.</li> <li>Dans <code>9.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver le titre anglais et l'artiste de l'estampe ayant la luminosit\u00e9 la plus \u00e9lev\u00e9e.</li> <li>Dans <code>10.sql</code>, \u00e9crivez une requ\u00eate SQL pour r\u00e9pondre \u00e0 une question de votre choix sur les estampes. La requ\u00eate doit :<ul> <li>Utiliser <code>AS</code> pour renommer une colonne.</li> <li>Impliquer au moins une condition, en utilisant <code>WHERE</code>.</li> <li>Trier par au moins une colonne, en utilisant <code>ORDER BY</code>.</li> </ul> </li> </ol>"},{"location":"cours1/views/instructions/#utilisation","title":"Utilisation","text":"<p>Pour tester vos requ\u00eates au fur et \u00e0 mesure que vous les \u00e9crivez dans vos fichiers <code>.sql</code>, vous pouvez interroger la base de donn\u00e9es en ex\u00e9cutant :</p> <pre><code>.read FILENAME\n</code></pre> <p>o\u00f9 <code>FILENAME</code> est le nom du fichier contenant votre requ\u00eate SQL. Par exemple :</p> <pre><code>.read 1.sql\n</code></pre> <p>Vous pouvez \u00e9galement ex\u00e9cuter :</p> <pre><code>$ cat FILENAME | sqlite3 views.db &gt; output.txt\n</code></pre> <p>pour rediriger la sortie de la requ\u00eate vers un fichier texte nomm\u00e9 <code>output.txt</code>. (Cela peut \u00eatre utile pour v\u00e9rifier combien de lignes sont retourn\u00e9es par votre requ\u00eate !)</p>"},{"location":"cours1/views/instructions/#comment-tester","title":"Comment Tester","text":"<ul> <li>L'ex\u00e9cution de <code>1.sql</code> produit une table avec 2 colonnes et 72 lignes.</li> <li>L'ex\u00e9cution de <code>2.sql</code> produit une table avec 1 colonne et 3 lignes.</li> <li>L'ex\u00e9cution de <code>3.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>4.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>5.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>6.sql</code> produit une table avec 1 colonne et 1 ligne.</li> <li>L'ex\u00e9cution de <code>7.sql</code> produit une table avec 1 colonne et 5 lignes.</li> <li>L'ex\u00e9cution de <code>8.sql</code> produit une table avec 1 colonne et 5 lignes.</li> <li>L'ex\u00e9cution de <code>9.sql</code> produit une table avec 2 colonnes et 1 ligne.</li> </ul> <p><code>10.sql</code> d\u00e9pend de vous !</p> <p>Notez que le nombre de lignes ne comprend pas les lignes d'en-t\u00eate qui ne montrent que les noms des colonnes.</p>"},{"location":"cours2/","title":"Introduction","text":""},{"location":"cours2/#cours-2","title":"Cours 2","text":"<ul> <li>Introduction</li> <li>Diagrammes Entit\u00e9-Relation</li> <li>Cl\u00e9s</li> <li>Cl\u00e9s Primaires</li> <li>Cl\u00e9s \u00c9trang\u00e8res</li> <li>Sous-requ\u00eates</li> <li><code>IN</code></li> <li><code>JOIN</code></li> <li>Ensembles</li> <li>Groupes</li> <li>Fin</li> </ul>"},{"location":"cours2/#introduction","title":"Introduction","text":"<ul> <li>Les bases de donn\u00e9es peuvent avoir plusieurs tables. Lors du dernier cours, nous avons vu une base de donn\u00e9es de livres nomin\u00e9s pour le International Booker Prize. Nous allons maintenant voir que cette base de donn\u00e9es contient de nombreuses tables diff\u00e9rentes pour les livres, les auteurs, les \u00e9diteurs, etc.</li> <li>Tout d'abord, ouvrez la base de donn\u00e9es en utilisant SQLite dans le terminal de votre Codespace.</li> <li>Nous pouvons utiliser la commande SQLite suivante pour voir toutes les tables de notre base de donn\u00e9es :</li> </ul> <pre><code>.tables\n</code></pre> <p>Cette commande renvoie les noms des tables dans <code>longlist.db</code> \u2014 7 au total. - Ces tables ont certaines relations entre elles, nous appelons donc la base de donn\u00e9es une base de donn\u00e9es relationnelle. Regardez la liste des tables dans <code>longlist.db</code> et essayez d'imaginer les relations entre elles. Quelques exemples sont :     - Les auteurs \u00e9crivent des livres.     - Les \u00e9diteurs publient des livres.     - Les livres sont traduits par des traducteurs. - Consid\u00e9rons notre premier exemple. Voici un aper\u00e7u des tables <code>authors</code> et <code>books</code> avec les colonnes du nom de l'auteur et du titre du livre !</p> <p> - Juste en regardant ces deux colonnes, comment pouvons-nous savoir qui a \u00e9crit quel livre ? M\u00eame si nous supposons que chaque livre est align\u00e9 \u00e0 c\u00f4t\u00e9 de son auteur, regarder uniquement la table <code>authors</code> ne nous donnerait aucune information sur les livres \u00e9crits par cet auteur. - Certaines fa\u00e7ons possibles d'organiser les livres et les auteurs sont\u2026     - le syst\u00e8me d'honneur : la premi\u00e8re ligne de la table <code>authors</code> correspondra toujours \u00e0 la premi\u00e8re ligne de la table <code>books</code>. Le probl\u00e8me avec ce syst\u00e8me est que l'on peut faire une erreur (ajouter un livre mais oublier d'ajouter son auteur correspondant, ou vice versa). De plus, un auteur peut avoir \u00e9crit plus d'un livre ou un livre peut \u00eatre co-\u00e9crit par plusieurs auteurs.     - revenir \u00e0 une approche \u00e0 une seule table : Cette approche pourrait entra\u00eener une redondance (duplication des donn\u00e9es) si un auteur \u00e9crit plusieurs livres ou si un livre est co-\u00e9crit par plusieurs auteurs. Voici un aper\u00e7u de l'approche \u00e0 une seule table avec certaines donn\u00e9es redondantes.</p> <p> - Apr\u00e8s avoir consid\u00e9r\u00e9 ces id\u00e9es, il semble que la m\u00e9thode la plus efficace soit d'avoir deux tables diff\u00e9rentes. Examinons diff\u00e9rentes fa\u00e7ons dont les tables peuvent \u00eatre li\u00e9es entre elles dans les bases de donn\u00e9es relationnelles. - Consid\u00e9rons ce cas, o\u00f9 chaque auteur n'\u00e9crit qu'un seul livre et chaque livre est \u00e9crit par un seul auteur. Cela s'appelle une relation un-\u00e0-un.</p> <p> - D'un autre c\u00f4t\u00e9, si un auteur peut \u00e9crire plusieurs livres, la relation est une relation un-\u00e0-plusieurs.</p> <p> - Ici, nous voyons une autre situation o\u00f9 non seulement un auteur peut \u00e9crire plusieurs livres, mais les livres peuvent \u00e9galement \u00eatre co-\u00e9crits par plusieurs auteurs. Cela s'appelle une relation plusieurs-\u00e0-plusieurs.</p> <p></p>"},{"location":"cours2/#diagrammes-entite-relation","title":"Diagrammes Entit\u00e9-Relation","text":"<ul> <li>Nous venons de d\u00e9crire les relations un-\u00e0-un, un-\u00e0-plusieurs et plusieurs-\u00e0-plusieurs entre les tables d'une base de donn\u00e9es. Il est possible de visualiser de telles relations \u00e0 l'aide d'un diagramme entit\u00e9-relation (ER).</li> <li>Voici un diagramme ER pour les tables dans <code>longlist.db</code>.</li> </ul> <pre><code>erDiagram\n  \"Author\" }|--|{ \"Book\" : \"wrote\"\n  \"Publisher\" ||--|{ \"Book\" : \"published\"\n  \"Translator\" }o--|{ \"Book\" : \"translated\"\n  \"Book\" ||--o{ \"Rating\" : \"has\"\n</code></pre> <ul> <li>Chaque table est une entit\u00e9 dans notre base de donn\u00e9es. Les relations entre les tables, ou entit\u00e9s, sont repr\u00e9sent\u00e9es par les verbes qui marquent les lignes reliant les entit\u00e9s.</li> <li>Chaque ligne de ce diagramme est en notation pied-de-corbeau.<ul> <li>La premi\u00e8re ligne avec un cercle ressemble \u00e0 un 0 marqu\u00e9 sur la ligne. Cette ligne indique qu'il n'y a pas de relations.</li> <li>La deuxi\u00e8me ligne avec une ligne perpendiculaire ressemble \u00e0 un 1 marqu\u00e9 sur la ligne. Une entit\u00e9 avec cette fl\u00e8che doit avoir au moins une ligne qui lui est li\u00e9e dans l'autre table.</li> <li>La troisi\u00e8me ligne, qui ressemble \u00e0 un pied-de-corbeau, a plusieurs branches. Cette ligne signifie que l'entit\u00e9 est li\u00e9e \u00e0 plusieurs lignes d'une autre table.</li> </ul> </li> </ul> <p> - Par exemple :     - Nous lisons la notation de gauche \u00e0 droite. Un auteur \u00e9crit un livre (ou, chaque auteur peut avoir un livre associ\u00e9 \u00e0 lui).</p> <p>     - Maintenant, non seulement un auteur \u00e9crit un livre, mais un livre est \u00e9galement \u00e9crit par un auteur.</p> <p>     - Avec cet ajout, un auteur \u00e9crit au moins un livre et un livre est \u00e9crit par au moins un auteur. Pour reformuler, un auteur pourrait \u00eatre associ\u00e9 \u00e0 un ou plusieurs livres et un livre peut \u00eatre \u00e9crit par un ou plusieurs auteurs.</p> <p></p> <ul> <li>Revisitons le diagramme ER pour notre base de donn\u00e9es.</li> </ul> <pre><code>erDiagram\n  \"Author\" }|--|{ \"Book\" : \"wrote\"\n  \"Publisher\" ||--|{ \"Book\" : \"published\"\n  \"Translator\" }o--|{ \"Book\" : \"translated\"\n  \"Book\" ||--o{ \"Rating\" : \"has\"\n</code></pre> <ul> <li>En observant les lignes reliant les entit\u00e9s Book et Translator, nous pouvons dire que les livres n'ont pas besoin d'avoir un traducteur. Ils pourraient avoir z\u00e9ro \u00e0 plusieurs traducteurs. Cependant, un traducteur dans la base de donn\u00e9es traduit au moins un livre, et \u00e9ventuellement plusieurs.</li> </ul>"},{"location":"cours2/#questions","title":"Questions","text":"<p>Si nous avons une certaine base de donn\u00e9es, comment savons-nous les relations entre les entit\u00e9s qui y sont stock\u00e9es ?</p> <ul> <li>Les relations exactes entre les entit\u00e9s d\u00e9pendent vraiment du concepteur de la base de donn\u00e9es. Par exemple, savoir si chaque auteur peut \u00e9crire un seul livre ou plusieurs livres est une d\u00e9cision \u00e0 prendre lors de la conception de la base de donn\u00e9es. Un diagramme ER peut \u00eatre consid\u00e9r\u00e9 comme un outil pour communiquer ces d\u00e9cisions \u00e0 quelqu'un qui souhaite comprendre la base de donn\u00e9es et les relations entre ses entit\u00e9s.</li> </ul> <p>Une fois que nous savons qu'une relation existe entre certaines entit\u00e9s, comment l'impl\u00e9mentons-nous dans notre base de donn\u00e9es ?</p> <ul> <li>Nous verrons bient\u00f4t comment nous pouvons utiliser des cl\u00e9s en SQL pour lier les tables entre elles.</li> </ul>"},{"location":"cours2/#cles","title":"Cl\u00e9s","text":""},{"location":"cours2/#cles-primaires","title":"Cl\u00e9s Primaires","text":"<ul> <li>Dans le cas des livres, chaque livre a un identifiant unique appel\u00e9 un ISBN. En d'autres termes, si vous recherchez un livre par son ISBN, un seul livre sera trouv\u00e9. En termes de base de donn\u00e9es, l'ISBN est une cl\u00e9 primaire \u2014 un identifiant qui est unique pour chaque \u00e9l\u00e9ment d'une table.</li> </ul> <p> - Inspir\u00e9 par cette id\u00e9e d'un ISBN, nous pouvons imaginer attribuer des ID uniques \u00e0 nos \u00e9diteurs, auteurs et traducteurs ! Chacun de ces ID serait la cl\u00e9 primaire de la table \u00e0 laquelle il appartient.</p>"},{"location":"cours2/#cles-etrangeres","title":"Cl\u00e9s \u00c9trang\u00e8res","text":"<ul> <li>Les cl\u00e9s aident \u00e9galement \u00e0 lier les tables en SQL.</li> <li>Une cl\u00e9 \u00e9trang\u00e8re est une cl\u00e9 primaire prise d'une table diff\u00e9rente. En r\u00e9f\u00e9ren\u00e7ant la cl\u00e9 primaire d'une table diff\u00e9rente, elle aide \u00e0 lier les tables en formant un lien entre elles.</li> </ul> <p>Remarquez comment la cl\u00e9 primaire de la table <code>books</code> est maintenant une colonne dans la table <code>ratings</code>. Cela aide \u00e0 former une relation un-\u00e0-plusieurs entre les deux tables \u2014 un livre avec un titre (trouv\u00e9 dans la table <code>books</code>) peut avoir plusieurs \u00e9valuations (trouv\u00e9es dans la table <code>ratings</code>). - L'ISBN, comme nous pouvons le voir, est un long identifiant. Si chaque caract\u00e8re occupait un octet de m\u00e9moire, stocker un seul ISBN (y compris les tirets) prendrait 17 octets de m\u00e9moire, ce qui est beaucoup ! - Heureusement, nous n'avons pas n\u00e9cessairement besoin d'utiliser l'ISBN comme cl\u00e9 primaire. Nous pouvons simplement construire la n\u00f4tre en utilisant des nombres comme 1, 2, 3\u2026 et ainsi de suite tant que chaque livre a un num\u00e9ro unique pour l'identifier. - Auparavant, nous avons vu comment impl\u00e9menter la relation un-\u00e0-plusieurs entre les entit\u00e9s <code>books</code> et <code>ratings</code>. Voici un exemple de relation plusieurs-\u00e0-plusieurs.</p> <p></p> <p>Il y a maintenant une table appel\u00e9e <code>authored</code> qui mappe la cl\u00e9 primaire de <code>books</code> (<code>book_id</code>) \u00e0 la cl\u00e9 primaire de <code>authors</code> (<code>author_id</code>).</p>"},{"location":"cours2/#questions_1","title":"Questions","text":"<p>Les ID de l'auteur et du livre peuvent-ils \u00eatre les m\u00eames ? Par exemple, si <code>author_id</code> est 1 et <code>book_id</code> est \u00e9galement 1 dans la table <code>authored</code>, y aura-t-il une confusion ?</p> <ul> <li>Les tables comme <code>authored</code> sont appel\u00e9es tables \"jointes\" ou \"de jonction\". Dans de telles tables, nous savons g\u00e9n\u00e9ralement quelle cl\u00e9 primaire est r\u00e9f\u00e9renc\u00e9e par quelle colonne. Dans ce cas, puisque nous savons que la premi\u00e8re colonne contient uniquement la cl\u00e9 primaire de <code>authors</code> et que la deuxi\u00e8me colonne contient de m\u00eame uniquement la cl\u00e9 primaire de <code>books</code>, ce serait correct m\u00eame si les valeurs correspondaient !</li> </ul> <p>Si nous avons beaucoup de tables jointes comme celle-ci, cela ne prendrait-il pas trop de place ?</p> <ul> <li>Oui, il y a un compromis ici. Les tables comme celles-ci occupent plus d'espace mais elles nous permettent \u00e9galement d'avoir des relations plusieurs-\u00e0-plusieurs sans redondances, comme nous l'avons vu pr\u00e9c\u00e9demment.</li> </ul> <p>Lors de la modification de l'ID d'un livre ou d'un auteur, l'ID est-il \u00e9galement mis \u00e0 jour dans les autres tables ?</p> <ul> <li>Un ID mis \u00e0 jour doit toujours \u00eatre unique. \u00c9tant donn\u00e9 cela, les ID sont souvent abstraits et nous les modifions rarement.</li> </ul>"},{"location":"cours2/#sous-requetes","title":"Sous-requ\u00eates","text":"<ul> <li>Une sous-requ\u00eate est une requ\u00eate \u00e0 l'int\u00e9rieur d'une autre requ\u00eate. Ce sont \u00e9galement appel\u00e9es requ\u00eates imbriqu\u00e9es.</li> <li>Consid\u00e9rons cet exemple pour une relation un-\u00e0-plusieurs. Dans la table <code>books</code>, nous avons un ID pour indiquer l'\u00e9diteur, qui est une cl\u00e9 \u00e9trang\u00e8re prise de la table <code>publishers</code>. Pour d\u00e9couvrir les livres publi\u00e9s par Fitzcarraldo Editions, nous aurions besoin de deux requ\u00eates \u2014 une pour d\u00e9couvrir le <code>publisher_id</code> de Fitzcarraldo Editions \u00e0 partir de la table <code>publishers</code> et la deuxi\u00e8me, pour utiliser ce <code>publisher_id</code> pour trouver tous les livres publi\u00e9s par Fitzcarraldo Editions. Ces deux requ\u00eates peuvent \u00eatre combin\u00e9es en une seule en utilisant l'id\u00e9e d'une sous-requ\u00eate.</li> </ul> <pre><code>SELECT \"title\"\nFROM \"books\"\nWHERE \"publisher_id\" = (\n    SELECT \"id\"\n    FROM \"publishers\"\n    WHERE \"publisher\" = 'Fitzcarraldo Editions'\n);\n</code></pre> <p>Remarquez que :</p> <pre><code>- La sous-requ\u00eate est entre parenth\u00e8ses. La requ\u00eate la plus profonde dans les parenth\u00e8ses sera ex\u00e9cut\u00e9e en premier, suivie des requ\u00eates ext\u00e9rieures.\n- La requ\u00eate int\u00e9rieure est indent\u00e9e. Cela est fait selon les conventions de style pour les sous-requ\u00eates, afin d'augmenter la lisibilit\u00e9.\n</code></pre> <ul> <li>Pour trouver toutes les \u00e9valuations du livre In Memory of Memory</li> </ul> <pre><code>SELECT \"rating\"\nFROM \"ratings\"\nWHERE \"book_id\" = (\n    SELECT \"id\"\n    FROM \"books\"\n    WHERE \"title\" = 'In Memory of Memory'\n);\n</code></pre> <ul> <li>Pour s\u00e9lectionner uniquement l'\u00e9valuation moyenne de ce livre</li> </ul> <pre><code>SELECT AVG(\"rating\")\nFROM \"ratings\"\nWHERE \"book_id\" = (\n    SELECT \"id\"\n    FROM \"books\"\n    WHERE \"title\" = 'In Memory of Memory'\n);\n</code></pre> <ul> <li>L'exemple suivant concerne les relations plusieurs-\u00e0-plusieurs. Pour trouver le(s) auteur(s) qui a(ont) \u00e9crit le livre Flights, trois tables devraient \u00eatre interrog\u00e9es : <code>books</code>, <code>authors</code> et <code>authored</code>.</li> </ul> <pre><code>SELECT \"name\"\nFROM \"authors\"\nWHERE \"id\" = (\n    SELECT \"author_id\"\n    FROM \"authored\"\n    WHERE \"book_id\" = (\n      SELECT \"id\"\n      FROM \"books\"\n      WHERE \"title\" = 'Flights'\n    )\n);\n</code></pre> <p>La premi\u00e8re requ\u00eate qui est ex\u00e9cut\u00e9e est la plus profond\u00e9ment imbriqu\u00e9e \u2014 trouver l'ID du livre Flights. Ensuite, l'ID de(s) auteur(s) qui a(ont) \u00e9crit Flights est trouv\u00e9. Enfin, cela est utilis\u00e9 pour r\u00e9cup\u00e9rer le(s) nom(s) de(s) auteur(s).</p>"},{"location":"cours2/#in","title":"<code>IN</code>","text":"<ul> <li>Ce mot-cl\u00e9 est utilis\u00e9 pour v\u00e9rifier si la valeur souhait\u00e9e se trouve dans une liste ou un ensemble de valeurs donn\u00e9.</li> <li>La relation entre les auteurs et les livres est plusieurs-\u00e0-plusieurs. Cela signifie qu'il est possible qu'un auteur donn\u00e9 ait \u00e9crit plus d'un livre. Pour trouver les noms de tous les livres dans la base de donn\u00e9es \u00e9crits par Fernanda Melchor, nous utiliserions le mot-cl\u00e9 <code>IN</code> comme suit.</li> </ul> <pre><code>SELECT \"title\"\nFROM \"books\"\nWHERE \"id\" IN (\n    SELECT \"book_id\"\n    FROM \"authored\"\n    WHERE \"author_id\" = (\n        SELECT \"id\"\n        FROM \"authors\"\n        WHERE \"name\" = 'Fernanda Melchor'\n    )\n);\n</code></pre> <p>Notez que la requ\u00eate la plus profonde utilise <code>=</code> et non l'op\u00e9rateur <code>IN</code>. C'est parce que nous nous attendons \u00e0 trouver un seul auteur nomm\u00e9 Fernanda Melchor.</p>"},{"location":"cours2/#questions_2","title":"Questions","text":"<p>Que se passe-t-il si la valeur d'une requ\u00eate interne n'est pas trouv\u00e9e ?</p> <ul> <li>Dans ce cas, la requ\u00eate interne ne retournerait rien, incitant la requ\u00eate externe \u00e0 ne rien retourner non plus. La requ\u00eate externe d\u00e9pend donc des r\u00e9sultats de la requ\u00eate interne.</li> </ul> <p>Est-il n\u00e9cessaire d'utiliser quatre espaces pour indenter une sous-requ\u00eate ?</p> <ul> <li>Non. Le nombre d'espaces utilis\u00e9s pour indenter une sous-requ\u00eate peut varier, tout comme la longueur de chaque ligne dans la requ\u00eate. Mais l'id\u00e9e centrale derri\u00e8re la division des requ\u00eates et l'indentation des sous-requ\u00eates est de les rendre lisibles.</li> </ul> <p>Comment pouvons-nous impl\u00e9menter une relation plusieurs-\u00e0-un entre les tables ?</p> <ul> <li>Consid\u00e9rons la situation o\u00f9 un livre est co-\u00e9crit par plusieurs auteurs. Nous aurions une table <code>authored</code> avec plusieurs entr\u00e9es pour le m\u00eame ID de livre. Chacune de ces entr\u00e9es aurait un ID d'auteur diff\u00e9rent. Il est \u00e0 noter que les valeurs des cl\u00e9s \u00e9trang\u00e8res peuvent \u00eatre r\u00e9p\u00e9t\u00e9es dans une table, mais les valeurs des cl\u00e9s primaires sont toujours uniques.</li> </ul>"},{"location":"cours2/#join","title":"<code>JOIN</code>","text":"<ul> <li>Ce mot-cl\u00e9 nous permet de combiner deux tables ou plus.</li> <li>Pour comprendre comment fonctionne <code>JOIN</code>, consid\u00e9rons une base de donn\u00e9es de lions de mer et de leurs sch\u00e9mas de migration. Voici un aper\u00e7u de la base de donn\u00e9es.</li> </ul> <p> - Pour d\u00e9couvrir quelle distance le lion de mer Spot a parcourue, ou r\u00e9pondre \u00e0 des questions similaires sur chaque lion de mer, nous pourrions utiliser des requ\u00eates imbriqu\u00e9es. Alternativement, nous pourrions joindre les tables <code>sea lions</code> et <code>migrations</code> ensemble de sorte que chaque lion de mer ait \u00e9galement ses informations correspondantes comme une extension de la m\u00eame ligne. - Nous pouvons joindre les tables sur l'ID du lion de mer (le facteur commun entre les deux tables) pour nous assurer que les bonnes lignes sont align\u00e9es les unes contre les autres. - Avant de tester cela, assurez-vous de quitter <code>longlist.db</code> en utilisant la commande SQLite <code>.quit</code>. Ensuite, ouvrez <code>sea_lions.db</code>. - Pour joindre les tables</p> <pre><code>SELECT *\nFROM \"sea_lions\"\nJOIN \"migrations\" ON \"migrations\".\"id\" = \"sea_lions\".\"id\";\n</code></pre> <p>Remarquez que :</p> <pre><code>- Le mot-cl\u00e9 `ON` est utilis\u00e9 pour sp\u00e9cifier quelles valeurs correspondent entre les tables jointes. Il n'est pas possible de joindre des tables sans valeurs correspondantes.\n- Si des ID dans une table ne sont pas pr\u00e9sents dans l'autre, cette ligne ne sera pas pr\u00e9sente dans la table jointe. Ce type de jointure est appel\u00e9 `INNER JOIN`.\n</code></pre> <ul> <li>D'autres fa\u00e7ons de joindre les tables qui nous permettent de conserver certains ID non appari\u00e9s sont <code>LEFT JOIN</code>, <code>RIGHT JOIN</code> et <code>FULL JOIN</code>. Chacune de ces jointures est une sorte de <code>OUTER JOIN</code>.</li> <li>Un <code>LEFT JOIN</code> priorise les donn\u00e9es dans la table de gauche (ou premi\u00e8re).</li> </ul> <pre><code>SELECT *\nFROM \"sea_lions\"\nLEFT JOIN \"migrations\" ON \"migrations\".\"id\" = \"sea_lions\".\"id\";\n</code></pre> <p>Cette requ\u00eate conserverait toutes les donn\u00e9es des lions de mer de la table <code>sea_lions</code> \u2014 celle de gauche. Certaines lignes dans la table jointe pourraient \u00eatre partiellement vides. Cela se produirait si la table de droite n'avait pas de donn\u00e9es pour un ID particulier. - De m\u00eame, un <code>RIGHT JOIN</code> conserve toutes les lignes de la table de droite (ou deuxi\u00e8me). Un <code>FULL JOIN</code> nous permet de voir l'int\u00e9gralit\u00e9 de toutes les tables. - Comme nous pouvons l'observer, un <code>OUTER JOIN</code> pourrait conduire \u00e0 des valeurs vides ou <code>NULL</code> dans la table jointe. - Les deux tables de la base de donn\u00e9es des lions de mer ont la colonne <code>id</code>. Puisque la valeur sur laquelle nous joignons les tables a le m\u00eame nom de colonne dans les deux tables, nous pouvons en fait omettre la section <code>ON</code> de la requ\u00eate lors de la jointure.</p> <pre><code>SELECT *\nFROM \"sea_lions\"\nNATURAL JOIN \"migrations\";\n</code></pre> <p>Remarquez que le r\u00e9sultat n'a pas de colonne <code>id</code> en double dans ce cas. De plus, cette jointure fonctionne de mani\u00e8re similaire \u00e0 un <code>INNER JOIN</code>.</p>"},{"location":"cours2/#questions_3","title":"Questions","text":"<p>Dans la base de donn\u00e9es des lions de mer, comment les ID sont-ils cr\u00e9\u00e9s ? Viennent-ils de la table <code>sea_lions</code> ou de la table <code>migrations</code> ?</p> <ul> <li>L'ID de chaque lion de mer provenait probablement de chercheurs suivant les sch\u00e9mas de migration de ces lions de mer. En d'autres termes, les ID n'ont pas \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9s dans l'une ou l'autre des tables, mais ont \u00e9t\u00e9 attribu\u00e9s \u00e0 la source des donn\u00e9es elles-m\u00eames.</li> </ul> <p>Si nous essayons de joindre trois tables, comment pouvons-nous savoir quelles sont les tables de gauche ou de droite ?</p> <ul> <li>Pour chaque instruction <code>JOIN</code>, la premi\u00e8re table avant le mot-cl\u00e9 est celle de gauche. Celle qui est impliqu\u00e9e dans le mot-cl\u00e9 <code>JOIN</code> est la table de droite.</li> </ul> <p>Lorsque nous joignons des tables, la table jointe r\u00e9sultante est-elle enregistr\u00e9e ? Peut-on y faire r\u00e9f\u00e9rence plus tard sans joindre \u00e0 nouveau ?</p> <ul> <li>Dans la fa\u00e7on dont nous utilisons <code>JOIN</code>, le r\u00e9sultat est une table temporaire ou un ensemble de r\u00e9sultats. Il peut \u00eatre utilis\u00e9 pour la dur\u00e9e de la requ\u00eate.</li> </ul> <p>Il existe de nombreux types diff\u00e9rents de <code>JOIN</code>. Y a-t-il un type par d\u00e9faut que nous devrions utiliser ?</p> <ul> <li>Le type le plus simple \u2014 juste <code>JOIN</code> \u2014 est en fait un <code>INNER JOIN</code> et c'est le type par d\u00e9faut pour SQL.</li> </ul>"},{"location":"cours2/#sets-ensembles","title":"Sets - Ensembles","text":"<ul> <li>Avant de plonger dans les ensembles, nous devrons quitter la base de donn\u00e9es des lions de mer et passer \u00e0 <code>longlist.db</code>.</li> <li>Lors de l'ex\u00e9cution d'une requ\u00eate, les r\u00e9sultats que nous voyons sont appel\u00e9s un ensemble de r\u00e9sultats. C'est une sorte d'ensemble en SQL.</li> <li>Prenons un autre exemple. Dans notre base de donn\u00e9es de livres, nous avons des auteurs et des traducteurs. Une personne pourrait \u00eatre soit un auteur, soit un traducteur. Si les deux ensembles ont une intersection, il est \u00e9galement possible qu'une personne soit \u00e0 la fois auteur et traducteur de livres. Nous pouvons utiliser l'op\u00e9rateur <code>INTERSECT</code> pour trouver cet ensemble.</li> </ul> <pre><code>SELECT \"name\" FROM \"translators\"\nINTERSECT\nSELECT \"name\" FROM \"authors\";\n</code></pre> <ul> <li>Si une personne est soit un auteur, soit un traducteur, ou les deux, elle appartient \u00e0 l'union des deux ensembles. En d'autres termes, cet ensemble est form\u00e9 en combinant les ensembles des auteurs et des traducteurs.</li> </ul> <pre><code>SELECT \"name\" FROM \"translators\"\nUNION\nSELECT \"name\" FROM \"authors\";\n</code></pre> <p>Notez que chaque auteur et chaque traducteur est inclus dans cet ensemble de r\u00e9sultats, mais seulement une fois ! - Un l\u00e9ger ajustement de la requ\u00eate pr\u00e9c\u00e9dente nous donne la profession de la personne dans l'ensemble de r\u00e9sultats, selon qu'elle est un auteur ou un traducteur.</p> <pre><code>SELECT 'author' AS \"profession\", \"name\"\nFROM \"authors\"\nUNION\nSELECT 'translator' AS \"profession\", \"name\"\nFROM \"translators\";\n</code></pre> <ul> <li>Toute personne qui est un auteur et seulement un auteur est incluse dans l'ensemble suivant. Le mot-cl\u00e9 <code>EXCEPT</code> peut \u00eatre utilis\u00e9 pour trouver un tel ensemble. En d'autres termes, l'ensemble des traducteurs est soustrait de l'ensemble des auteurs pour former celui-ci.</li> </ul> <p></p> <pre><code>SELECT \"name\" FROM \"authors\"\nEXCEPT\nSELECT \"name\" FROM \"translators\";\n</code></pre> <p>Nous pouvons v\u00e9rifier qu'aucun auteur-traducteur de l'ensemble d'intersection n'appara\u00eet dans cet ensemble de r\u00e9sultats. - De m\u00eame, il est possible de trouver un ensemble de personnes qui sont seulement des traducteurs en utilisant <code>EXCEPT</code>. - Comment pouvons-nous trouver cet ensemble de personnes qui sont soit des auteurs, soit des traducteurs, mais pas les deux ?</p> <p> - Ces op\u00e9rateurs pourraient \u00eatre utiles pour r\u00e9pondre \u00e0 de nombreuses questions diff\u00e9rentes. Par exemple, nous pouvons trouver les livres que Sophie Hughes et Margaret Jull Costa ont traduits ensemble.</p> <pre><code>SELECT \"book_id\" FROM \"translated\"\nWHERE \"translator_id\" = (\n    SELECT \"id\" from \"translators\"\n    WHERE \"name\" = 'Sophie Hughes'\n)\nINTERSECT\nSELECT \"book_id\" FROM \"translated\"\nWHERE \"translator_id\" = (\n    SELECT \"id\" from \"translators\"\n    WHERE \"name\" = 'Margaret Jull Costa'\n);\n</code></pre> <p>Chacune des requ\u00eates imbriqu\u00e9es ici trouve les ID des livres pour un traducteur. Le mot-cl\u00e9 <code>INTERSECT</code> est utilis\u00e9 pour intersecter les ensembles r\u00e9sultants et nous donner les livres sur lesquels elles ont collabor\u00e9.</p>"},{"location":"cours2/#questions_4","title":"Questions","text":"<p>Pourrions-nous utiliser <code>INTERSECT</code>, <code>UNION</code> etc. pour effectuer des op\u00e9rations sur 3-4 ensembles ?</p> <ul> <li>Oui, absolument. Pour intersecter 3 ensembles, nous devrions utiliser l'op\u00e9rateur <code>INTERSECT</code> deux fois. Une note importante \u2014 nous devons nous assurer d'avoir le m\u00eame nombre et les m\u00eames types de colonnes dans les ensembles \u00e0 combiner en utilisant <code>INTERSECT</code>, <code>UNION</code> etc.</li> </ul>"},{"location":"cours2/#groupes","title":"Groupes","text":"<ul> <li>Consid\u00e9rons la table <code>ratings</code>. Pour chaque livre, nous voulons trouver la note moyenne du livre. Pour ce faire, nous devrions d'abord regrouper les notes ensemble par livre, puis faire la moyenne des notes pour chaque livre (chaque groupe).</li> </ul> <pre><code>SELECT \"book_id\", AVG(\"rating\") AS \"average rating\"\nFROM \"ratings\"\nGROUP BY \"book_id\";\n</code></pre> <p>Dans cette requ\u00eate, le mot-cl\u00e9 <code>GROUP BY</code> a \u00e9t\u00e9 utilis\u00e9 pour cr\u00e9er des groupes pour chaque livre, puis r\u00e9duire les notes du groupe en une note moyenne ! - Maintenant, nous voulons seulement voir les livres qui sont bien not\u00e9s, avec une note moyenne sup\u00e9rieure \u00e0 4.</p> <pre><code>SELECT \"book_id\", ROUND(AVG(\"rating\"), 2) AS \"average rating\"\nFROM \"ratings\"\nGROUP BY \"book_id\"\nHAVING \"average rating\" &gt; 4.0;\n</code></pre> <p>Notez que le mot-cl\u00e9 <code>HAVING</code> est utilis\u00e9 ici pour sp\u00e9cifier une condition pour les groupes, au lieu de <code>WHERE</code> (qui ne peut \u00eatre utilis\u00e9 que pour sp\u00e9cifier des conditions pour des lignes individuelles).</p>"},{"location":"cours2/#questions_5","title":"Questions","text":"<p>Est-il possible de voir le nombre de notes donn\u00e9es \u00e0 chaque livre ?</p> <ul> <li>Oui, cela n\u00e9cessiterait une l\u00e9g\u00e8re modification avec l'utilisation du mot-cl\u00e9 <code>COUNT</code>.</li> </ul> <pre><code>SELECT \"book_id\", COUNT(\"rating\")\nFROM \"ratings\"\nGROUP BY \"book_id\";\n</code></pre> <p>Est-il \u00e9galement possible de trier les donn\u00e9es obtenues ici ?</p> <ul> <li>Oui, c'est possible. Supposons que nous voulions trouver les notes moyennes par livre bien not\u00e9, class\u00e9es par ordre d\u00e9croissant.</li> </ul> <pre><code>SELECT \"book_id\", ROUND(AVG(\"rating\"), 2) AS \"average rating\"\nFROM \"ratings\"\nGROUP BY \"book_id\"\nHAVING \"average rating\" &gt; 4.0\nORDER BY \"average rating\" DESC;\n</code></pre>"},{"location":"cours2/#fin","title":"Fin","text":"<ul> <li>Cela conclut le Cours 1 sur les relations !</li> </ul>"},{"location":"cours2/dese/instructions/","title":"DESE","text":""},{"location":"cours2/dese/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Vous venez de d\u00e9crocher un nouvel emploi en tant qu'analyste de donn\u00e9es pour l'\u00c9tat du Massachusetts, au sein du D\u00e9partement de l'\u00c9ducation \u00c9l\u00e9mentaire et Secondaire (ou DESE, en abr\u00e9g\u00e9 !). Le DESE supervise le syst\u00e8me \u00e9ducatif public de l'\u00c9tat. L'une des responsabilit\u00e9s du DESE est de garantir que chaque enfant re\u00e7oive une \u00e9ducation de qualit\u00e9 \u2014 une \u00e9ducation dans laquelle ils rencontrent des enseignants exp\u00e9riment\u00e9s, ont acc\u00e8s \u00e0 une abondance de ressources, et obtiennent finalement leur dipl\u00f4me en ayant satisfait \u00e0 toutes les exigences de l'\u00c9tat. Vos comp\u00e9tences en SQL ont un r\u00f4le \u00e0 jouer dans ces nobles objectifs !</p> <p>Dans une base de donn\u00e9es appel\u00e9e <code>dese.db</code>, r\u00e9pondez \u00e0 des questions sur l'\u00e9tat de l'\u00e9ducation dans le Massachusetts.</p>"},{"location":"cours2/dese/instructions/#schema","title":"Sch\u00e9ma","text":"<p>Dans le Massachusetts, l'\u00e9ducation publique est d\u00e9l\u00e9gu\u00e9e \u00e0 des districts, un type de gouvernement scolaire souvent associ\u00e9 \u00e0 une ville individuelle. Ces districts contiennent \u00e0 leur tour de nombreuses \u00e9coles individuelles. Consid\u00e9rez le diagramme de relation d'entit\u00e9 ci-dessous, qui codifie la relation entre les districts, les \u00e9coles et d'autres donn\u00e9es collect\u00e9es par le DESE.</p> <pre><code>erDiagram\n    \"District\" ||--o{ \"School\": \"contains\"\n    \"District\" ||--o{ \"Expenditure\": \"makes\"\n    \"District\" ||--o{ \"Staff Evaluation\" : \"receives\"\n    \"School\" ||--o| \"Graduation Rate\" : \"reports\"\n</code></pre>"},{"location":"cours2/dese/instructions/#table-districts","title":"Table <code>districts</code>","text":"<p>La table <code>districts</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID du district</li> <li><code>name</code>, qui est le nom du district</li> <li><code>type</code>, qui indique le type de district. Dans le Massachusetts, il existe des districts scolaires publics (d\u00e9sign\u00e9s \"Public School District\") et des districts \u00e0 charte (d\u00e9sign\u00e9s \"Charter District\"). Pas besoin d'apprendre la diff\u00e9rence, bien que vous puissiez le faire sur Wikipedia si vous \u00eates curieux !</li> <li><code>city</code>, qui est la ville dans laquelle se trouve le district</li> <li><code>state</code>, qui est l'\u00c9tat dans lequel se trouve le district</li> <li><code>zip</code>, qui est le code postal dans lequel se trouve le district</li> </ul>"},{"location":"cours2/dese/instructions/#table-schools","title":"Table <code>schools</code>","text":"<p>La table <code>schools</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de l'\u00e9cole</li> <li><code>district_id</code>, qui est l'ID du district auquel appartient l'\u00e9cole</li> <li><code>name</code>, qui est le nom de l'\u00e9cole</li> <li><code>type</code>, qui indique le type d'\u00e9cole. Dans le Massachusetts, il existe des \u00e9coles publiques (d\u00e9sign\u00e9es \"Public School\") et des \u00e9coles \u00e0 charte (d\u00e9sign\u00e9es \"Charter School\"). Pas besoin d'apprendre la diff\u00e9rence, bien que vous puissiez le faire sur Wikipedia si vous \u00eates curieux !</li> <li><code>city</code>, qui est la ville dans laquelle se trouve l'\u00e9cole</li> <li><code>state</code>, qui est l'\u00c9tat dans lequel se trouve l'\u00e9cole</li> <li><code>zip</code>, qui est le code postal dans lequel se trouve l'\u00e9cole</li> </ul>"},{"location":"cours2/dese/instructions/#table-graduation_rates","title":"Table <code>graduation_rates</code>","text":"<p>La table <code>graduation_rates</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID du taux de dipl\u00f4me</li> <li><code>school_id</code>, qui est l'ID de l'\u00e9cole associ\u00e9e au dipl\u00f4me</li> <li><code>graduated</code>, qui est le pourcentage d'\u00e9l\u00e8ves, de 0 \u00e0 100, qui ont obtenu leur dipl\u00f4me \u00e0 temps</li> <li><code>dropped</code>, qui est le pourcentage d'\u00e9l\u00e8ves, de 0 \u00e0 100, qui ont abandonn\u00e9 l'\u00e9cole avant d'obtenir leur dipl\u00f4me</li> <li><code>excluded</code>, qui est le pourcentage d'\u00e9l\u00e8ves, de 0 \u00e0 100, qui ont \u00e9t\u00e9 \"exclus\" (c'est-\u00e0-dire expuls\u00e9s)</li> </ul>"},{"location":"cours2/dese/instructions/#table-expenditures","title":"Table <code>expenditures</code>","text":"<p>La table <code>expenditures</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de la d\u00e9pense</li> <li><code>district_id</code>, qui est l'ID du district associ\u00e9 \u00e0 la d\u00e9pense</li> <li><code>pupils</code>, qui est le nombre d'\u00e9l\u00e8ves fr\u00e9quentant le district donn\u00e9</li> <li><code>per_pupil_expenditure</code>, qui est le montant d'argent d\u00e9pens\u00e9, en dollars, pour chaque \u00e9l\u00e8ve fr\u00e9quentant le district</li> </ul>"},{"location":"cours2/dese/instructions/#table-staff_evaluations","title":"Table <code>staff_evaluations</code>","text":"<p>La table <code>staff_evaluations</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID du rapport d'\u00e9valuation</li> <li><code>district_id</code>, qui est l'ID du district associ\u00e9 \u00e0 l'\u00e9valuation</li> <li><code>evaluated</code>, qui est le pourcentage du personnel du district, de 0 \u00e0 100, formellement \u00e9valu\u00e9</li> <li><code>exemplary</code>, qui est le pourcentage du personnel du district, de 0 \u00e0 100, \u00e9valu\u00e9 comme \"exemplaire\"</li> <li><code>proficient</code>, qui est le pourcentage du personnel du district, de 0 \u00e0 100, \u00e9valu\u00e9 comme \"comp\u00e9tent\"</li> <li><code>needs_improvement</code>, qui est le pourcentage du personnel du district, de 0 \u00e0 100, \u00e9valu\u00e9 comme \"ayant besoin d'am\u00e9lioration\"</li> <li><code>unsatisfactory</code>, qui est le pourcentage du personnel du district, de 0 \u00e0 100, \u00e9valu\u00e9 comme \"insatisfaisant\"</li> </ul>"},{"location":"cours2/dese/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Pour chacune des questions suivantes, vous devez \u00e9crire une seule requ\u00eate SQL qui produit les r\u00e9sultats sp\u00e9cifi\u00e9s par chaque probl\u00e8me. Votre r\u00e9ponse doit prendre la forme d'une seule requ\u00eate SQL. Vous ne devez faire aucune supposition sur les <code>id</code> de lignes particuli\u00e8res : vos requ\u00eates doivent \u00eatre exactes m\u00eame si les <code>id</code> \u00e9taient diff\u00e9rents. Enfin, chaque requ\u00eate ne doit retourner que les donn\u00e9es n\u00e9cessaires pour r\u00e9pondre \u00e0 la question.</p>"},{"location":"cours2/dese/instructions/#1sql","title":"<code>1.sql</code>","text":"<p>Votre coll\u00e8gue pr\u00e9pare une carte de toutes les \u00e9coles publiques du Massachusetts. Dans <code>1.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les noms et les villes de toutes les \u00e9coles publiques du Massachusetts.</p> <ul> <li>Gardez \u00e0 l'esprit que toutes les \u00e9coles de la table <code>schools</code> ne sont pas consid\u00e9r\u00e9es comme des \u00e9coles publiques traditionnelles. Le Massachusetts reconna\u00eet \u00e9galement les \u00e9coles priv\u00e9es (<code>charter schools</code>) qui (selon le DESE !) sont consid\u00e9r\u00e9es comme distinctes.</li> </ul>"},{"location":"cours2/dese/instructions/#2sql","title":"<code>2.sql</code>","text":"<p>Votre \u00e9quipe travaille \u00e0 l'archivage d'anciennes donn\u00e9es. Dans <code>2.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les noms des districts qui ne sont plus op\u00e9rationnels.</p> <ul> <li>Les districts qui ne sont plus op\u00e9rationnels ont \"(non-op)\" \u00e0 la fin de leur nom.</li> </ul>"},{"location":"cours2/dese/instructions/#3sql","title":"<code>3.sql</code>","text":"<p>La l\u00e9gislature du Massachusetts souhaite savoir combien d'argent, en moyenne, les districts ont d\u00e9pens\u00e9 par \u00e9l\u00e8ve l'ann\u00e9e derni\u00e8re. Dans <code>3.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver la d\u00e9pense moyenne par \u00e9l\u00e8ve. Nommez la colonne \"per_pupil_expenditure\".</p> <ul> <li>Notez que la colonne <code>per_pupil_expenditure</code> dans la table <code>expenditures</code> contient le montant moyen, par \u00e9l\u00e8ve, que chaque district a d\u00e9pens\u00e9 l'ann\u00e9e derni\u00e8re. On vous a demand\u00e9 de trouver la moyenne de cet ensemble de moyennes, en pond\u00e9rant tous les districts de mani\u00e8re \u00e9gale, quelle que soit leur taille.</li> </ul>"},{"location":"cours2/dese/instructions/#4sql","title":"<code>4.sql</code>","text":"<p>Certaines villes ont plus d'\u00e9coles publiques que d'autres. Dans <code>4.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les 10 villes avec le plus d'\u00e9coles publiques. Votre requ\u00eate doit retourner les noms des villes et le nombre d'\u00e9coles publiques qu'elles contiennent, tri\u00e9s du plus grand nombre d'\u00e9coles publiques au plus petit. Si deux villes ont le m\u00eame nombre d'\u00e9coles publiques, triez-les par ordre alphab\u00e9tique.</p>"},{"location":"cours2/dese/instructions/#5sql","title":"<code>5.sql</code>","text":"<p>Le DESE souhaite que vous d\u00e9terminiez dans quelles villes des \u00e9coles publiques suppl\u00e9mentaires pourraient \u00eatre n\u00e9cessaires. Dans <code>5.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les villes avec 3 \u00e9coles publiques ou moins. Votre requ\u00eate doit retourner les noms des villes et le nombre d'\u00e9coles publiques qu'elles contiennent, tri\u00e9s du plus grand nombre d'\u00e9coles publiques au plus petit. Si deux villes ont le m\u00eame nombre d'\u00e9coles publiques, triez-les par ordre alphab\u00e9tique.</p>"},{"location":"cours2/dese/instructions/#6sql","title":"<code>6.sql</code>","text":"<p>Le DESE souhaite \u00e9valuer quelles \u00e9coles ont atteint un taux de dipl\u00f4me de 100 %. Dans <code>6.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les noms des \u00e9coles (publiques ou \u00e0 charte !) qui ont d\u00e9clar\u00e9 un taux de dipl\u00f4me de 100 %.</p>"},{"location":"cours2/dese/instructions/#7sql","title":"<code>7.sql</code>","text":"<p>Le DESE pr\u00e9pare un rapport sur les \u00e9coles du district scolaire de Cambridge. Dans <code>7.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les noms des \u00e9coles (publiques ou \u00e0 charte !) dans le district scolaire de Cambridge. Gardez \u00e0 l'esprit que Cambridge, la ville, contient quelques districts scolaires, mais le DESE s'int\u00e9resse au district dont le nom est \"Cambridge\".</p>"},{"location":"cours2/dese/instructions/#8sql","title":"<code>8.sql</code>","text":"<p>Un parent souhaite envoyer son enfant dans un district avec de nombreux autres \u00e9l\u00e8ves. Dans <code>8.sql</code>, \u00e9crivez une requ\u00eate SQL pour afficher les noms de tous les districts scolaires et le nombre d'\u00e9l\u00e8ves inscrits dans chacun.</p>"},{"location":"cours2/dese/instructions/#9sql","title":"<code>9.sql</code>","text":"<p>Un autre parent souhaite envoyer son enfant dans un district avec peu d'autres \u00e9l\u00e8ves. Dans <code>9.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver le(s) nom(s) du ou des district(s) scolaire(s) avec le plus petit nombre d'\u00e9l\u00e8ves. Ne rapportez que le(s) nom(s).</p>"},{"location":"cours2/dese/instructions/#10sql","title":"<code>10.sql</code>","text":"<p>Dans le Massachusetts, les d\u00e9penses des districts scolaires sont en partie d\u00e9termin\u00e9es par les taxes locales sur les valeurs immobili\u00e8res (par exemple, les valeurs des maisons). Dans <code>10.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les 10 districts scolaires publics avec les d\u00e9penses par \u00e9l\u00e8ve les plus \u00e9lev\u00e9es. Votre requ\u00eate doit retourner les noms des districts et la d\u00e9pense par \u00e9l\u00e8ve pour chacun.</p>"},{"location":"cours2/dese/instructions/#11sql","title":"<code>11.sql</code>","text":"<p>Y a-t-il une relation entre les d\u00e9penses scolaires et les taux de dipl\u00f4me ? Dans <code>11.sql</code>, \u00e9crivez une requ\u00eate SQL pour afficher les noms des \u00e9coles, leur d\u00e9pense par \u00e9l\u00e8ve et leur taux de dipl\u00f4me. Triez les \u00e9coles de la plus grande d\u00e9pense par \u00e9l\u00e8ve \u00e0 la plus petite. Si deux \u00e9coles ont la m\u00eame d\u00e9pense par \u00e9l\u00e8ve, triez par nom d'\u00e9cole.</p> <ul> <li>Vous devez supposer qu'une \u00e9cole d\u00e9pense le m\u00eame montant par \u00e9l\u00e8ve que l'ensemble de son district.</li> </ul>"},{"location":"cours2/dese/instructions/#12sql","title":"<code>12.sql</code>","text":"<p>Un parent vous demande conseil pour trouver les meilleurs districts scolaires publics du Massachusetts. Dans <code>12.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les districts scolaires publics avec des d\u00e9penses par \u00e9l\u00e8ve sup\u00e9rieures \u00e0 la moyenne et un pourcentage sup\u00e9rieur \u00e0 la moyenne d'enseignants not\u00e9s \"exemplaires\". Votre requ\u00eate doit retourner les noms des districts, ainsi que leurs d\u00e9penses par \u00e9l\u00e8ve et le pourcentage d'enseignants not\u00e9s exemplaires. Triez les r\u00e9sultats d'abord par le pourcentage d'enseignants not\u00e9s exemplaires (du plus \u00e9lev\u00e9 au plus bas), puis par la d\u00e9pense par \u00e9l\u00e8ve (du plus \u00e9lev\u00e9 au plus bas).</p>"},{"location":"cours2/dese/instructions/#13sql","title":"<code>13.sql</code>","text":"<p>Dans <code>13.sql</code>, \u00e9crivez une requ\u00eate SQL pour r\u00e9pondre \u00e0 une question que vous vous posez sur les donn\u00e9es ! La requ\u00eate doit :</p> <ul> <li>Impliquer au moins une <code>JOINTURE</code> ou une sous-requ\u00eate</li> </ul>"},{"location":"cours2/dese/instructions/#utilisation","title":"Utilisation","text":"<p>Pour tester vos requ\u00eates au fur et \u00e0 mesure que vous les \u00e9crivez dans vos fichiers <code>.sql</code>, vous pouvez interroger la base de donn\u00e9es en ex\u00e9cutant :</p> <pre><code>.read FILENAME\n</code></pre> <p>o\u00f9 <code>FILENAME</code> est le nom du fichier contenant votre requ\u00eate SQL. Par exemple,</p> <pre><code>.read 1.sql\n</code></pre> <p>Vous pouvez \u00e9galement ex\u00e9cuter :</p> <pre><code>$ cat FILENAME | sqlite3 dese.db &gt; output.txt\n</code></pre> <p>pour rediriger la sortie de la requ\u00eate vers un fichier texte nomm\u00e9 <code>output.txt</code>. (Cela peut \u00eatre utile pour v\u00e9rifier combien de lignes sont retourn\u00e9es par votre requ\u00eate !)</p>"},{"location":"cours2/moneyball/instructions/","title":"Moneyball","text":"<p>Il s'agit de r\u00e9duire les choses \u00e0 un seul chiffre. En utilisant les statistiques comme nous les lisons, nous trouverons la valeur des joueurs que personne d'autre ne peut voir.</p> <p>Peter Brand dans Moneyball</p>"},{"location":"cours2/moneyball/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Nous sommes en 2001. Vous avez \u00e9t\u00e9 embauch\u00e9 pour aider \u00e0 tirer le meilleur parti du budget limit\u00e9 de l'\u00e9quipe de baseball des Oakland Athletics. Chaque ann\u00e9e, des \u00e9quipes comme les \"A's\" engagent de nouveaux joueurs de baseball. Malheureusement, vous manquez de joueurs vedettes \u2014 et de fonds. Cependant, avec un peu de SQL et de chance, qui dit que vous ne pouvez pas cr\u00e9er une \u00e9quipe qui d\u00e9fie les attentes ?</p> <p>Avec une base de donn\u00e9es appel\u00e9e <code>moneyball.db</code> \u2014 qui contient des informations sur les joueurs, leurs performances (performances) et leurs salaires (salaries) \u2014 aidez les Oakland Athletics \u00e0 trouver la valeur des joueurs que les autres pourraient manquer.</p>"},{"location":"cours2/moneyball/instructions/#schema","title":"Sch\u00e9ma","text":"<p><code>moneyball.db</code> repr\u00e9sente tous les joueurs (players), \u00e9quipes (teams), salaires (salaries) et performances (performances) de la Ligue Majeure de Baseball jusqu'en 2001. En particulier, <code>moneyball.db</code> repr\u00e9sente les entit\u00e9s suivantes :</p> <ul> <li>Un joueur (player), qui inclut toute personne ayant jou\u00e9 en Ligue Majeure de Baseball pendant une p\u00e9riode quelconque</li> <li>Une \u00e9quipe (team), qui inclut toutes les \u00e9quipes, pass\u00e9es et pr\u00e9sentes, en Ligue Majeure de Baseball</li> <li>Une performance (performance), qui d\u00e9crit les types de coups s\u00fbrs (hits) qu'un joueur a r\u00e9alis\u00e9s pour son \u00e9quipe une ann\u00e9e donn\u00e9e</li> <li>Un salaire (salary), qui est le montant d'argent qu'une \u00e9quipe a pay\u00e9 \u00e0 l'un de ses joueurs une ann\u00e9e donn\u00e9e</li> </ul> <p>Ces entit\u00e9s sont li\u00e9es selon le diagramme de relation d'entit\u00e9 (ER) ci-dessous :</p> <pre><code>erDiagram\n    Player ||--|{ Salary : earns\n    Player ||--|{ \"Performance\" : generates\n    Team ||--|{ Salary : \"pays\"\n    \"Performance\" }|--|| Team : with\n</code></pre>"},{"location":"cours2/moneyball/instructions/#table-players","title":"Table <code>players</code>","text":"<p>La table <code>players</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID du joueur (player)</li> <li><code>first_name</code>, qui est le pr\u00e9nom du joueur (first name)</li> <li><code>last_name</code>, qui est le nom de famille du joueur (last name)</li> <li><code>bats</code>, qui est le c\u00f4t\u00e9 (\"R\" pour droit ou \"L\" pour gauche) avec lequel le joueur frappe (bats)</li> <li><code>throws</code>, qui est la main (\"R\" pour droit ou \"L\" pour gauche) avec laquelle le joueur lance (throws)</li> <li><code>weight</code>, qui est le poids du joueur en livres (pounds)</li> <li><code>height</code>, qui est la taille du joueur en pouces (inches)</li> <li><code>debut</code>, qui est la date (exprim\u00e9e sous la forme <code>YYYY-MM-DD</code>) \u00e0 laquelle le joueur a commenc\u00e9 sa carri\u00e8re en MLB (debut)</li> <li><code>final_game</code>, qui est la date (exprim\u00e9e sous la forme <code>YYYY-MM-DD</code>) \u00e0 laquelle le joueur a jou\u00e9 son dernier match en MLB (final game)</li> <li><code>birth_year</code>, qui est l'ann\u00e9e de naissance du joueur (birth year)</li> <li><code>birth_month</code>, qui est le mois (exprim\u00e9 sous la forme d'un entier) de naissance du joueur (birth month)</li> <li><code>birth_day</code>, qui est le jour de naissance du joueur (birth day)</li> <li><code>birth_city</code>, qui est la ville de naissance du joueur (birth city)</li> <li><code>birth_state</code>, qui est l'\u00c9tat de naissance du joueur (birth state)</li> <li><code>birth_country</code>, qui est le pays de naissance du joueur (birth country)</li> </ul>"},{"location":"cours2/moneyball/instructions/#table-teams","title":"Table <code>teams</code>","text":"<p>La table <code>teams</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de chaque \u00e9quipe (team)</li> <li><code>year</code>, qui est l'ann\u00e9e de fondation de l'\u00e9quipe (year founded)</li> <li><code>name</code>, qui est le nom de l'\u00e9quipe (name)</li> <li><code>park</code>, qui est le nom du parc o\u00f9 l'\u00e9quipe joue (ou a jou\u00e9) (park)</li> </ul>"},{"location":"cours2/moneyball/instructions/#table-performances","title":"Table <code>performances</code>","text":"<p>La table <code>performances</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de la performance (performance)</li> <li><code>player_id</code>, qui est l'ID du joueur (player) qui a g\u00e9n\u00e9r\u00e9 la performance (performance)</li> <li><code>team_id</code>, qui est l'ID de l'\u00e9quipe (team) pour laquelle le joueur a g\u00e9n\u00e9r\u00e9 la performance (performance)</li> <li><code>year</code>, qui est l'ann\u00e9e \u00e0 laquelle le joueur a g\u00e9n\u00e9r\u00e9 la performance (year)</li> <li><code>G</code>, qui est le nombre de matchs jou\u00e9s (games played) par le joueur, pour l'\u00e9quipe donn\u00e9e, l'ann\u00e9e donn\u00e9e</li> <li><code>AB</code>, qui est le nombre de \"at bats\" (passages \u00e0 la batte) du joueur, pour l'\u00e9quipe donn\u00e9e, l'ann\u00e9e donn\u00e9e</li> <li><code>H</code>, qui est le nombre de coups s\u00fbrs (hits) du joueur, pour l'\u00e9quipe donn\u00e9e, l'ann\u00e9e donn\u00e9e</li> <li><code>2B</code>, qui est le nombre de doubles (coups s\u00fbrs de deux bases) du joueur, pour l'\u00e9quipe donn\u00e9e, l'ann\u00e9e donn\u00e9e</li> <li><code>3B</code>, qui est le nombre de triples (coups s\u00fbrs de trois bases) du joueur, pour l'\u00e9quipe donn\u00e9e, l'ann\u00e9e donn\u00e9e</li> <li><code>HR</code>, qui est le nombre de coups de circuit (home runs) du joueur, pour l'\u00e9quipe donn\u00e9e, l'ann\u00e9e donn\u00e9e</li> <li><code>RBI</code>, qui est le nombre de \"runs batted in\" (points produits) du joueur, pour l'\u00e9quipe donn\u00e9e, l'ann\u00e9e donn\u00e9e</li> <li><code>SB</code>, qui est le nombre de buts vol\u00e9s (stolen bases) du joueur, pour l'\u00e9quipe donn\u00e9e, l'ann\u00e9e donn\u00e9e</li> </ul>"},{"location":"cours2/moneyball/instructions/#table-salaries","title":"Table <code>salaries</code>","text":"<p>La table <code>salaries</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID du salaire (salary)</li> <li><code>player_id</code>, qui est l'ID du joueur (player) gagnant le salaire (salary)</li> <li><code>team_id</code>, qui est l'ID de l'\u00e9quipe (team) payant le salaire (salary)</li> <li><code>year</code>, qui est l'ann\u00e9e pendant laquelle le salaire (salary) a \u00e9t\u00e9 pay\u00e9</li> <li><code>salary</code>, qui est le salaire (salary) lui-m\u00eame en dollars am\u00e9ricains (non ajust\u00e9 pour l'inflation)</li> </ul>"},{"location":"cours2/moneyball/instructions/#specification","title":"Sp\u00e9cification","text":""},{"location":"cours2/moneyball/instructions/#1sql","title":"<code>1.sql</code>","text":"<p>Vous devriez commencer par vous faire une id\u00e9e de l'\u00e9volution des salaires moyens des joueurs au fil du temps. Dans <code>1.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver le salaire moyen des joueurs par ann\u00e9e (year).</p> <ul> <li>Triez par ann\u00e9e (year) en ordre d\u00e9croissant.</li> <li>Arrondissez le salaire (salary) \u00e0 deux d\u00e9cimales et appelez la colonne \"salaire moyen\" (average salary).</li> <li>Votre requ\u00eate doit retourner une table avec deux colonnes, une pour l'ann\u00e9e (year) et une pour le salaire moyen (average salary).</li> </ul>"},{"location":"cours2/moneyball/instructions/#2sql","title":"<code>2.sql</code>","text":"<p>Votre directeur g\u00e9n\u00e9ral (c'est-\u00e0-dire la personne qui prend des d\u00e9cisions sur les contrats des joueurs) vous demande si l'\u00e9quipe devrait \u00e9changer un joueur actuel contre Cal Ripken Jr., une star qui approche probablement de sa retraite. Dans <code>2.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver l'historique des salaires (salary history) de Cal Ripken Jr.</p> <ul> <li>Triez par ann\u00e9e (year) en ordre d\u00e9croissant.</li> <li>Votre requ\u00eate doit retourner une table avec deux colonnes, une pour l'ann\u00e9e (year) et une pour le salaire (salary).</li> </ul>"},{"location":"cours2/moneyball/instructions/#3sql","title":"<code>3.sql</code>","text":"<p>Votre \u00e9quipe a besoin d'un excellent frappeur de coups de circuit (home run hitter). Ken Griffey Jr., un laur\u00e9at de longue date du Silver Slugger et du Gold Glove, pourrait \u00eatre un bon prospect. Dans <code>3.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver l'historique des coups de circuit (home run history) de Ken Griffey Jr.</p> <ul> <li>Triez par ann\u00e9e (year) en ordre d\u00e9croissant.</li> <li>Notez qu'il peut y avoir deux joueurs portant le nom \"Ken Griffey.\" Ce Ken Griffey est n\u00e9 en 1969.</li> <li>Votre requ\u00eate doit retourner une table avec deux colonnes, une pour l'ann\u00e9e (year) et une pour les coups de circuit (home runs).</li> </ul>"},{"location":"cours2/moneyball/instructions/#4sql","title":"<code>4.sql</code>","text":"<p>Vous devez faire une recommandation sur les joueurs que l'\u00e9quipe devrait envisager d'engager. Avec le budget limit\u00e9 de l'\u00e9quipe, le directeur g\u00e9n\u00e9ral veut savoir quels joueurs ont \u00e9t\u00e9 les moins bien pay\u00e9s en 2001. Dans <code>4.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les 50 joueurs les moins bien pay\u00e9s en 2001.</p> <ul> <li>Triez les joueurs par salaire (salary), du plus bas au plus \u00e9lev\u00e9.</li> <li>Si deux joueurs ont le m\u00eame salaire (salary), triez par ordre alphab\u00e9tique par pr\u00e9nom (first name) puis par nom de famille (last name).</li> <li>Si deux joueurs ont le m\u00eame pr\u00e9nom (first name) et nom de famille (last name), triez par ID du joueur (player ID).</li> <li>Votre requ\u00eate doit retourner trois colonnes, une pour les pr\u00e9noms des joueurs (first names), une pour leurs noms de famille (last names) et une pour leurs salaires (salaries).</li> </ul>"},{"location":"cours2/moneyball/instructions/#5sql","title":"<code>5.sql</code>","text":"<p>C'est une journ\u00e9e un peu calme au bureau. Bien que Satchel ne joue plus, dans <code>5.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver toutes les \u00e9quipes (teams) pour lesquelles Satchel Paige a jou\u00e9.</p> <ul> <li>Votre requ\u00eate doit retourner une table avec une seule colonne, une pour les noms des \u00e9quipes (names of the teams).</li> </ul>"},{"location":"cours2/moneyball/instructions/#6sql","title":"<code>6.sql</code>","text":"<p>Quelles \u00e9quipes pourraient \u00eatre les plus grandes concurrentes des A's cette ann\u00e9e ? Dans <code>6.sql</code>, \u00e9crivez une requ\u00eate SQL pour retourner les 5 meilleures \u00e9quipes (top 5 teams), tri\u00e9es par le nombre total de coups s\u00fbrs (total hits) r\u00e9alis\u00e9s par les joueurs en 2001.</p> <ul> <li>Appelez la colonne repr\u00e9sentant le nombre total de coups s\u00fbrs (total hits) r\u00e9alis\u00e9s par les joueurs en 2001 \"total hits\" (total hits).</li> <li>Triez par nombre total de coups s\u00fbrs (total hits), du plus \u00e9lev\u00e9 au plus bas.</li> <li>Votre requ\u00eate doit retourner deux colonnes, une pour les noms des \u00e9quipes (names of the teams) et une pour leurs coups s\u00fbrs totaux (total hits) en 2001.</li> </ul>"},{"location":"cours2/moneyball/instructions/#7sql","title":"<code>7.sql</code>","text":"<p>Vous devez faire une recommandation sur le ou les joueurs \u00e0 \u00e9viter de recruter. Dans <code>7.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver le nom du joueur (player) qui a \u00e9t\u00e9 le mieux pay\u00e9 de tous les temps en Ligue Majeure de Baseball (Major League Baseball).</p> <ul> <li>Votre requ\u00eate doit retourner une table avec deux colonnes, une pour le pr\u00e9nom du joueur (first name) et une pour son nom de famille (last name).</li> </ul>"},{"location":"cours2/moneyball/instructions/#8sql","title":"<code>8.sql</code>","text":"<p>Combien les A's devraient-ils payer pour obtenir le meilleur frappeur de coups de circuit (home run hitter) de la saison derni\u00e8re ? Dans <code>8.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver le salaire de 2001 (2001 salary) du joueur qui a frapp\u00e9 le plus de coups de circuit (home runs) en 2001.</p> <ul> <li>Votre requ\u00eate doit retourner une table avec une colonne, le salaire (salary) du joueur.</li> </ul>"},{"location":"cours2/moneyball/instructions/#9sql","title":"<code>9.sql</code>","text":"<p>Quels salaires les autres \u00e9quipes paient-elles ? Dans <code>9.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les 5 \u00e9quipes les moins bien pay\u00e9es (par salaire moyen) en 2001.</p> <ul> <li>Arrondissez la colonne du salaire moyen (average salary) \u00e0 deux d\u00e9cimales et appelez-la \"salaire moyen\" (average salary).</li> <li>Triez les \u00e9quipes par salaire moyen (average salary), du plus bas au plus \u00e9lev\u00e9.</li> <li>Votre requ\u00eate doit retourner une table avec deux colonnes, une pour les noms des \u00e9quipes (names of the teams) et une pour leur salaire moyen (average salary).</li> </ul>"},{"location":"cours2/moneyball/instructions/#10sql","title":"<code>10.sql</code>","text":"<p>Le directeur g\u00e9n\u00e9ral vous a demand\u00e9 un rapport d\u00e9taillant le nom de chaque joueur (player), son salaire (salary) pour chaque ann\u00e9e o\u00f9 il a jou\u00e9, et son nombre de coups de circuit (home runs) pour chaque ann\u00e9e o\u00f9 il a jou\u00e9. Pour \u00eatre pr\u00e9cis, le tableau doit inclure :</p> <ul> <li>Les pr\u00e9noms de tous les joueurs (first names of all players)</li> <li>Les noms de famille de tous les joueurs (last names of all players)</li> <li>Les salaires de tous les joueurs (salaries of all players)</li> <li>Les coups de circuit de tous les joueurs (home runs of all players)</li> <li>L'ann\u00e9e (year) \u00e0 laquelle le joueur a \u00e9t\u00e9 pay\u00e9 ce salaire (salary) et a frapp\u00e9 ces coups de circuit (home runs)</li> </ul> <p>Dans <code>10.sql</code>, \u00e9crivez une requ\u00eate pour retourner un tel tableau.</p> <ul> <li>Votre requ\u00eate doit retourner une table avec cinq colonnes, selon ce qui pr\u00e9c\u00e8de.</li> <li>Triez les r\u00e9sultats, d'abord et avant tout, par ID des joueurs (player IDs) (du plus bas au plus \u00e9lev\u00e9).</li> <li>Triez les lignes concernant le m\u00eame joueur par ann\u00e9e (year), en ordre d\u00e9croissant.</li> <li>Consid\u00e9rez un cas particulier : supposons qu'un joueur ait plusieurs salaires (salaries) ou performances (performances) pour une ann\u00e9e donn\u00e9e. Triez-les d'abord par nombre de coups de circuit (home runs), en ordre d\u00e9croissant, puis par salaire (salary), en ordre d\u00e9croissant.</li> <li>Assurez-vous que, pour une seule ligne, l'ann\u00e9e (year) du salaire (salary) et l'ann\u00e9e (year) de la performance (performance) correspondent.</li> </ul>"},{"location":"cours2/moneyball/instructions/#11sql","title":"<code>11.sql</code>","text":"<p>Vous avez besoin d'un joueur qui peut obtenir des coups s\u00fbrs (hits). Qui pourrait \u00eatre le plus sous-estim\u00e9 ? Dans <code>11.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les 10 joueurs les moins chers par coup s\u00fbr (hit) en 2001.</p> <ul> <li>Votre requ\u00eate doit retourner une table avec trois colonnes, une pour les pr\u00e9noms des joueurs (first names), une pour leurs noms de famille (last names) et une appel\u00e9e \"dollars par coup s\u00fbr\" (dollars per hit).</li> <li>Vous pouvez calculer la colonne \"dollars par coup s\u00fbr\" (dollars per hit) en divisant le salaire (salary) d'un joueur en 2001 par le nombre de coups s\u00fbrs (hits) qu'il a r\u00e9alis\u00e9s en 2001. Rappelez-vous que vous pouvez utiliser <code>AS</code> pour renommer une colonne.</li> <li>Diviser un salaire (salary) par 0 coup s\u00fbr (hit) donnera une valeur <code>NULL</code>. \u00c9vitez le probl\u00e8me en filtrant les joueurs avec 0 coup s\u00fbr (hit).</li> <li>Triez la table par la colonne \"dollars par coup s\u00fbr\" (dollars per hit), du moins cher au plus cher. Si deux joueurs ont le m\u00eame \"dollars par coup s\u00fbr\" (dollars per hit), triez par pr\u00e9nom (first name), puis par nom de famille (last name), par ordre alphab\u00e9tique.</li> <li>Comme dans <code>10.sql</code>, assurez-vous que l'ann\u00e9e (year) du salaire (salary) et l'ann\u00e9e (year) de la performance (performance) correspondent.</li> <li>Vous pouvez supposer, pour simplifier, qu'un joueur n'aura qu'un seul salaire (salary) et une seule performance (performance) en 2001.</li> </ul>"},{"location":"cours2/moneyball/instructions/#12sql","title":"<code>12.sql</code>","text":"<p>Les coups s\u00fbrs (hits) sont formidables, mais les RBIs (runs batted in) le sont aussi ! Dans <code>12.sql</code>, \u00e9crivez une requ\u00eate SQL pour trouver les joueurs parmi les 10 moins chers par coup s\u00fbr (hit) et parmi les 10 moins chers par RBI en 2001.</p> <ul> <li>Votre requ\u00eate doit retourner une table avec deux colonnes, une pour les pr\u00e9noms des joueurs (first names) et une pour leurs noms de famille (last names).</li> <li>Vous pouvez calculer le salaire (salary) d'un joueur par RBI en divisant son salaire (salary) de 2001 par son nombre de RBIs en 2001.</li> <li>Vous pouvez supposer, pour simplifier, qu'un joueur n'aura qu'un seul salaire (salary) et une seule performance (performance) en 2001.</li> <li>Triez vos r\u00e9sultats par ID du joueur (player ID), du plus bas au plus \u00e9lev\u00e9 (ou par ordre alphab\u00e9tique par nom de famille (last name), car les deux sont identiques dans ce cas !).</li> <li>Gardez \u00e0 l'esprit les le\u00e7ons apprises dans <code>10.sql</code> et <code>11.sql</code> !</li> </ul>"},{"location":"cours2/moneyball/instructions/#utilisation","title":"Utilisation","text":"<p>Pour tester vos requ\u00eates au fur et \u00e0 mesure que vous les \u00e9crivez dans vos fichiers <code>.sql</code>, vous pouvez interroger la base de donn\u00e9es en ex\u00e9cutant :</p> <pre><code>.read FILENAME\n</code></pre> <p>o\u00f9 <code>FILENAME</code> est le nom du fichier contenant votre requ\u00eate SQL. Par exemple,</p> <pre><code>.read 1.sql\n</code></pre> <p>Vous pouvez \u00e9galement ex\u00e9cuter :</p> <pre><code>$ cat FILENAME | sqlite3 moneyball.db &gt; output.txt\n</code></pre> <p>pour rediriger la sortie de la requ\u00eate vers un fichier texte nomm\u00e9 <code>output.txt</code>. (Cela peut \u00eatre utile pour v\u00e9rifier combien de lignes sont retourn\u00e9es par votre requ\u00eate !)</p>"},{"location":"cours2/moneyball/instructions/#remerciements","title":"Remerciements","text":"<p>R\u00e9cit adapt\u00e9 du livre de Michael Lewis, Moneyball : The Art of Winning an Unfair Game. Donn\u00e9es adapt\u00e9es de la Lahman Baseball Database, sous licence Creative Commons Attribution-ShareAlike 3.0 Unported License.</p>"},{"location":"cours2/packages/instructions/","title":"Livraisons, S'il Vous Pla\u00eet","text":""},{"location":"cours2/packages/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Vous \u00eates un employ\u00e9 de bureau de poste pour la ville de Boston et, \u00e0 ce titre, vous supervisez la livraison du courrier dans toute la ville. Pour la plupart, tous les colis envoy\u00e9s sont finalement livr\u00e9s. Sauf que, de temps en temps, un myst\u00e8re vous tombe dessus : un colis manquant ! Pour chaque client qui vient vous signaler un colis manquant, votre travail consiste \u00e0 d\u00e9terminer :</p> <ul> <li>L'adresse actuelle (ou l'emplacement !) de leur colis manquant</li> <li>Le type d'adresse ou d'emplacement (par exemple, r\u00e9sidentiel, commercial, etc.)</li> <li>Le contenu du colis</li> </ul> <p>Tout ce que vous savez est ce que les clients eux-m\u00eames vous diront. Pour r\u00e9soudre chaque myst\u00e8re, vous devrez utiliser la base de donn\u00e9es du service de livraison de courrier, <code>packages.db</code>, qui contient des donn\u00e9es sur le transit des colis dans la ville. En utilisant uniquement les informations de la base de donn\u00e9es, votre t\u00e2che est d'aider chaque client \u00e0 retrouver son colis manquant.</p>"},{"location":"cours2/packages/instructions/#distribution-du-code","title":"Distribution du Code","text":"<p>Pour ce probl\u00e8me, vous devrez utiliser <code>packages.db</code>, ainsi qu'un fichier <code>.sql</code> et un fichier <code>.txt</code> dans lesquels vous \u00e9crirez vos requ\u00eates et r\u00e9ponses.</p>"},{"location":"cours2/packages/instructions/#schema","title":"Sch\u00e9ma","text":"<p><code>packages.db</code> repr\u00e9sente toutes les livraisons de colis r\u00e9centes dans la ville de Boston. Pour ce faire, <code>packages.db</code> repr\u00e9sente les entit\u00e9s suivantes :</p> <ul> <li>Chauffeurs, qui sont les personnes qui livrent les colis</li> <li>Les colis eux-m\u00eames</li> <li>Adresses, comme 1234 Main Street</li> <li>Scans des colis, qui repr\u00e9sentent des confirmations qu'un chauffeur de livraison a pris ou d\u00e9pos\u00e9 un colis donn\u00e9</li> </ul> <p>Ces entit\u00e9s sont li\u00e9es selon le diagramme de relation d'entit\u00e9 (ER) ci-dessous :</p> <pre><code>erDiagram\n    \"Package\" }o--|| \"Address\": \"from\"\n    \"Package\" }o--|| \"Address\": \"to\"\n    \"Scan\" }|--|| \"Package\" : \"of\"\n    \"Scan\" }o--|| \"Address\" : \"at\"\n    \"Driver\" ||--o{ \"Scan\" : \"makes\"\n</code></pre>"},{"location":"cours2/packages/instructions/#table-addresses","title":"Table <code>addresses</code>","text":"<p>La table <code>addresses</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de l'adresse</li> <li><code>address</code>, qui est l'adresse elle-m\u00eame (par exemple, 7660 Sharon Street)</li> <li><code>type</code>, qui est le type d'adresse (par exemple, r\u00e9sidentiel, commercial, etc.)</li> </ul>"},{"location":"cours2/packages/instructions/#table-drivers","title":"Table <code>drivers</code>","text":"<p>La table <code>drivers</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID du chauffeur</li> <li><code>name</code>, qui est le pr\u00e9nom du chauffeur</li> </ul>"},{"location":"cours2/packages/instructions/#table-packages","title":"Table <code>packages</code>","text":"<p>La table <code>packages</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID du colis</li> <li><code>contents</code>, qui contient le contenu du colis</li> <li><code>from_address_id</code>, qui est l'ID de l'adresse d'o\u00f9 le colis a \u00e9t\u00e9 envoy\u00e9</li> <li><code>to_address_id</code>, qui est l'ID de l'adresse \u00e0 laquelle le colis a \u00e9t\u00e9 envoy\u00e9. Ce n'est pas n\u00e9cessairement l\u00e0 o\u00f9 il a fini !</li> </ul>"},{"location":"cours2/packages/instructions/#table-scans","title":"Table <code>scans</code>","text":"<p>La table <code>scans</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID du scan</li> <li><code>driver_id</code>, qui est l'ID du chauffeur qui a cr\u00e9\u00e9 le scan</li> <li><code>package_id</code>, qui est l'ID du colis scann\u00e9</li> <li><code>address_id</code>, qui est l'ID de l'adresse o\u00f9 le colis a \u00e9t\u00e9 scann\u00e9</li> <li><code>action</code>, qui indique si le colis a \u00e9t\u00e9 pris en charge (\"Pick\") ou d\u00e9pos\u00e9 (\"Drop\")</li> <li><code>timestamp</code>, qui est le jour et l'heure auxquels le colis a \u00e9t\u00e9 scann\u00e9</li> </ul>"},{"location":"cours2/packages/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Pour ce probl\u00e8me, il est tout aussi important de trouver les colis que le processus que vous utilisez pour le faire. Dans <code>log.sql</code>, gardez une trace de toutes les requ\u00eates SQL que vous ex\u00e9cutez sur la base de donn\u00e9es. Au-dessus de chaque requ\u00eate, \u00e9tiquetez-la avec un commentaire : en SQL, les commentaires sont toutes les lignes qui commencent par <code>--</code>, comme suit :</p> <pre><code>-- Ceci est un commentaire SQL\n</code></pre> <p>Le commentaire doit d\u00e9crire pourquoi vous ex\u00e9cutez la requ\u00eate et quelles informations vous esp\u00e9rez obtenir de cette requ\u00eate particuli\u00e8re. Vous pouvez \u00e9galement utiliser des commentaires pour ajouter des notes suppl\u00e9mentaires sur votre processus de r\u00e9flexion lorsque vous r\u00e9solvez chaque myst\u00e8re : en fin de compte, ce fichier doit servir de preuve du processus que vous avez utilis\u00e9 pour trouver chaque colis !</p> <p>Une fois que vous avez trouv\u00e9 l'emplacement d'un colis, compl\u00e9tez chacune des lignes dans <code>answers.txt</code> en remplissant les d\u00e9tails sur l'emplacement du colis, ainsi que son contenu. Assurez-vous de ne pas modifier le texte existant dans le fichier ou d'ajouter d'autres lignes au fichier !</p>"},{"location":"cours2/packages/instructions/#la-lettre-perdue","title":"La Lettre Perdue","text":"<p>Votre premier rapport de colis manquant provient d'Anneke. Anneke s'approche de votre comptoir et vous dit ce qui suit :</p> <p>Monsieur, je m'appelle Anneke. J'habite au 900 Somerville Avenue. Il n'y a pas longtemps, j'ai envoy\u00e9 une lettre sp\u00e9ciale. Elle est destin\u00e9e \u00e0 mon amie Varsha. Elle commence un nouveau chapitre de sa vie au 2 Finnegan Street, en centre-ville. (Cette adresse, laissez-moi vous dire : elle \u00e9tait un peu difficile \u00e0 obtenir correctement la premi\u00e8re fois.) La lettre est un mot de f\u00e9licitations\u2014une petite accolade en papier de moi \u00e0 elle, pour c\u00e9l\u00e9brer ce grand d\u00e9m\u00e9nagement. Pouvez-vous v\u00e9rifier si elle est arriv\u00e9e jusqu'\u00e0 elle ?</p> <p>Dans <code>log.sql</code>, sous <code>-- *** La Lettre Perdue ***</code>, gardez une trace des requ\u00eates SQL que vous utilisez pour trouver la lettre perdue d'Anneke. Une fois que vous l'avez trouv\u00e9e, d\u00e9crivez-la selon les questions dans <code>answers.txt</code>.</p>"},{"location":"cours2/packages/instructions/#la-livraison-malicieuse","title":"La Livraison Malicieuse","text":"<p>Votre deuxi\u00e8me rapport de colis manquant provient d'un individu myst\u00e9rieux d'une ville voisine. Il s'approche de votre comptoir et vous dit ce qui suit :</p> <p>Bonjour, M. le livreur. Vous vous souvenez peut-\u00eatre qu'il n'y a pas longtemps, je suis venu de la ville de Fiftyville. J'ai remis une certaine bo\u00eete entre vos mains et vous ai demand\u00e9 de rester discret. Mon associ\u00e9 attend ce colis depuis un moment maintenant. Et pourtant, il semble avoir disparu. Ha ! Y a-t-il une chance que vous puissiez \u00e9claircir ce myst\u00e8re ? D\u00e9sol\u00e9, il n'y a pas d'adresse \"De\".</p> <p>Dans <code>log.sql</code>, sous <code>-- *** La Livraison Malicieuse ***</code>, gardez une trace des requ\u00eates SQL que vous utilisez pour trouver le colis. Une fois que vous l'avez trouv\u00e9, d\u00e9crivez-le selon les questions dans <code>answers.txt</code>.</p>"},{"location":"cours2/packages/instructions/#le-cadeau-oublie","title":"Le Cadeau Oubli\u00e9","text":"<p>Votre troisi\u00e8me rapport de colis manquant provient d'un grand-parent qui habite pr\u00e8s du bureau de poste. Il s'approche de votre comptoir et vous dit ce qui suit :</p> <p>Oh, excusez-moi, Agent. J'avais envoy\u00e9 un cadeau myst\u00e8re, voyez-vous, \u00e0 ma merveilleuse petite-fille, au 728 Maple Place. C'\u00e9tait il y a environ deux semaines. Maintenant, la date de livraison est pass\u00e9e de sept jours entiers et j'apprends qu'elle attend toujours, les mains vides et le c\u0153ur rempli d'anticipation. Je suis un peu inquiet et je me demande o\u00f9 mon colis est pass\u00e9. Je ne me souviens pas pour la vie de moi ce qu'il y a \u00e0 l'int\u00e9rieur, mais je sais qu'il est rempli \u00e0 ras bord de mon amour pour elle. Pourrions-nous \u00e9ventuellement le retrouver pour qu'il puisse remplir sa journ\u00e9e de joie ? Je l'ai envoy\u00e9 de chez moi au 109 Tileston Street.</p> <p>Dans <code>log.sql</code>, sous <code>-- *** Le Cadeau Oubli\u00e9 ***</code>, gardez une trace des requ\u00eates SQL que vous utilisez pour trouver le cadeau. Une fois que vous l'avez trouv\u00e9, d\u00e9crivez-le selon les questions dans <code>answers.txt</code>.</p>"},{"location":"cours3/","title":"Introduction","text":""},{"location":"cours3/#cours-3","title":"Cours 3","text":""},{"location":"cours3/#introduction","title":"Introduction","text":"<ul> <li>Nous allons apprendre \u00e0 concevoir nos propres sch\u00e9mas de base de donn\u00e9es.</li> <li>Jusqu'\u00e0 pr\u00e9sent, nous avons principalement travaill\u00e9 avec une base de donn\u00e9es d\u00e9j\u00e0 cr\u00e9e. Maintenant, nous allons examiner ce qui se passe sous le capot et voir quelles commandes peuvent \u00eatre utilis\u00e9es pour cr\u00e9er une telle base de donn\u00e9es.</li> <li>Commen\u00e7ons par ouvrir la base de donn\u00e9es <code>longlist.db</code> de la Semaine 0 sur notre terminal. Pour rappel, cette base de donn\u00e9es contenait une seule table, appel\u00e9e <code>longlist</code>. Pour voir un aper\u00e7u de la table, nous pouvons ex\u00e9cuter :</li> </ul> <pre><code>SELECT \"author\", \"title\"\nFROM \"longlist\"\nLIMIT 5;\n</code></pre> <p>Cela nous donne les auteurs et titres des 5 premi\u00e8res lignes de la table <code>longlist</code>. - Voici une commande SQLite (pas un mot-cl\u00e9 SQL) qui peut \u00e9clairer comment cette base de donn\u00e9es a \u00e9t\u00e9 cr\u00e9\u00e9e :</p> <pre><code>.schema\n</code></pre> <p>En ex\u00e9cutant cette commande, nous voyons l'instruction SQL utilis\u00e9e pour cr\u00e9er la table <code>longlist</code>. Cela nous montre les colonnes \u00e0 l'int\u00e9rieur de <code>longlist</code> et les types de donn\u00e9es que chaque colonne est capable de stocker. - Ensuite, ouvrons la m\u00eame base de donn\u00e9es de la Semaine 1 sur notre terminal. Cette version de <code>longlist.db</code> contenait diff\u00e9rentes tables li\u00e9es entre elles. - En ex\u00e9cutant \u00e0 nouveau <code>.schema</code>, nous voyons plusieurs commandes \u2014 une pour chaque table de la base de donn\u00e9es. Il existe un moyen de voir le sch\u00e9ma pour une table sp\u00e9cifi\u00e9e :</p> <pre><code>.schema books\n</code></pre> <p>Maintenant, nous voyons l'instruction utilis\u00e9e pour cr\u00e9er la table <code>books</code>. Nous pouvons \u00e9galement voir les colonnes et les types de donn\u00e9es pour chaque colonne. Par exemple, la colonne <code>\"title\"</code> prend du texte et la colonne <code>\"publisher_id\"</code> est un entier.</p>"},{"location":"cours3/#creation-dun-schema-de-base-de-donnees","title":"Cr\u00e9ation d'un Sch\u00e9ma de Base de Donn\u00e9es","text":"<ul> <li>Maintenant que nous avons vu le sch\u00e9ma d'une base de donn\u00e9es existante, cr\u00e9ons le n\u00f4tre ! Nous devons repr\u00e9senter le syst\u00e8me de m\u00e9tro de la ville de Boston \u00e0 travers un sch\u00e9ma de base de donn\u00e9es. Cela inclut les stations de m\u00e9tro, les diff\u00e9rentes lignes de train, et les personnes qui prennent les trains.</li> </ul> <ul> <li>Pour d\u00e9composer la question, nous devons d\u00e9cider :</li> <li>quels types de tables nous aurons dans notre base de donn\u00e9es du m\u00e9tro de Boston,</li> <li>quelles colonnes chacune des tables aura, et</li> <li>quels types de donn\u00e9es nous devons mettre dans chacune de ces colonnes.</li> </ul>"},{"location":"cours3/#normalisation","title":"Normalisation","text":"<ul> <li>Observons cette premi\u00e8re tentative de cr\u00e9ation d'une table pour repr\u00e9senter les donn\u00e9es du m\u00e9tro de Boston. Cette table contient les noms des usagers du m\u00e9tro, les stations actuelles o\u00f9 se trouvent les usagers et l'action effectu\u00e9e \u00e0 la station (comme entrer et sortir). Elle enregistre \u00e9galement les tarifs pay\u00e9s et les soldes sur leurs cartes de m\u00e9tro. Cette table contient \u00e9galement un ID pour chaque \"transaction\" d'usager, qui sert de cl\u00e9 primaire.</li> </ul> <ul> <li>Quelles redondances existent dans cette table ?</li> <li>Nous pourrions s\u00e9parer les noms des usagers dans une table \u00e0 part, pour \u00e9viter de dupliquer les noms autant de fois. Nous devrions donner \u00e0 chaque usager un ID qui peut \u00eatre utilis\u00e9 pour relier la nouvelle table \u00e0 celle-ci.</li> <li>De m\u00eame, nous pourrions d\u00e9placer les stations de m\u00e9tro dans une table diff\u00e9rente et donner \u00e0 chaque station de m\u00e9tro un ID \u00e0 utiliser comme cl\u00e9 \u00e9trang\u00e8re ici.</li> <li>Le processus de s\u00e9paration de nos donn\u00e9es de cette mani\u00e8re s'appelle la normalisation. Lors de la normalisation, nous mettons chaque entit\u00e9 dans sa propre table \u2014 comme nous l'avons fait avec les usagers et les stations de m\u00e9tro. Toute information sur une entit\u00e9 sp\u00e9cifique, par exemple l'adresse d'un usager, va dans la table de l'entit\u00e9 elle-m\u00eame.</li> </ul>"},{"location":"cours3/#relation","title":"Relation","text":"<ul> <li>Nous devons maintenant d\u00e9cider comment nos entit\u00e9s (usagers et stations) sont li\u00e9es. Un usager visitera probablement plusieurs stations, et une station de m\u00e9tro aura probablement plus d'un usager. \u00c9tant donn\u00e9 cela, ce sera une relation plusieurs-\u00e0-plusieurs.</li> <li>Nous pouvons \u00e9galement utiliser un diagramme ER (Entity-Relationship) pour repr\u00e9senter cette relation.</li> </ul> <p>Ici, nous voyons que chaque usager doit visiter au moins une station pour \u00eatre consid\u00e9r\u00e9 comme un usager. Une station, cependant, pourrait n'avoir aucun usager la visitant, car elle pourrait \u00eatre temporairement hors service. Cependant, il est probable qu'une station ait plusieurs usagers la visitant, indiqu\u00e9 par la patte-d'oie dans le diagramme ER.</p>"},{"location":"cours3/#questions","title":"Questions","text":"<p>La relation entre les usagers et les stations doit-elle \u00eatre exactement comme d\u00e9crite ici ? Par exemple, pourquoi est-il acceptable qu'une station n'ait aucun usager ?</p> <ul> <li>C'est \u00e0 la personne qui con\u00e7oit la base de donn\u00e9es de prendre des d\u00e9cisions sur les relations entre les entit\u00e9s. Il est possible d'ajouter une contrainte qui dit qu'une station doit avoir au moins un usager pour \u00eatre consid\u00e9r\u00e9e comme une station.</li> </ul>"},{"location":"cours3/#create-table","title":"<code>CREATE TABLE</code>","text":"<ul> <li>Maintenant que nous avons le sch\u00e9ma pour deux des tables, allons-y et cr\u00e9ons les tables.</li> <li>Ouvrons une nouvelle base de donn\u00e9es appel\u00e9e <code>mbta.db</code> \u2014 MBTA signifie Massachusetts Bay Transportation Authority et g\u00e8re le m\u00e9tro de Boston.</li> <li>Si nous ex\u00e9cutons <code>.schema</code>, nous ne verrons rien car aucune table n'a encore \u00e9t\u00e9 cr\u00e9\u00e9e dans cette base de donn\u00e9es.</li> <li>Dans cette base de donn\u00e9es, ex\u00e9cutons la commande suivante pour cr\u00e9er la premi\u00e8re table pour les usagers :</li> </ul> <pre><code>CREATE TABLE riders (\n    \"id\",\n    \"name\"\n);\n</code></pre> <p>En ex\u00e9cutant cela, aucun r\u00e9sultat n'appara\u00eet sur le terminal. Mais si nous ex\u00e9cutons \u00e0 nouveau <code>.schema</code>, nous verrons maintenant le sch\u00e9ma pour la table <code>riders</code>, tel que nous l'avons d\u00e9fini ! - De m\u00eame, cr\u00e9ons une table pour les stations \u00e9galement.</p> <pre><code>CREATE TABLE stations (\n    \"id\",\n    \"name\",\n    \"line\"\n);\n</code></pre> <p>Ici, nous ajoutons une colonne <code>\"line\"</code> pour stocker la ligne de train \u00e0 laquelle appartient la station. - <code>.schema</code> nous montre maintenant le sch\u00e9ma pour <code>riders</code> et <code>stations</code>. - Ensuite, nous allons cr\u00e9er une table pour relier ces deux entit\u00e9s. Ces tables sont souvent appel\u00e9es tables de jonction, entit\u00e9s associatives ou tables de jointure !</p> <pre><code>CREATE TABLE visits (\n    \"rider_id\",\n    \"station_id\"\n);\n</code></pre> <p>Chaque ligne de cette table nous indique la station visit\u00e9e par un usager particulier.</p>"},{"location":"cours3/#questions_1","title":"Questions","text":"<p>Est-il n\u00e9cessaire d'indenter les lignes dans les parenth\u00e8ses <code>CREATE TABLE</code> ?</p> <ul> <li>Non, pas strictement. Cependant, nous indentons les noms des colonnes pour adh\u00e9rer aux conventions de style comme toujours !</li> </ul>"},{"location":"cours3/#types-de-donnees-et-classes-de-stockage","title":"Types de Donn\u00e9es et Classes de Stockage","text":"<ul> <li>SQLite a cinq classes de stockage :</li> <li><code>Null</code> : rien, ou valeur vide</li> <li><code>Integer</code> : nombres sans points d\u00e9cimaux</li> <li><code>Real</code> : nombres d\u00e9cimaux ou \u00e0 virgule flottante</li> <li><code>Text</code> : caract\u00e8res ou cha\u00eenes de caract\u00e8res</li> <li><code>Blob</code> : Binary Large Object, pour stocker des objets en binaire (utile pour les images, l'audio, etc.)</li> <li>Une classe de stockage peut contenir plusieurs types de donn\u00e9es.</li> <li>Par exemple, voici les types de donn\u00e9es qui rel\u00e8vent de la classe de stockage Integer.</li> </ul> <p>SQLite prend soin de stocker la valeur d'entr\u00e9e sous le bon type de donn\u00e9es. En d'autres termes, nous, en tant que programmeurs, n'avons besoin que de choisir une classe de stockage et SQLite fera le reste ! - Consid\u00e9rons cette question : quelle classe de stockage utiliserions-nous pour stocker les tarifs ? Chaque choix a ses avantages et ses limitations.   - Integers : Nous pouvons stocker un tarif de 10 centimes comme le nombre 10, mais cela ne rend pas tr\u00e8s clair si le tarif est de 10 centimes ou de 10 dollars.   - Text : Nous pouvons stocker le tarif en texte, comme \"$0.10\". Cependant, il sera alors difficile d'effectuer des op\u00e9rations math\u00e9matiques comme additionner les tarifs d'un usager.   - Real : Nous pouvons stocker le tarif en utilisant un nombre \u00e0 virgule flottante, comme 0.10, mais il n'est pas possible de stocker des nombres \u00e0 virgule flottante en binaire de mani\u00e8re pr\u00e9cise et \u2014 selon le niveau de pr\u00e9cision dont nous avons besoin \u2014 cela pourrait entra\u00eener des erreurs de calcul plus tard.</p>"},{"location":"cours3/#affinites-de-type","title":"Affinit\u00e9s de Type","text":"<ul> <li>Il est possible de sp\u00e9cifier le type de donn\u00e9es d'une colonne lors de la cr\u00e9ation d'une table.</li> <li>Cependant, les colonnes dans SQLite ne stockent pas toujours un type de donn\u00e9es particulier. Elles sont dites avoir des affinit\u00e9s de type, ce qui signifie qu'elles essaient de convertir une valeur d'entr\u00e9e dans le type pour lequel elles ont une affinit\u00e9.</li> <li>Les cinq affinit\u00e9s de type dans SQLite sont : Text, Numeric (soit des valeurs enti\u00e8res soit r\u00e9elles selon ce que la valeur d'entr\u00e9e convertit le mieux), Integer, Real et Blob.</li> <li>Consid\u00e9rons une colonne avec une affinit\u00e9 de type pour les Integers. Si nous essayons d'ins\u00e9rer \"25\" (le nombre 25 mais stock\u00e9 comme texte) dans cette colonne, il sera converti en un type de donn\u00e9es entier.</li> <li>De m\u00eame, ins\u00e9rer un entier 25 dans une colonne avec une affinit\u00e9 de type pour le texte convertira le nombre en son \u00e9quivalent texte, \"25\".</li> </ul>"},{"location":"cours3/#ajout-de-types-a-nos-tables","title":"Ajout de Types \u00e0 nos Tables","text":"<ul> <li>Pour recr\u00e9er les tables dans notre base de donn\u00e9es, nous devrons d'abord supprimer (ou supprimer) les tables existantes.</li> <li>Essayons les commandes suivantes :</li> </ul> <pre><code>DROP TABLE \"riders\";\n</code></pre> <pre><code>DROP TABLE \"stations\";\n</code></pre> <pre><code>DROP TABLE \"visits\";\n</code></pre> <p>L'ex\u00e9cution de ces instructions ne donne aucun r\u00e9sultat, mais <code>.schema</code> nous montre que les tables ont maintenant \u00e9t\u00e9 supprim\u00e9es. - Ensuite, cr\u00e9ons un fichier de sch\u00e9ma qui peut \u00eatre ex\u00e9cut\u00e9 pour cr\u00e9er les tables \u00e0 partir de z\u00e9ro. C'est une am\u00e9lioration par rapport \u00e0 ce que nous avons fait pr\u00e9c\u00e9demment \u2014 taper la commande <code>CREATE TABLE</code> pour chaque table \u2014 car cela nous permet de modifier et de voir tout le sch\u00e9ma facilement. - Cr\u00e9ons un fichier <code>schema.sql</code>. Remarquez l'extension <code>.sql</code> qui permet la coloration syntaxique pour les mots-cl\u00e9s SQL dans notre \u00e9diteur. - \u00c0 l'int\u00e9rieur du fichier, tapons \u00e0 nouveau les sch\u00e9mas, mais avec les types d'affinit\u00e9 cette fois.</p> <pre><code>CREATE TABLE riders (\n    \"id\" INTEGER,\n    \"name\" TEXT\n);\n\nCREATE TABLE stations (\n    \"id\" INTEGER,\n    \"name\" TEXT,\n    \"line\" TEXT\n);\n\nCREATE TABLE visits (\n    \"rider_id\" INTEGER,\n    \"station_id\" INTEGER\n);\n</code></pre> <ul> <li>Maintenant, lisons ce fichier dans la base de donn\u00e9es pour cr\u00e9er r\u00e9ellement les tables. Voici un diagramme ER mis \u00e0 jour avec les types de donn\u00e9es inclus.</li> </ul> <p></p>"},{"location":"cours3/#questions_2","title":"Questions","text":"<p>Auparavant, nous \u00e9tions capables d'interroger les tables de notre base de donn\u00e9es et de voir les r\u00e9sultats dans une structure de type tableau. Comment obtenir le m\u00eame type de r\u00e9sultats ici ?</p> <ul> <li>Nous n'avons pas encore ajout\u00e9 de donn\u00e9es aux tables. Dans le Cours 4, nous verrons comment ins\u00e9rer, mettre \u00e0 jour et supprimer des lignes dans les tables que nous avons cr\u00e9\u00e9es !</li> </ul> <p>Avons-nous une affinit\u00e9 de type pour Boolean ?</p> <ul> <li>Nous n'en avons pas dans SQLite, mais d'autres SGBD pourraient avoir cette option. Une solution de contournement pourrait \u00eatre d'utiliser des valeurs enti\u00e8res 0 ou 1 pour repr\u00e9senter des bool\u00e9ens. Nous verrons MySQL qui a une option Boolean \u00e0 la fin du cours.</li> </ul>"},{"location":"cours3/#contraintes-de-table","title":"Contraintes de Table","text":"<ul> <li>Nous pouvons utiliser des contraintes de table pour imposer des restrictions sur certaines valeurs dans nos tables.</li> <li>Par exemple, une colonne de cl\u00e9 primaire doit avoir des valeurs uniques. La contrainte de table que nous utilisons pour cela est <code>PRIMARY KEY</code>.</li> <li>De m\u00eame, une contrainte sur une valeur de cl\u00e9 \u00e9trang\u00e8re est qu'elle doit \u00eatre trouv\u00e9e dans la colonne de cl\u00e9 primaire de la table li\u00e9e ! Cette contrainte de table s'appelle, de mani\u00e8re pr\u00e9visible, <code>FOREIGN KEY</code>.</li> <li>Ajoutons des contraintes de cl\u00e9 primaire et \u00e9trang\u00e8re \u00e0 notre fichier <code>schema.sql</code>.</li> </ul> <pre><code>CREATE TABLE riders (\n    \"id\" INTEGER,\n    \"name\" TEXT,\n    PRIMARY KEY(\"id\")\n);\n\nCREATE TABLE stations (\n    \"id\" INTEGER,\n    \"name\" TEXT,\n    \"line\" TEXT,\n    PRIMARY KEY(\"id\")\n);\n\nCREATE TABLE visits (\n    \"rider_id\" INTEGER,\n    \"station_id\" INTEGER,\n    FOREIGN KEY(\"rider_id\") REFERENCES \"riders\"(\"id\"),\n    FOREIGN KEY(\"station_id\") REFERENCES \"stations\"(\"id\")\n);\n</code></pre> <p>Remarquez que nous avons cr\u00e9\u00e9 deux colonnes de cl\u00e9 primaire, l'ID pour <code>riders</code> et <code>stations</code>, puis nous les avons r\u00e9f\u00e9renc\u00e9es comme cl\u00e9s \u00e9trang\u00e8res dans la table <code>visits</code>. - Dans la table <code>visits</code>, il n'y a pas de cl\u00e9 primaire. Cependant, SQLite donne \u00e0 chaque table une cl\u00e9 primaire par d\u00e9faut, connue sous le nom de row ID. M\u00eame si le row ID est implicite, il peut \u00eatre interrog\u00e9 ! - Il est \u00e9galement possible de cr\u00e9er une cl\u00e9 primaire compos\u00e9e de deux colonnes. Par exemple, si nous voulions donner \u00e0 <code>visits</code> une cl\u00e9 primaire compos\u00e9e \u00e0 la fois des IDs des usagers et des stations, nous pourrions utiliser cette syntaxe :</p> <pre><code>CREATE TABLE visits (\n    \"rider_id\" INTEGER,\n    \"station_id\" INTEGER,\n    PRIMARY KEY(\"rider_id\", \"station_id\")\n);\n</code></pre> <p>Dans ce cas, nous voudrions probablement permettre \u00e0 un usager de visiter une station plus d'une fois, donc nous ne poursuivrions pas cette approche.</p>"},{"location":"cours3/#questions_3","title":"Questions","text":"<p>Est-il possible d'inclure notre propre cl\u00e9 primaire pour la table <code>visits</code> ?</p> <ul> <li>Oui ! Si, pour une raison quelconque, une cl\u00e9 primaire explicite \u00e9tait requise pour la table <code>visits</code>, nous pourrions cr\u00e9er une colonne ID et en faire la cl\u00e9 primaire.</li> </ul>"},{"location":"cours3/#contraintes-de-colonne","title":"Contraintes de Colonne","text":"<ul> <li>Une contrainte de colonne est un type de contrainte qui s'applique \u00e0 une colonne sp\u00e9cifi\u00e9e dans la table.</li> <li>SQLite a quatre contraintes de colonne :</li> <li><code>CHECK</code> : permet de v\u00e9rifier une condition, comme toutes les valeurs de la colonne doivent \u00eatre sup\u00e9rieures \u00e0 0</li> <li><code>DEFAULT</code> : utilise une valeur par d\u00e9faut si aucune n'est fournie pour une ligne</li> <li><code>NOT NULL</code> : dicte qu'une valeur nulle ou vide ne peut pas \u00eatre ins\u00e9r\u00e9e dans la colonne</li> <li><code>UNIQUE</code> : dicte que chaque valeur dans cette colonne doit \u00eatre unique</li> <li>Un sch\u00e9ma mis \u00e0 jour avec ces contraintes ressemblerait \u00e0 ce qui suit :</li> </ul> <pre><code>CREATE TABLE riders (\n    \"id\" INTEGER,\n    \"name\" TEXT,\n    PRIMARY KEY(\"id\"),\n    CHECK (LENGTH(\"name\") &gt;= 3) -- Check pour forcer une taille de nom d'au moins 3 charact\u00e8res\n);\n\nCREATE TABLE stations (\n    \"id\" INTEGER,\n    \"name\" TEXT NOT NULL UNIQUE,\n    \"line\" TEXT NOT NULL,\n    PRIMARY KEY(\"id\")\n);\n\nCREATE TABLE visits (\n    \"rider_id\" INTEGER,\n    \"station_id\" INTEGER,\n    FOREIGN KEY(\"rider_id\") REFERENCES \"riders\"(\"id\"),\n    FOREIGN KEY(\"station_id\") REFERENCES \"stations\"(\"id\")\n);\n</code></pre> <p>La contrainte <code>NOT NULL</code> garantit qu'un nom de station et une ligne sont sp\u00e9cifi\u00e9s. D'un autre c\u00f4t\u00e9, les usagers ne sont pas oblig\u00e9s de partager leurs noms, car il n'y a pas de contrainte appliqu\u00e9e aux noms des usagers. De m\u00eame, chaque station doit avoir un nom unique, comme dict\u00e9 par la contrainte <code>UNIQUE</code>. - Les colonnes de cl\u00e9 primaire et par extension, les colonnes de cl\u00e9 \u00e9trang\u00e8re doivent toujours avoir des valeurs uniques, donc il n'y a pas besoin de sp\u00e9cifier explicitement les contraintes de colonne <code>NOT NULL</code> ou <code>UNIQUE</code>. La contrainte de table <code>PRIMARY KEY</code> inclut ces contraintes de colonne.</p>"},{"location":"cours3/#modification-des-tables","title":"Modification des Tables","text":"<ul> <li>Consid\u00e9rons le diagramme ER mis \u00e0 jour suivant, o\u00f9 l'entit\u00e9 \"Rider\" a \u00e9t\u00e9 remplac\u00e9e par une nouvelle entit\u00e9 \"Card\" utilis\u00e9e pour repr\u00e9senter les CharlieCards. Les CharlieCards, dans le m\u00e9tro de Boston, peuvent \u00eatre charg\u00e9es avec de l'argent et sont utilis\u00e9es pour passer dans et parfois hors des stations.</li> </ul> <ul> <li>Remarquez qu'une carte peut \u00eatre pass\u00e9e plusieurs fois au total, mais seulement \u00e0 une station \u00e0 la fois.</li> <li>L'entit\u00e9 \"Card\" a un ID, qui est \u00e9galement sa cl\u00e9 primaire.</li> <li>Il y a maintenant aussi une entit\u00e9 \"Swipe\", avec son propre ID et un type. \"Swipe\" enregistre \u00e9galement l'heure \u00e0 laquelle une carte a \u00e9t\u00e9 pass\u00e9e et le montant qui a \u00e9t\u00e9 soustrait (\u00e9quivalent au montant d'argent n\u00e9cessaire pour prendre le m\u00e9tro) !</li> <li>Maintenant, pour impl\u00e9menter ces changements dans notre base de donn\u00e9es, nous devons d'abord supprimer la table <code>riders</code>.</li> </ul> <pre><code>DROP TABLE \"riders\";\n</code></pre> <ul> <li>En ex\u00e9cutant <code>.schema</code>, nous voyons le sch\u00e9ma mis \u00e0 jour sans la table <code>riders</code>.</li> <li>Ensuite, nous avons besoin d'une table <code>swipes</code> pour repr\u00e9senter l'entit\u00e9 \"Swipe\" de notre diagramme ER mis \u00e0 jour. Nous pourrions modifier la table <code>visits</code> de la mani\u00e8re suivante :</li> </ul> <pre><code>ALTER TABLE \"visits\"\nRENAME TO \"swipes\";\n</code></pre> <ul> <li>En ex\u00e9cutant <code>.schema</code>, nous pouvons voir que la table <code>visits</code> a \u00e9t\u00e9 renomm\u00e9e en <code>swipes</code>. Cependant, ce n'est pas le seul changement n\u00e9cessaire. Nous devons \u00e9galement ajouter quelques colonnes, comme le type de passage.</li> </ul> <pre><code>ALTER TABLE \"swipes\"\nADD COLUMN \"swipetype\" TEXT;\n</code></pre> <p>Remarquez que l'affinit\u00e9 de type <code>TEXT</code> est \u00e9galement mentionn\u00e9e lors de l'ajout de cette colonne. - Nous avons \u00e9galement la possibilit\u00e9 de renommer une colonne dans une commande <code>ALTER TABLE</code>. Si nous voulions renommer la colonne <code>\"swipetype\"</code> pour la rendre moins verbeuse, nous pourrions essayer ce qui suit :</p> <pre><code>ALTER TABLE \"swipes\"\nRENAME COLUMN \"swipetype\" TO \"type\";\n</code></pre> <ul> <li>Enfin, nous avons la possibilit\u00e9 de supprimer (ou retirer) une colonne.</li> </ul> <pre><code>ALTER TABLE \"swipes\"\nDROP COLUMN \"type\";\n</code></pre> <p>En ex\u00e9cutant \u00e0 nouveau <code>.schema</code>, nous pouvons confirmer que la colonne <code>\"type\"</code> a \u00e9t\u00e9 supprim\u00e9e de la table. - Il est \u00e9galement possible de revenir au fichier de sch\u00e9ma <code>schema.sql</code> que nous avions \u00e0 l'origine et simplement faire ces changements l\u00e0-bas au lieu de modifier les tables. Voici un <code>schema.sql</code> mis \u00e0 jour.</p> <pre><code>CREATE TABLE \"cards\" (\n    \"id\" INTEGER,\n    PRIMARY KEY(\"id\")\n);\n\nCREATE TABLE \"stations\" (\n    \"id\" INTEGER,\n    \"name\" TEXT NOT NULL UNIQUE,\n    \"line\" TEXT NOT NULL,\n    PRIMARY KEY(\"id\")\n);\n\nCREATE TABLE \"swipes\" (\n    \"id\" INTEGER,\n    \"card_id\" INTEGER,\n    \"station_id\" INTEGER,\n    \"type\" TEXT NOT NULL CHECK(\"type\" IN ('enter', 'exit', 'deposit')),\n    \"datetime\" NUMERIC NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    \"amount\" NUMERIC NOT NULL CHECK(\"amount\" != 0),\n    PRIMARY KEY(\"id\"),\n    FOREIGN KEY(\"station_id\") REFERENCES \"stations\"(\"id\"),\n    FOREIGN KEY(\"card_id\") REFERENCES \"cards\"(\"id\")\n);\n</code></pre> <ul> <li>Prenons quelques minutes pour lire le sch\u00e9ma mis \u00e0 jour et noter les choses qui semblent avoir chang\u00e9 !</li> <li>Les tables <code>cards</code> et <code>swipes</code> sont ajout\u00e9es et la contrainte de colonne <code>NOT NULL</code> est utilis\u00e9e pour exiger certaines valeurs dans <code>swipes</code>.</li> <li>La colonne <code>\"datetime\"</code> a l'affinit\u00e9 de type numeric \u2014 c'est parce que les types num\u00e9riques peuvent stocker et afficher des valeurs de date.</li> <li>La correspondance de cl\u00e9 \u00e9trang\u00e8re est ajust\u00e9e comme n\u00e9cessaire, de sorte que <code>\"card_id\"</code> est une cl\u00e9 \u00e9trang\u00e8re faisant r\u00e9f\u00e9rence \u00e0 l'ID de la table <code>cards</code>.</li> <li>Une valeur par d\u00e9faut est assign\u00e9e \u00e0 la colonne <code>\"datetime\"</code> afin qu'elle prenne automatiquement l'horodatage actuel si aucun n'est fourni. Remarquez l'utilisation de <code>CURRENT_TIMESTAMP</code> \u2014 il retourne l'ann\u00e9e, le mois, le jour, l'heure, la minute et la seconde combin\u00e9s en une seule valeur.</li> <li>Il y a une v\u00e9rification en place pour s'assurer que le montant sur un passage n'est pas 0. Cela est impl\u00e9ment\u00e9 par la contrainte de colonne <code>CHECK</code>, qui est utilis\u00e9e avec une expression <code>\"amount\" != 0</code> pour s'assurer que la valeur n'est pas 0.</li> <li>De m\u00eame, il y a une v\u00e9rification sur <code>\"type\"</code> pour s'assurer que sa valeur est l'une de 'enter', 'exit' et 'deposit'. Cela est fait parce que lorsqu'une CharlieCard est pass\u00e9e, c'est g\u00e9n\u00e9ralement pour l'une de ces trois raisons, donc il est logique que <code>\"type\"</code> prenne ces valeurs uniquement. Remarquez l'utilisation du mot-cl\u00e9 <code>IN</code> pour effectuer cette v\u00e9rification ! Y a-t-il un moyen d'impl\u00e9menter cette v\u00e9rification en utilisant l'op\u00e9rateur <code>OR</code> \u00e0 la place ?</li> </ul>"},{"location":"cours3/#questions_4","title":"Questions","text":"<p>En essayant de supprimer la table <code>riders</code>, une erreur appara\u00eet parce que nous utilisons l'ID de <code>riders</code> comme cl\u00e9 \u00e9trang\u00e8re. Comment la table peut-elle \u00eatre supprim\u00e9e dans ce cas ?</p> <ul> <li>Les contraintes de cl\u00e9 \u00e9trang\u00e8re au sein de la base de donn\u00e9es sont v\u00e9rifi\u00e9es lors de la suppression d'une table. Avant de supprimer <code>riders</code>, nous devrions d'abord supprimer la colonne de cl\u00e9 \u00e9trang\u00e8re <code>\"rider_id\"</code>.</li> </ul> <p>Comment la syntaxe est-elle diff\u00e9rente pour un autre SGBD comme MySQL ou PostgreSQL ?</p> <ul> <li>La plupart de la syntaxe SQLite s'applique d\u00e9finitivement aussi \u00e0 d'autres syst\u00e8mes de gestion de bases de donn\u00e9es. Cependant, si nous essayions de porter notre code SQLite, quelques modifications mineures seraient n\u00e9cessaires.</li> </ul> <p>Si nous ne sp\u00e9cifions pas d'affinit\u00e9 de type pour une colonne dans SQLite, que se passe-t-il ?</p> <ul> <li>L'affinit\u00e9 de type par d\u00e9faut est num\u00e9rique, donc la colonne se verrait assigner l'affinit\u00e9 de type num\u00e9rique.</li> </ul>"},{"location":"cours3/atl/instructions/","title":"ATL","text":""},{"location":"cours3/atl/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>L'a\u00e9roport international Hartsfield-Jackson, plus connu sous le nom de \"ATL\" pour son code IATA, est le plus fr\u00e9quent\u00e9 au monde depuis 1998. Situ\u00e9 \u00e0 Atlanta, en G\u00e9orgie, aux \u00c9tats-Unis, ATL a desservi 93,7 millions de passagers en 2022. </p> <p>Imaginons que vous venez d'\u00eatre embauch\u00e9 pour aider ATL \u00e0 restructurer leur syst\u00e8me de base de donn\u00e9es. Dans un fichier nomm\u00e9 <code>schema.sql</code> dans un dossier appel\u00e9 <code>atl</code>, \u00e9crivez un ensemble d'instructions SQL pour concevoir une base de donn\u00e9es permettant \u00e0 Hartsfield-Jackson de suivre ses passagers et leurs vols.</p> <p>Tapez ce qui suit dans votre terminal :</p> <pre><code>mkdir atl # cr\u00e9e un dossier vide \n</code></pre> <p>Notez que le dossier <code>atl</code> sera cr\u00e9\u00e9 dans le \"working directory\" de votre terminal (c'est-\u00e0-dire le dossier sur lequel votre terminal est actuellement concentr\u00e9). Si votre working directory est d\u00e9j\u00e0 un dossier nomm\u00e9 <code>pset2</code>, par exemple, <code>atl</code> sera cr\u00e9\u00e9 \u00e0 l'int\u00e9rieur du dossier <code>pset2</code>. (Pas besoin de cr\u00e9er un tel dossier <code>pset2</code> !)</p> <p>Une fois que vous avez cr\u00e9\u00e9 le dossier <code>atl</code>, vous pouvez taper ce qui suit pour changer le working directory de votre terminal vers le dossier <code>atl</code> :</p> <pre><code>cd atl # se d\u00e9place dans le dossier atl\n</code></pre> <p>Ensuite, tapez </p> <pre><code>touch schema.sql\n</code></pre> <p>pour cr\u00e9er un fichier <code>schema.sql</code> vierge.</p> <p>Pour vous souvenir de <code>mkdir</code> \u00e0 l'avenir, rappelez-vous que <code>mkdir</code> signifie \"make directory\" !</p>"},{"location":"cours3/atl/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Votre t\u00e2che est de cr\u00e9er une base de donn\u00e9es SQLite pour ATL \u00e0 partir de z\u00e9ro, en \u00e9crivant un ensemble d'instructions <code>CREATE TABLE</code> dans un fichier <code>schema.sql</code>. Les d\u00e9tails de mise en \u0153uvre d\u00e9pendent de vous, bien que vous devriez au minimum vous assurer que votre base de donn\u00e9es r\u00e9pond aux exigences de l'a\u00e9roport et qu'elle peut repr\u00e9senter les donn\u00e9es d'\u00e9chantillon fournies.</p>"},{"location":"cours3/atl/instructions/#exigences","title":"Exigences","text":"<p>Pour comprendre les exigences d'ATL pour leur base de donn\u00e9es, vous vous \u00eates assis pour discuter avec l'Assistant General Manager for IT Operations.</p>"},{"location":"cours3/atl/instructions/#passagers","title":"Passagers","text":"<p>En ce qui concerne nos passagers, nous devons juste avoir les informations essentielles : le pr\u00e9nom, le nom de famille et l'\u00e2ge. C'est tout ce que nous devons savoir \u2014 rien de plus.</p>"},{"location":"cours3/atl/instructions/#enregistrements","title":"Enregistrements","text":"<p>Lorsque les passagers arrivent \u00e0 ATL, ils \"s'enregistrent\" souvent pour leurs vols. C'est leur fa\u00e7on de nous dire qu'ils sont l\u00e0 et pr\u00eats \u00e0 embarquer. Nous aimerions garder une trace de ces moments. Et de quoi avons-nous besoin pour cela, demandez-vous ? Eh bien, voici ce dont nous avons besoin :</p> <ul> <li>La date et l'heure exactes auxquelles notre passager s'est enregistr\u00e9</li> <li>Le vol pour lequel ils s'enregistrent, bien s\u00fbr. On ne peut pas perdre de vue o\u00f9 ils se dirigent, n'est-ce pas ?</li> </ul>"},{"location":"cours3/atl/instructions/#compagnies-aeriennes","title":"Compagnies A\u00e9riennes","text":"<p>ATL est un hub pour de nombreuses compagnies a\u00e9riennes nationales et internationales : des noms comme Delta, British Airways, Air France, Korean Air, et Turkish Airlines. La liste est longue. Voici ce que nous suivons :</p> <ul> <li>Le nom de la compagnie a\u00e9rienne</li> <li>La \"jet\u00e9e\" ou, devrais-je dire, la section de notre a\u00e9roport o\u00f9 la compagnie a\u00e9rienne op\u00e8re. Nous avons 7 jet\u00e9es : A, B, C, D, E, F, et T.</li> </ul>"},{"location":"cours3/atl/instructions/#vols","title":"Vols","text":"<p>Nous desservons jusqu'\u00e0 1 000 vols par jour. Pour nous assurer que nos passagers ne se posent jamais de questions, nous devons leur fournir tous les d\u00e9tails critiques sur leur vol. Voici ce que nous aimerions stocker :</p> <ul> <li>Le num\u00e9ro de vol. Par exemple, \"900\". Sachez juste que nous r\u00e9utilisons parfois les num\u00e9ros de vol.</li> <li>La compagnie a\u00e9rienne op\u00e9rant le vol. Vous pouvez garder cela simple et supposer qu'un vol est op\u00e9r\u00e9 par une seule compagnie a\u00e9rienne.</li> <li>Le code de l'a\u00e9roport de d\u00e9part. Par exemple, \"ATL\" ou \"BOS\".</li> <li>Le code de l'a\u00e9roport de destination</li> <li>La date et l'heure de d\u00e9part pr\u00e9vues (\u00e0 la minute pr\u00e8s, bien s\u00fbr !)</li> <li>La date et l'heure d'arriv\u00e9e pr\u00e9vues, avec la m\u00eame pr\u00e9cision</li> </ul>"},{"location":"cours3/atl/instructions/#donnees-dechantillon","title":"Donn\u00e9es d'\u00c9chantillon","text":"<p>Votre base de donn\u00e9es doit pouvoir repr\u00e9senter...</p> <ul> <li>Un passager, Amelia Earhart, \u00e2g\u00e9e de 39 ans</li> <li>Une compagnie a\u00e9rienne, Delta, qui op\u00e8re \u00e0 partir des jet\u00e9es A, B, C, D, et T</li> <li>Un vol, Delta Flight 300, qui est pr\u00e9vu de partir d'ATL le 3 ao\u00fbt 2023 \u00e0 18h46 et d'arriver \u00e0 BOS le 3 ao\u00fbt 2023 \u00e0 21h09</li> <li>Un enregistrement pour Amelia Earhart, pour le vol Delta 300, le 3 ao\u00fbt 2023 \u00e0 15h03</li> </ul>"},{"location":"cours3/atl/instructions/#utilisation","title":"Utilisation","text":"<p>Pour cr\u00e9er une base de donn\u00e9es \u00e0 partir de votre sch\u00e9ma, dans votre dossier <code>atl</code>, tapez</p> <pre><code>sqlite3 atl.db\n</code></pre> <p>Cela cr\u00e9era une base de donn\u00e9es SQLite vide appel\u00e9e <code>atl.db</code>.</p> <p>Ensuite, dans l'invite <code>sqlite3</code>, tapez</p> <pre><code>.read schema.sql\n</code></pre> <p>pour lire les instructions de <code>schema.sql</code>.</p> <p>Rappelez-vous que vous pouvez utiliser <code>DROP TABLE tablename</code>, o\u00f9 <code>tablename</code> est le nom de votre table, pour supprimer une table de votre base de donn\u00e9es.</p>"},{"location":"cours3/connect/instructions/","title":"Happy to connect","text":""},{"location":"cours3/connect/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>LinkedIn est \u00ab le plus grand r\u00e9seau professionnel au monde \u00bb avec pour mission de \u00ab connecter les professionnels du monde entier pour les rendre plus productifs et plus performants \u00bb. Peut-\u00eatre avez-vous un compte ? Sur la plateforme, les utilisateurs peuvent publier leur exp\u00e9rience professionnelle (c'est-\u00e0-dire, les emplois pr\u00e9c\u00e9dents, l'\u00e9ducation, etc.) et \u00e9tablir des connexions avec d'autres personnes qu'ils ont rencontr\u00e9es, en personne ou en ligne.</p> <p>Dans un fichier nomm\u00e9 <code>schema.sql</code> dans un dossier nomm\u00e9 <code>connect</code>, \u00e9crivez un ensemble d'instructions SQL pour concevoir une base de donn\u00e9es que LinkedIn pourrait utiliser.</p>"},{"location":"cours3/connect/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Votre t\u00e2che consiste \u00e0 cr\u00e9er une base de donn\u00e9es SQLite pour LinkedIn \u00e0 partir de z\u00e9ro, en \u00e9crivant un ensemble d'instructions <code>CREATE TABLE</code> dans un fichier <code>schema.sql</code>. Les d\u00e9tails de mise en \u0153uvre d\u00e9pendent de vous, bien que vous devriez au minimum vous assurer que votre base de donn\u00e9es r\u00e9pond aux sp\u00e9cifications de la plateforme et qu'elle peut repr\u00e9senter les donn\u00e9es d'exemple fournies.</p>"},{"location":"cours3/connect/instructions/#plateforme","title":"Plateforme","text":""},{"location":"cours3/connect/instructions/#utilisateurs","title":"Utilisateurs","text":"<p>Le c\u0153ur de la plateforme LinkedIn est ses utilisateurs. Votre base de donn\u00e9es doit pouvoir repr\u00e9senter les informations suivantes sur les utilisateurs de LinkedIn :</p> <ul> <li>Leur pr\u00e9nom et nom de famille</li> <li>Leur nom d'utilisateur</li> <li>Leur mot de passe</li> </ul> <p>Gardez \u00e0 l'esprit que, si une entreprise suit les meilleures pratiques, les mots de passe des applications sont \u00ab hach\u00e9s \u00bb. Pas besoin de vous soucier du hachage des mots de passe ici, cependant.</p>"},{"location":"cours3/connect/instructions/#ecoles-et-universites","title":"\u00c9coles et Universit\u00e9s","text":"<p>LinkedIn permet \u00e9galement des comptes officiels pour les \u00e9coles ou universit\u00e9s, comme celui de Harvard, afin que les anciens \u00e9l\u00e8ves (c'est-\u00e0-dire, ceux qui y ont \u00e9tudi\u00e9) puissent identifier leur affiliation. Assurez-vous que la base de donn\u00e9es de LinkedIn peut stocker les informations suivantes sur chaque \u00e9cole :</p> <ul> <li>Le nom de l'\u00e9cole</li> <li>Le type d'\u00e9cole (par exemple, \u00ab \u00c9cole \u00c9l\u00e9mentaire \u00bb, \u00ab Coll\u00e8ge \u00bb, \u00ab Lyc\u00e9e \u00bb, \u00ab \u00c9cole Primaire \u00bb, \u00ab \u00c9cole Secondaire \u00bb, \u00ab Universit\u00e9 \u00bb, etc.)</li> <li>L'emplacement de l'\u00e9cole</li> <li>L'ann\u00e9e de fondation de l'\u00e9cole</li> </ul>"},{"location":"cours3/connect/instructions/#entreprises","title":"Entreprises","text":"<p>LinkedIn permet aux entreprises de cr\u00e9er leurs propres pages, comme celle de LinkedIn elle-m\u00eame, afin que les employ\u00e9s puissent identifier leur emploi pass\u00e9 ou actuel avec l'entreprise. Assurez-vous que la base de donn\u00e9es de LinkedIn peut stocker les informations suivantes pour chaque entreprise :</p> <ul> <li>Le nom de l'entreprise</li> <li>Le secteur d'activit\u00e9 de l'entreprise (par exemple, \u00ab \u00c9ducation \u00bb, \u00ab Technologie \u00bb, \u00ab Finance \u00bb, etc.)</li> <li>L'emplacement de l'entreprise</li> </ul>"},{"location":"cours3/connect/instructions/#connexions","title":"Connexions","text":"<p>Et enfin, l'essence de LinkedIn est sa capacit\u00e9 \u00e0 faciliter les connexions entre les personnes. Assurez-vous que la base de donn\u00e9es de LinkedIn peut supporter chacune des connexions suivantes.</p> <p>Connexions avec des Personnes</p> <p>La base de donn\u00e9es de LinkedIn doit pouvoir repr\u00e9senter des connexions mutuelles (r\u00e9ciproques, bidirectionnelles) entre les utilisateurs. Pas besoin de vous soucier des connexions unidirectionnelles, comme l'utilisateur A \u00ab suivant \u00bb l'utilisateur B sans que l'utilisateur B \u00ab suive \u00bb l'utilisateur A.</p> <p>Connexions avec des \u00c9coles</p> <p>Un utilisateur doit pouvoir cr\u00e9er une affiliation avec une \u00e9cole donn\u00e9e. Et de m\u00eame, cette \u00e9cole doit pouvoir trouver ses anciens \u00e9l\u00e8ves. De plus, permettez \u00e0 un utilisateur de d\u00e9finir :</p> <ul> <li>La date de d\u00e9but de son affiliation (c'est-\u00e0-dire, quand il a commenc\u00e9 \u00e0 fr\u00e9quenter l'\u00e9cole)</li> <li>La date de fin de son affiliation (c'est-\u00e0-dire, quand il a obtenu son dipl\u00f4me), le cas \u00e9ch\u00e9ant</li> <li>Le type de dipl\u00f4me obtenu/poursuivi (par exemple, \u00ab Licence \u00bb, \u00ab Master \u00bb, \u00ab Doctorat \u00bb, etc.)</li> </ul> <p>Connexions avec des Entreprises</p> <p>Un utilisateur doit pouvoir cr\u00e9er une affiliation avec une entreprise donn\u00e9e. Et de m\u00eame, cette entreprise doit pouvoir trouver ses employ\u00e9s actuels et pass\u00e9s. De plus, permettez \u00e0 un utilisateur de d\u00e9finir :</p> <ul> <li>La date de d\u00e9but de son affiliation (c'est-\u00e0-dire, la date \u00e0 laquelle il a commenc\u00e9 \u00e0 travailler avec l'entreprise)</li> <li>La date de fin de son affiliation (c'est-\u00e0-dire, quand il a quitt\u00e9 l'entreprise), le cas \u00e9ch\u00e9ant</li> <li>Le titre qu'il occupait pendant son affiliation avec l'entreprise</li> </ul>"},{"location":"cours3/connect/instructions/#donnees-dexemple","title":"Donn\u00e9es d'Exemple","text":"<p>Votre base de donn\u00e9es doit pouvoir repr\u00e9senter\u2026</p> <ul> <li>Un utilisateur, Alan Garber, dont le nom d'utilisateur est \u00ab alan \u00bb et le mot de passe est \u00ab password \u00bb.</li> <li>Un utilisateur, Reid Hoffman dont le nom d'utilisateur est \u00ab reid \u00bb et le mot de passe est \u00ab password \u00bb.</li> <li>Une \u00e9cole, Harvard University, qui est une universit\u00e9 situ\u00e9e \u00e0 Cambridge, Massachusetts, fond\u00e9e en 1636.</li> <li>Une entreprise, LinkedIn, qui est une entreprise technologique dont le si\u00e8ge est \u00e0 Sunnyvale, Californie.</li> <li>L'\u00e9ducation de premier cycle d'Alan Garber \u00e0 Harvard, poursuivant une Licence du 1er septembre 1973 au 1er juin 1976.</li> <li>L'emploi de Reid Hoffman chez LinkedIn en tant que PDG et Pr\u00e9sident, du 1er janvier 2003 au 1er f\u00e9vrier 2007.</li> </ul>"},{"location":"cours3/connect/instructions/#utilisation","title":"Utilisation","text":"<p>Pour cr\u00e9er une base de donn\u00e9es \u00e0 partir de votre sch\u00e9ma, dans votre dossier <code>connect</code>, tapez</p> <pre><code>sqlite3 connect.db\n</code></pre> <p>Cela cr\u00e9era une base de donn\u00e9es SQLite vide nomm\u00e9e <code>connect.db</code>.</p> <p>Ensuite, dans l'invite <code>sqlite3</code>, tapez</p> <pre><code>.read schema.sql\n</code></pre> <p>pour lire les instructions de <code>schema.sql</code>.</p> <p>Rappelez-vous que vous pouvez utiliser <code>DROP TABLE tablename</code>, o\u00f9 <code>tablename</code> est le nom de votre table, pour supprimer une table de votre base de donn\u00e9es.</p>"},{"location":"cours3/doghnut/instructions/","title":"Union Square Donuts","text":"<p>Le logo de Union Square Donuts</p>"},{"location":"cours3/doghnut/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Autour de Boston, Brookline et Somerville, vous pourriez apercevoir Union Square Donuts, une boutique c\u00e9l\u00e8bre dans la r\u00e9gion pour ses d\u00e9licieuses confiseries. Supposons que Union Square Donuts existe depuis un certain temps et, bien que leurs re\u00e7us papier aient bien fonctionn\u00e9 jusqu'\u00e0 pr\u00e9sent, ils esp\u00e8rent un syst\u00e8me pour les aider \u00e0 g\u00e9rer plus de clients. En fait, ils viennent de vous engager pour concevoir une base de donn\u00e9es adapt\u00e9e \u00e0 leur boutique. En \u00e9change, des donuts gratuits ? \ud83c\udf69</p> <p>Dans un fichier nomm\u00e9 <code>schema.sql</code> dans un dossier nomm\u00e9 <code>donuts</code>, \u00e9crivez un ensemble d'instructions SQL pour cr\u00e9er une base de donn\u00e9es que Union Square Donuts pourrait utiliser pour g\u00e9rer ses op\u00e9rations quotidiennes.</p>"},{"location":"cours3/doghnut/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Votre t\u00e2che consiste \u00e0 cr\u00e9er une base de donn\u00e9es SQLite pour Union Square Donuts \u00e0 partir de z\u00e9ro, en \u00e9crivant un ensemble d'instructions <code>CREATE TABLE</code> dans un fichier <code>schema.sql</code>. Les d\u00e9tails de mise en \u0153uvre d\u00e9pendent de vous, bien que vous devriez au minimum vous assurer que votre base de donn\u00e9es r\u00e9pond aux attentes de l'\u00e9quipe et qu'elle peut repr\u00e9senter les donn\u00e9es d'exemple.</p>"},{"location":"cours3/doghnut/instructions/#attentes","title":"Attentes","text":"<p>Pour comprendre les attentes de l'\u00e9quipe concernant leur base de donn\u00e9es, vous vous \u00eates assis pour discuter avec eux apr\u00e8s la fermeture de la boutique.</p>"},{"location":"cours3/doghnut/instructions/#ingredients-ingredients","title":"Ingredients (Ingr\u00e9dients)","text":"<p>Nous devons certainement suivre nos ingr\u00e9dients. Certains des ingr\u00e9dients typiques que nous utilisons incluent la farine, la levure, l'huile, le beurre et plusieurs types de sucre diff\u00e9rents. De plus, nous aimerions suivre le prix que nous payons par unit\u00e9 d'ingr\u00e9dient (qu'il s'agisse de livres, de grammes, etc.).</p>"},{"location":"cours3/doghnut/instructions/#donuts-beignets","title":"Donuts (Beignets)","text":"<p>Nous devons inclure notre s\u00e9lection de beignets, pass\u00e9e et pr\u00e9sente ! Pour chaque beignet au menu, nous aimerions inclure trois choses :</p> <ul> <li>Le nom du beignet</li> <li>Si le beignet est sans gluten (gluten-free)</li> <li>Le prix par beignet</li> </ul> <p>Oh, et il est important que nous puissions rechercher les ingr\u00e9dients de chacun des beignets !</p>"},{"location":"cours3/doghnut/instructions/#orders-commandes","title":"Orders (Commandes)","text":"<p>Nous aimons voir les clients en personne, bien que nous r\u00e9alisions qu'un bon nombre de personnes pourraient commander en ligne de nos jours. Nous aimerions pouvoir suivre ces commandes en ligne. Nous pensons que nous devrions stocker :</p> <ul> <li>Un num\u00e9ro de commande, pour suivre chaque commande en interne</li> <li>Tous les beignets de la commande</li> <li>Le client qui a pass\u00e9 la commande. Nous supposons qu'un seul client passe une commande donn\u00e9e.</li> </ul>"},{"location":"cours3/doghnut/instructions/#customers-clients","title":"Customers (Clients)","text":"<p>Oh, et nous r\u00e9alisons qu'il serait agr\u00e9able de suivre certaines informations sur chacun de nos clients. Nous aimerions nous souvenir de l'historique des commandes qu'ils ont pass\u00e9es. Dans ce cas, nous pensons que nous devrions stocker :</p> <ul> <li>Le pr\u00e9nom et le nom de famille d'un client</li> <li>Un historique de leurs commandes</li> </ul>"},{"location":"cours3/doghnut/instructions/#donnees-dexemple","title":"Donn\u00e9es d'Exemple","text":"<p>Votre base de donn\u00e9es doit pouvoir repr\u00e9senter\u2026</p> <ul> <li>Le cacao, pour lequel Union Square Donuts paie 5,00 $ la livre.</li> <li>Le sucre, pour lequel Union Square Donuts paie 2,00 $ la livre.</li> <li>Le beignet \"Belgian Dark Chocolate\" de Union Square Donuts, qui n'est pas sans gluten, co\u00fbte 4,00 $, et comprend les ingr\u00e9dients suivants :<ul> <li>Cacao</li> <li>Farine</li> <li>Babeurre</li> <li>Sucre</li> </ul> </li> <li>Le beignet \"Back-To-School Sprinkles\" de Union Square Donuts, qui n'est pas sans gluten, co\u00fbte 4,00 $, et comprend les ingr\u00e9dients suivants :<ul> <li>Farine</li> <li>Babeurre</li> <li>Sucre</li> <li>Vermicelles</li> </ul> </li> <li>Commande 1 de Luis Singh pour 3 beignets Belgian Dark Chocolate et 2 beignets Back-To-School Sprinkles.</li> </ul>"},{"location":"cours3/doghnut/instructions/#utilisation","title":"Utilisation","text":"<p>Pour cr\u00e9er une base de donn\u00e9es \u00e0 partir de votre sch\u00e9ma, dans votre dossier <code>donuts</code>, tapez</p> <pre><code>sqlite3 donuts.db\n</code></pre> <p>Cela cr\u00e9era une base de donn\u00e9es SQLite vide nomm\u00e9e <code>donuts.db</code>.</p> <p>Ensuite, dans l'invite <code>sqlite3</code>, tapez</p> <pre><code>.read schema.sql\n</code></pre> <p>pour lire les instructions de <code>schema.sql</code>.</p> <p>Rappelez-vous que vous pouvez utiliser <code>DROP TABLE tablename</code>, o\u00f9 <code>tablename</code> est le nom de votre table, pour supprimer une table de votre base de donn\u00e9es.</p>"},{"location":"cours4/","title":"Introduction","text":""},{"location":"cours4/#cours-4","title":"Cours 4","text":"<ul> <li>Introduction</li> <li>Sch\u00e9ma de la base de donn\u00e9es (Database Schema)</li> <li>Insertion de donn\u00e9es (Inserting Data)</li> <li>Autres contraintes (Other Constraints)</li> <li>Insertion de plusieurs lignes (Inserting Multiple Rows)</li> <li>Suppression de donn\u00e9es (Deleting Data)</li> <li>Mise \u00e0 jour de donn\u00e9es (Updating Data)</li> <li>Fin</li> </ul>"},{"location":"cours4/#introduction","title":"Introduction","text":"<ul> <li>Dans le cours pr\u00e9c\u00e9dent, nous avons appris \u00e0 cr\u00e9er notre propre sch\u00e9ma de base de donn\u00e9es. Dans ce cours, nous allons explorer comment ajouter, mettre \u00e0 jour et supprimer des donn\u00e9es dans nos bases de donn\u00e9es.</li> <li>Le Boston MFA (Museum of Fine Arts) est un mus\u00e9e centenaire \u00e0 Boston. Le MFA g\u00e8re une vaste collection d'artefacts et d'\u0153uvres d'art historiques et contemporains. Ils utilisent probablement une base de donn\u00e9es pour stocker des informations sur leur art et leurs artefacts.</li> <li>Lorsqu'un nouvel artefact est ajout\u00e9 \u00e0 leur collection, nous pouvons imaginer qu'ils ins\u00e8rent les donn\u00e9es correspondantes dans leur base de donn\u00e9es. De m\u00eame, il existe des cas d'utilisation o\u00f9 les donn\u00e9es peuvent n\u00e9cessiter d'\u00eatre lues, mises \u00e0 jour ou supprim\u00e9es.</li> <li>Nous allons maintenant nous concentrer sur la cr\u00e9ation (ou l'insertion) de donn\u00e9es dans une base de donn\u00e9es du Boston MFA.</li> </ul>"},{"location":"cours4/#schema-de-la-base-de-donnees-database-schema","title":"Sch\u00e9ma de la base de donn\u00e9es (Database Schema)","text":"<ul> <li>Consid\u00e9rons ce sch\u00e9ma que le MFA pourrait utiliser pour sa collection.</li> </ul> <ul> <li>Chaque ligne de donn\u00e9es contient le titre d'une \u0153uvre d'art ainsi que le <code>num\u00e9ro d'accession</code> (accession number), qui est un identifiant unique utilis\u00e9 en interne par le mus\u00e9e. Il y a \u00e9galement une date indiquant quand l'art a \u00e9t\u00e9 acquis.</li> <li>La table contient un ID qui sert de cl\u00e9 primaire (primary key).</li> <li>Nous pouvons imaginer que l'administrateur de la base de donn\u00e9es du MFA ex\u00e9cute une requ\u00eate SQL pour ins\u00e9rer chacune de ces \u0153uvres d'art dans la table.</li> <li> <p>Pour comprendre comment cela fonctionne, cr\u00e9ons d'abord une base de donn\u00e9es appel\u00e9e <code>mfa.db</code>. Ensuite, lisons le fichier de sch\u00e9ma <code>schema0.sql</code> dans la base de donn\u00e9es. Ce fichier de sch\u00e9ma, d\u00e9j\u00e0 fourni, nous aide \u00e0 cr\u00e9er la table <code>collections</code>.</p> </li> <li> <p><code>sqlite     .read schema0.sql</code></p> </li> <li> <p>Pour confirmer que la table a \u00e9t\u00e9 cr\u00e9\u00e9e, nous pouvons s\u00e9lectionner \u00e0 partir de la table. </p> </li> <li> <p>Cela devrait nous donner un r\u00e9sultat vide, car la table n'a pas encore de donn\u00e9es.</p> </li> </ul> <p><code>sql   SELECT * FROM \"collections\";</code></p> <ul> <li>Ou utiliser la commande suivante:</li> </ul> <p><code>sqlite   .schema</code></p> <p>Insertion de donn\u00e9es (Inserting Data)</p> <ul> <li>L'instruction SQL <code>INSERT INTO</code> est utilis\u00e9e pour ins\u00e9rer une ligne de donn\u00e9es dans une table donn\u00e9e.</li> </ul> <p><code>sql   INSERT INTO \"collections\" (\"id\", \"title\", \"accession_number\", \"acquired\")   VALUES (1, 'Profusion de fleurs', '56.257', '1956-04-12');</code></p> <p>Nous pouvons voir que cette commande n\u00e9cessite la liste des colonnes de la table qui recevront les nouvelles donn\u00e9es et les valeurs \u00e0 ajouter \u00e0 chaque colonne, dans le m\u00eame ordre. - L'ex\u00e9cution de la commande <code>INSERT INTO</code> ne retourne rien, mais nous pouvons ex\u00e9cuter une requ\u00eate pour confirmer que la ligne est maintenant pr\u00e9sente dans <code>collections</code>.</p> <p><code>sql   SELECT * FROM \"collections\";</code></p> <ul> <li>Nous pouvons ajouter plus de lignes \u00e0 la base de donn\u00e9es en ins\u00e9rant plusieurs fois. Cependant, saisir manuellement la valeur de la cl\u00e9 primaire (comme 1, 2, 3, etc.) peut entra\u00eener des erreurs. Heureusement, SQLite peut remplir automatiquement les valeurs de la cl\u00e9 primaire. Pour utiliser cette fonctionnalit\u00e9, nous omettons la colonne ID lors de l'insertion d'une ligne.</li> </ul> <p><code>sql   INSERT INTO \"collections\" (\"title\", \"accession_number\", \"acquired\")   VALUES ('Fermiers travaillant \u00e0 l'aube', '11.6152', '1911-08-03');</code></p> <p>Nous pouvons v\u00e9rifier que cette ligne a \u00e9t\u00e9 ins\u00e9r\u00e9e avec un <code>id</code> de 2 en ex\u00e9cutant</p> <p><code>sql   SELECT * FROM \"collections\";</code></p> <p>Remarquez que SQLite remplit les valeurs de la cl\u00e9 primaire en incr\u00e9mentant la cl\u00e9 primaire pr\u00e9c\u00e9dente, dans ce cas, 1.</p>"},{"location":"cours4/#autres-contraintes-other-constraints","title":"Autres contraintes (Other Constraints)","text":"<ul> <li>L'ouverture du fichier <code>schema.sql</code> affiche le sch\u00e9ma de la base de donn\u00e9es.</li> </ul> <p><code>sql   CREATE TABLE \"collections\" (       \"id\" INTEGER,       \"title\" TEXT NOT NULL,       \"accession_number\" TEXT NOT NULL UNIQUE,       \"acquired\" NUMERIC,       PRIMARY KEY(\"id\")   );</code></p> <ul> <li>Il est sp\u00e9cifi\u00e9 que le num\u00e9ro d'accession est unique. Si nous essayons d'ins\u00e9rer une ligne avec un num\u00e9ro d'accession r\u00e9p\u00e9t\u00e9, nous d\u00e9clencherons une erreur indiquant <code>UNIQUE constraint failed: collections.accession_number (19)</code>.</li> <li>Cette erreur nous informe que la ligne que nous essayons d'ins\u00e9rer viole une contrainte dans le sch\u00e9ma, sp\u00e9cifiquement la contrainte <code>UNIQUE</code> dans ce sc\u00e9nario.</li> <li>De m\u00eame, nous pouvons essayer d'ajouter une ligne avec un titre <code>NULL</code>, violant la contrainte <code>NOT NULL</code>.</li> </ul> <p><code>sql   INSERT INTO \"collections\" (\"title\", \"accession_number\", \"acquired\")   VALUES(NULL, NULL, '1900-01-10');</code></p> <p>En ex\u00e9cutant ceci, nous verrons \u00e0 nouveau une erreur indiquant <code>NOT NULL constraint failed: collections.title (19)</code>. - De cette mani\u00e8re, les contraintes de sch\u00e9ma sont des garde-fous qui nous prot\u00e8gent de l'ajout de lignes qui ne suivent pas le sch\u00e9ma de notre base de donn\u00e9es.</p>"},{"location":"cours4/#insertion-de-plusieurs-lignes-inserting-multiple-rows","title":"Insertion de plusieurs lignes (Inserting Multiple Rows)","text":"<ul> <li>Nous pourrions avoir besoin d'ins\u00e9rer plus d'une ligne \u00e0 la fois lors de l'\u00e9criture dans une base de donn\u00e9es. Une fa\u00e7on de le faire est de s\u00e9parer les lignes par des virgules dans la commande <code>INSERT INTO</code>.</li> </ul> <p>L'insertion de plusieurs lignes de cette mani\u00e8re offre une certaine commodit\u00e9 au programmeur. C'est \u00e9galement une m\u00e9thode plus rapide et plus efficace d'ins\u00e9rer des lignes dans une base de donn\u00e9es.</p> <ul> <li>Ins\u00e9rons maintenant deux nouvelles peintures dans la table <code>collections</code>.</li> </ul> <p><code>sql   INSERT INTO \"collections\" (\"title\", \"accession_number\", \"acquired\")   VALUES   ('Paysage imaginatif', '56.496', NULL),   ('Pivoines et papillon', '06.1899', '1906-01-01');</code></p> <p>Le mus\u00e9e ne conna\u00eet pas toujours exactement quand une peinture a \u00e9t\u00e9 acquise, donc il est possible que la valeur <code>acquired</code> soit <code>NULL</code>, comme c'est le cas pour la premi\u00e8re peinture que nous venons d'ins\u00e9rer.</p> <ul> <li>Pour voir la table mise \u00e0 jour, nous pouvons s\u00e9lectionner toutes les lignes de la table comme toujours.</li> </ul> <p><code>sql   SELECT * FROM \"collections\";</code></p> <ul> <li>Nos donn\u00e9es pourraient \u00e9galement \u00eatre stock\u00e9es dans un format de valeurs s\u00e9par\u00e9es par des virgules, ou CSV. Observons dans l'exemple suivant comment les valeurs de chaque ligne sont s\u00e9par\u00e9es par une virgule.</li> </ul> <p></p> <ul> <li>SQLite permet d'importer directement un fichier CSV dans notre base de donn\u00e9es. Pour ce faire, nous devons repartir de z\u00e9ro en supprimant mfa.db. Dans le terminal, on peut utiliser: </li> </ul> <p><code>sqlite   .quit --pour sortir de sqlite</code></p> <p><code>bash   rm mda.db # pour supprimer un ficher (rm = remove)</code></p> <ul> <li> <p>Nous avons d\u00e9j\u00e0 un fichier CSV appel\u00e9 <code>mfa.csv</code> qui contient les donn\u00e9es dont nous avons besoin. En ouvrant ce fichier, nous pouvons noter que la premi\u00e8re ligne contient les noms des colonnes, qui correspondent exactement aux noms des colonnes de notre table <code>collections</code> selon le sch\u00e9ma.</p> </li> <li> <p>Cr\u00e9ons \u00e0 nouveau la base de donn\u00e9es <code>mfa.db</code> et lisons le fichier de sch\u00e9ma comme nous l'avons fait pr\u00e9c\u00e9demment.</p> </li> </ul> <p><code>sqlite   sqlite3 mfa.db</code></p> <ul> <li>Ensuite, nous pouvons importer le CSV en ex\u00e9cutant une commande SQLite.</li> </ul> <p><code>sqlite   .import --csv mfa.csv collections</code></p> <p>Le premier argument, <code>--csv</code>, indique \u00e0 SQLite que nous importons un fichier CSV. Cela aidera SQLite \u00e0 analyser correctement le fichier. Le deuxi\u00e8me argument indique que la premi\u00e8re ligne du fichier CSV (la ligne d'en-t\u00eate) doit \u00eatre ignor\u00e9e, ou non ins\u00e9r\u00e9e dans la table.</p> <ul> <li> <p>Nous pouvons s\u00e9lectionner toutes les donn\u00e9es de la table <code>collections</code> pour voir que chaque peinture de <code>mfa.csv</code> a \u00e9t\u00e9 import\u00e9e avec succ\u00e8s dans la table.</p> </li> <li> <p>Le fichier CSV que nous venons d'ins\u00e9rer contenait des valeurs de cl\u00e9 primaire (1, 2, 3, etc.) pour chaque ligne de donn\u00e9es. Cependant, il est plus probable que les fichiers CSV avec lesquels nous travaillons ne contiennent pas les valeurs d'ID ou de cl\u00e9 primaire. Comment pouvons-nous faire en sorte que SQLite les ins\u00e8re automatiquement ?</p> </li> <li> <p>Pour essayer cela, ouvrons <code>mfa.csv</code> dans notre espace de code et supprimons la colonne <code>id</code> de la ligne d'en-t\u00eate, ainsi que les valeurs de chaque colonne. Voici \u00e0 quoi devrait ressembler <code>mfa.csv</code> une fois que nous aurons fini de le modifier :</p> </li> </ul> <p><code>title,accession_number,acquired   Profusion de fleurs,56.257,1956-04-12   Fermiers travaillant \u00e0 l'aube,11.6152,1911-08-03   Sortie de printemps,14.76,1914-01-08   Paysage imaginatif,56.496,   Pivoines et papillon,06.1899,1906-01-01</code></p> <ul> <li>Nous allons \u00e9galement supprimer toutes les lignes qui sont d\u00e9j\u00e0 dans la table <code>collections</code>.</li> </ul> <p><code>sql   DELETE FROM \"collections\";</code></p> <ul> <li> <p>Maintenant, nous voulons importer ce fichier CSV dans une table. Cependant, la table <code>collections</code> (selon notre sch\u00e9ma) doit avoir quatre colonnes dans chaque ligne. Ce nouveau fichier CSV ne contient que trois colonnes pour chaque ligne. Par cons\u00e9quent, nous ne pouvons pas proc\u00e9der \u00e0 l'importation de la m\u00eame mani\u00e8re que pr\u00e9c\u00e9demment.</p> </li> <li> <p>Pour importer avec succ\u00e8s le fichier CSV sans valeurs d'ID, nous devons utiliser une table temporaire :</p> </li> </ul> <p><code>sqlite   .import --csv mfa_noid.csv temp</code></p> <p>Remarquez que nous n'utilisons pas l'argument <code>--skip 1</code> avec cette commande. C'est parce que SQLite est capable de reconna\u00eetre la toute premi\u00e8re ligne de donn\u00e9es CSV comme la ligne d'en-t\u00eate, et convertit ces donn\u00e9es en noms de colonnes de la nouvelle table <code>temp</code>.</p> <ul> <li>Nous pouvons voir les donn\u00e9es dans la table <code>temp</code> en l'interrogeant.</li> </ul> <p><code>sql   SELECT * FROM \"temp\";</code></p> <ul> <li>Ensuite, nous allons s\u00e9lectionner les donn\u00e9es (sans cl\u00e9s primaires) de <code>temp</code> et les d\u00e9placer vers <code>collections</code>, ce qui \u00e9tait notre objectif depuis le d\u00e9but ! Nous pouvons utiliser la commande suivante pour y parvenir.</li> </ul> <p><code>sql   INSERT INTO \"collections\" (\"title\", \"accession_number\", \"acquired\")   SELECT \"title\", \"accession_number\", \"acquired\" FROM \"temp\";</code></p> <p>Dans ce processus, SQLite ajoutera automatiquement les valeurs de cl\u00e9 primaire dans la colonne <code>id</code>.</p> <ul> <li>Juste pour nettoyer notre base de donn\u00e9es, nous pouvons \u00e9galement supprimer la table <code>temp</code> une fois que nous avons fini de d\u00e9placer les donn\u00e9es.</li> </ul> <p><code>sql   DROP TABLE \"temp\";</code></p>"},{"location":"cours4/#suppression-de-donnees-deleting-data","title":"Suppression de donn\u00e9es (Deleting Data)","text":"<ul> <li>Nous avons vu pr\u00e9c\u00e9demment que l'ex\u00e9cution de la commande suivante supprimait toutes les lignes de la table <code>collections</code>. (Nous ne voulons pas ex\u00e9cuter cette commande maintenant, sinon nous perdrons toutes les donn\u00e9es de la table !)</li> </ul> <p><code>sql   DELETE FROM \"collections\";</code></p> <ul> <li>Nous pouvons \u00e9galement supprimer des lignes qui correspondent \u00e0 des conditions sp\u00e9cifiques. Par exemple, pour supprimer la peinture \"Sortie de printemps\" de notre table <code>collections</code>, nous pouvons ex\u00e9cuter :</li> </ul> <p><code>sql   DELETE FROM \"collections\"   WHERE \"title\" = 'Sortie de printemps';</code></p> <ul> <li>Pour supprimer toute peinture avec la date d'acquisition <code>NULL</code>, nous pouvons ex\u00e9cuter</li> </ul> <p><code>sql   DELETE FROM \"collections\"   WHERE \"acquired\" IS NULL;</code></p> <ul> <li>Comme toujours, nous nous assurerons que la suppression a fonctionn\u00e9 comme pr\u00e9vu en s\u00e9lectionnant toutes les donn\u00e9es de la table.</li> </ul> <p><code>sql   SELECT * FROM \"collections\";</code></p> <p>Nous voyons que les peintures \"Sortie de printemps\" et \"Paysage imaginatif\" ne sont plus dans la table. - Pour supprimer les lignes concernant des peintures ant\u00e9rieures \u00e0 1909, nous pouvons ex\u00e9cuter</p> <p><code>sql   DELETE FROM \"collections\"   WHERE \"acquired\" &lt; '1909-01-01';</code></p> <p>En utilisant l'op\u00e9rateur <code>&lt;</code> ici, nous trouvons les peintures acquises avant le 1er janvier 1909. Ce sont les peintures qui seront supprim\u00e9es lors de l'ex\u00e9cution de la requ\u00eate. - Il peut y avoir des cas o\u00f9 la suppression de certaines donn\u00e9es pourrait affecter l'int\u00e9grit\u00e9 d'une base de donn\u00e9es. Les contraintes de cl\u00e9 \u00e9trang\u00e8re en sont un bon exemple. Une colonne de cl\u00e9 \u00e9trang\u00e8re fait r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire d'une table diff\u00e9rente. Si nous devions supprimer la cl\u00e9 primaire, la colonne de cl\u00e9 \u00e9trang\u00e8re n'aurait plus rien \u00e0 r\u00e9f\u00e9rencer ! - Consid\u00e9rons maintenant un sch\u00e9ma mis \u00e0 jour pour la base de donn\u00e9es du MFA, contenant des informations non seulement sur les \u0153uvres d'art mais aussi sur les artistes. Les deux entit\u00e9s Artiste et Collection ont une relation plusieurs-\u00e0-plusieurs : une peinture peut \u00eatre cr\u00e9\u00e9e par plusieurs artistes et un seul artiste peut \u00e9galement cr\u00e9er plusieurs \u0153uvres d'art.</p> <p>[\"Sch\u00e9ma mis \u00e0 jour avec les entit\u00e9s artiste et collection\"]</p> <ul> <li>Voici une base de donn\u00e9es mettant en \u0153uvre le diagramme ER ci-dessus.</li> </ul> <p>[\"Trois tables : artistes, cr\u00e9\u00e9s, collections\"]</p> <p>Les tables <code>artistes</code> et <code>collections</code> ont des cl\u00e9s primaires : les colonnes ID. La table <code>created</code> fait r\u00e9f\u00e9rence \u00e0 ces ID dans ses deux colonnes de cl\u00e9 \u00e9trang\u00e8re. - \u00c9tant donn\u00e9 cette base de donn\u00e9es, si nous choisissons de supprimer l'artiste non identifi\u00e9 (avec l'ID 3), que se passera-t-il avec les lignes de la table <code>created</code> avec un <code>artist_id</code> de 3 ? Essayons-le. - Apr\u00e8s avoir ouvert <code>mfa.db</code>, nous pouvons maintenant voir le sch\u00e9ma mis \u00e0 jour en ex\u00e9cutant la commande <code>.schema</code>. La table <code>created</code> a effectivement deux contraintes de cl\u00e9 \u00e9trang\u00e8re, une pour l'ID de l'artiste et une pour l'ID de la collection. - Maintenant, nous pouvons essayer de supprimer de la table <code>artistes</code>.</p> <p><code>sql   DELETE FROM \"artists\"   WHERE \"name\" = 'Artiste non identifi\u00e9';</code></p> <p>En ex\u00e9cutant ceci, nous obtenons une erreur tr\u00e8s similaire \u00e0 celles que nous avons d\u00e9j\u00e0 vues dans ce cours : <code>Runtime error: FOREIGN KEY constraint failed (19)</code>. Cette erreur nous informe que la suppression de ces donn\u00e9es violerait la contrainte de cl\u00e9 \u00e9trang\u00e8re d\u00e9finie dans la table <code>created</code>. - Comment nous assurer que la contrainte n'est pas viol\u00e9e ? Une possibilit\u00e9 est de supprimer les lignes correspondantes de la table <code>created</code> avant de supprimer de la table <code>artistes</code>.</p> <p><code>sql   DELETE FROM \"created\"   WHERE \"artist_id\" = (       SELECT \"id\"       FROM \"artists\"       WHERE \"name\" = 'Artiste non identifi\u00e9'   );</code></p> <p>Cette requ\u00eate supprime efficacement l'affiliation de l'artiste avec son \u0153uvre. Une fois l'affiliation supprim\u00e9e, nous pouvons supprimer les donn\u00e9es de l'artiste sans violer la contrainte de cl\u00e9 \u00e9trang\u00e8re. Pour ce faire, nous pouvons ex\u00e9cuter</p> <p><code>sql   DELETE FROM \"artists\"   WHERE \"name\" = 'Artiste non identifi\u00e9';</code></p> <ul> <li>Dans une autre possibilit\u00e9, nous pouvons sp\u00e9cifier l'action \u00e0 entreprendre lorsqu'un ID r\u00e9f\u00e9renc\u00e9 par une cl\u00e9 \u00e9trang\u00e8re est supprim\u00e9. Pour ce faire, nous utilisons le mot-cl\u00e9 <code>ON DELETE</code> suivi de l'action \u00e0 entreprendre.</li> <li><code>ON DELETE RESTRICT</code> : Cela nous emp\u00eache de supprimer des ID lorsque la contrainte de cl\u00e9 \u00e9trang\u00e8re est viol\u00e9e.</li> <li><code>ON DELETE NO ACTION</code> : Cela permet la suppression d'ID r\u00e9f\u00e9renc\u00e9s par une cl\u00e9 \u00e9trang\u00e8re et rien ne se passe.</li> <li><code>ON DELETE SET NULL</code> : Cela permet la suppression d'ID r\u00e9f\u00e9renc\u00e9s par une cl\u00e9 \u00e9trang\u00e8re et d\u00e9finit les r\u00e9f\u00e9rences de cl\u00e9 \u00e9trang\u00e8re sur <code>NULL</code>.</li> <li><code>ON DELETE SET DEFAULT</code> : Cela fait la m\u00eame chose que le pr\u00e9c\u00e9dent, mais nous permet de d\u00e9finir une valeur par d\u00e9faut au lieu de <code>NULL</code>.</li> <li><code>ON DELETE CASCADE</code> : Cela permet la suppression d'ID r\u00e9f\u00e9renc\u00e9s par une cl\u00e9 \u00e9trang\u00e8re et supprime \u00e9galement en cascade les lignes de cl\u00e9 \u00e9trang\u00e8re r\u00e9f\u00e9rentes. Par exemple, si nous utilisions ceci pour supprimer un ID d'artiste, toutes les affiliations de l'artiste avec les \u0153uvres d'art seraient \u00e9galement supprim\u00e9es de la table <code>created</code>.</li> <li>La derni\u00e8re version du fichier de sch\u00e9ma met en \u0153uvre la m\u00e9thode ci-dessus. Les contraintes de cl\u00e9 \u00e9trang\u00e8re ressemblent maintenant \u00e0 ceci :</li> </ul> <p><code>sql   FOREIGN KEY(\"artist_id\") REFERENCES \"artists\"(\"id\") ON DELETE CASCADE   FOREIGN KEY(\"collection_id\") REFERENCES \"collections\"(\"id\") ON DELETE CASCADE</code></p> <p>Maintenant, l'ex\u00e9cution de l'instruction <code>DELETE</code> suivante ne r\u00e9sultera pas en une erreur, et supprimera en cascade de la table <code>artistes</code> \u00e0 la table <code>created</code> :</p> <p><code>sql   DELETE FROM \"artists\"   WHERE \"name\" = 'Artiste non identifi\u00e9';</code></p> <p>Pour v\u00e9rifier que cette suppression en cascade a fonctionn\u00e9, nous pouvons interroger la table <code>created</code> :</p> <p><code>sql   SELECT * FROM \"created\";</code></p> <p>Nous observons qu'aucune des lignes n'a un ID de 3 (l'ID de l'artiste supprim\u00e9 de la table <code>artistes</code>).</p>"},{"location":"cours4/#mise-a-jour-de-donnees-updating-data","title":"Mise \u00e0 jour de donn\u00e9es (Updating Data)","text":"<ul> <li>Nous pouvons facilement imaginer des sc\u00e9narios dans lesquels des donn\u00e9es dans une base de donn\u00e9es devraient \u00eatre mises \u00e0 jour. Peut-\u00eatre, dans le cas de la base de donn\u00e9es du MFA, nous d\u00e9couvrons que la peinture \"Fermiers travaillant \u00e0 l'aube\" initialement attribu\u00e9e \u00e0 un \"Artiste non identifi\u00e9\" a en fait \u00e9t\u00e9 cr\u00e9\u00e9e par l'artiste Li Yin.</li> <li>Nous pouvons utiliser la commande de mise \u00e0 jour pour apporter des modifications, par exemple, \u00e0 l'affiliation d'une peinture. Voici la syntaxe de la commande de mise \u00e0 jour.</li> </ul> <p>[\"Syntaxe de la commande de mise \u00e0 jour\"]</p> <ul> <li>Changeons cette affiliation pour \"Fermiers travaillant \u00e0 l'aube\" dans la table <code>created</code> en utilisant la syntaxe ci-dessus.</li> </ul> <p><code>sql   UPDATE \"created\"   SET \"artist_id\" = (       SELECT \"id\"       FROM \"artists\"       WHERE \"name\" = 'Li Yin'   )   WHERE \"collection_id\" = (       SELECT \"id\"       FROM \"collections\"       WHERE \"title\" = 'Fermiers travaillant \u00e0 l'aube'   );</code></p> <p>La premi\u00e8re partie de cette requ\u00eate sp\u00e9cifie la table \u00e0 mettre \u00e0 jour. La partie suivante r\u00e9cup\u00e8re l'ID de Li Yin \u00e0 d\u00e9finir comme nouvel ID. La derni\u00e8re partie s\u00e9lectionne la ou les lignes dans <code>created</code> qui seront mises \u00e0 jour avec l'ID de Li Yin, qui est la peinture \"Fermiers travaillant \u00e0 l'aube\" !</p>"},{"location":"cours4/#fin","title":"Fin","text":"<ul> <li>Cela conclut le Cours 3 sur l'\u00e9criture en SQL !</li> </ul> <p>Si vous avez besoin de plus d'informations ou d'aide suppl\u00e9mentaire, n'h\u00e9sitez pas \u00e0 demander !</p>"},{"location":"cours4/dont-panic/instructions/","title":"Don't Panic // Ne Paniquez Pas ! (Version originale)","text":"<p> \"Un seul ordinateur de bureau pos\u00e9 sur un bureau dans un bureau vide la nuit, dans le style d'un roman noir\", g\u00e9n\u00e9r\u00e9 par DALL\u00b7E 2</p>"},{"location":"cours4/dont-panic/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Vous \u00eates un \"pentester\" (testeur d'intrusion) entra\u00een\u00e9. Les entreprises vous engagent souvent pour effectuer des tests de p\u00e9n\u00e9tration et signaler les vuln\u00e9rabilit\u00e9s dans leurs syst\u00e8mes de donn\u00e9es. Il n'y a pas si longtemps, vous avez \u00e9t\u00e9 engag\u00e9 par une petite entreprise qui avait besoin de vous pour effectuer un tel test sur une base de donn\u00e9es SQLite : celle qui alimente leur site web \u00e0 faible trafic.</p> <p>Pour r\u00e9ussir cette op\u00e9ration secr\u00e8te, vous devrez :</p> <ul> <li>Modifier le mot de passe du compte administratif du site web.</li> <li>Effacer tous les journaux (logs) de ce changement de mot de passe enregistr\u00e9s par la base de donn\u00e9es.</li> <li>Ajouter de fausses donn\u00e9es pour d\u00e9tourner l'attention de l'entreprise.</li> </ul> <p>Et maintenant, une opportunit\u00e9 en or se pr\u00e9sente : vous vous \u00eates faufil\u00e9 dans les locaux de l'entreprise, juste \u00e0 temps pour voir un ing\u00e9nieur logiciel quitter son bureau. La connexion de l'ing\u00e9nieur \u00e0 la base de donn\u00e9es est toujours ouverte. Vous estimez avoir 5 minutes avant qu'il ne revienne. Pr\u00eat ?</p>"},{"location":"cours4/dont-panic/instructions/#demo","title":"Demo","text":"<p>Vous avez une base de donn\u00e9es nomm\u00e9e <code>dont-panic.db</code> \u00e0 c\u00f4t\u00e9 d'un fichier <code>hack.sql</code> et <code>reset.sql</code>. L'ex\u00e9cution de <code>sqlite3 dont-panic.db</code> devrait ouvrir la base de donn\u00e9es.</p>"},{"location":"cours4/dont-panic/instructions/#schema","title":"Sch\u00e9ma","text":"<p>D\u00e9sol\u00e9, il n'y a pas beaucoup de temps pour expliquer le sch\u00e9ma de la base de donn\u00e9es. N'oubliez pas que vous pouvez acc\u00e9der au sch\u00e9ma d'une base de donn\u00e9es SQLite avec <code>.schema</code>.</p>"},{"location":"cours4/dont-panic/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Dans <code>hack.sql</code>, \u00e9crivez une s\u00e9quence d'instructions SQL pour r\u00e9aliser ce qui suit :</p> <ul> <li>Modifier le mot de passe du compte administratif du site web, <code>admin</code>, pour qu'il soit \"oops!\".</li> <li>Effacer tous les journaux (logs) du changement de mot de passe ci-dessus enregistr\u00e9s par la base de donn\u00e9es.</li> <li>Ajouter de fausses donn\u00e9es pour d\u00e9tourner l'attention des autres. En particulier, pour pi\u00e9ger <code>emily33</code>, faites en sorte qu'il semble seulement - dans la table <code>user_logs</code> - que le mot de passe du compte <code>admin</code> a \u00e9t\u00e9 chang\u00e9 pour celui de <code>emily33</code>.</li> </ul> <p>Lorsque vos instructions SQL dans <code>hack.sql</code> sont ex\u00e9cut\u00e9es sur une nouvelle instance de la base de donn\u00e9es, elles doivent produire les r\u00e9sultats ci-dessus. Sachez simplement que l'ordre dans lequel ces objectifs sont pr\u00e9sent\u00e9s n'est peut-\u00eatre pas l'ordre dans lequel ils sont le mieux accomplis !</p> <p>Gardez \u00e9galement \u00e0 l'esprit que les mots de passe ne sont g\u00e9n\u00e9ralement pas stock\u00e9s \"en clair\" - c'est-\u00e0-dire sous forme de caract\u00e8res simples qui composent le mot de passe. Au lieu de cela, ils sont \"hach\u00e9s\" (hash\u00e9s), ou brouill\u00e9s, pour pr\u00e9server la confidentialit\u00e9. \u00c9tant donn\u00e9 cette r\u00e9alit\u00e9, vous devrez vous assurer que le mot de passe auquel vous changez le mot de passe administratif est \u00e9galement hach\u00e9. Heureusement, vous savez que les mots de passe de la table <code>users</code> sont d\u00e9j\u00e0 stock\u00e9s sous forme de hachages MD5. Vous pouvez g\u00e9n\u00e9rer rapidement de tels hachages \u00e0 partir de texte brut sur md5hashgenerator.com.</p> <p>L'horloge tourne !</p>"},{"location":"cours4/dont-panic/instructions/#indices","title":"Indices","text":"<ul> <li>Rappelez-vous que vous pouvez <code>INSERT</code> (ins\u00e9rer) dans une table les lignes retourn\u00e9es par une instruction <code>SELECT</code>, tant que le nombre de colonnes correspond.</li> <li>Vous pouvez cr\u00e9er une sous-requ\u00eate \u00e0 tout moment dans une instruction SQL, pas seulement dans le cadre d'une clause <code>WHERE</code>. Par exemple, consid\u00e9rez la requ\u00eate SQL suivante sur une table <code>user_logs</code> simplifi\u00e9e :</li> </ul> <pre><code>INSERT INTO \"user_logs\" (\"type\", \"password\")\nSELECT 'update', (\n    SELECT \"password\"\n    FROM \"users\"\n    WHERE \"username\" = 'carter'\n);\n</code></pre> <p>La requ\u00eate ci-dessus ins\u00e9rera une nouvelle ligne dans la table <code>user_logs</code>. La colonne <code>type</code> aura la valeur \"update\" et la colonne <code>password</code> aura le mot de passe actuel de l'utilisateur <code>carter</code>.</p>"},{"location":"cours4/dont-panic/instructions/#utilisation","title":"Utilisation","text":"<p>Pour tester votre piratage au fur et \u00e0 mesure que vous l'\u00e9crivez dans vos fichiers <code>hack.sql</code>, vous pouvez interroger la base de donn\u00e9es en ex\u00e9cutant</p> <pre><code>.read hack.sql\n</code></pre> <p>Si vous devez r\u00e9initialiser la base de donn\u00e9es \u00e0 tout moment, vous pouvez ex\u00e9cuter</p> <pre><code>.read reset.sql\n</code></pre> <p>pour la ramener \u00e0 sa forme originale.</p>"},{"location":"cours4/meteorites/instructions/","title":"Nettoyage de M\u00e9t\u00e9orites (Version originale)","text":"<p> \"Astronautes de la NASA nettoyant une grosse m\u00e9t\u00e9orite, dans le style d'une bande dessin\u00e9e de science-fiction\", g\u00e9n\u00e9r\u00e9 par DALL\u00b7E 2</p>"},{"location":"cours4/meteorites/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>En tant qu'ing\u00e9nieur de donn\u00e9es \u00e0 la NASA, vous passez souvent votre temps \u00e0 nettoyer des m\u00e9t\u00e9orites - ou du moins les donn\u00e9es qu'elles g\u00e9n\u00e8rent.</p> <p>On vous a fourni un fichier CSV des atterrissages historiques de m\u00e9t\u00e9orites ici sur Terre, et il y en a pas mal ! Votre travail consiste \u00e0 importer les donn\u00e9es dans une base de donn\u00e9es SQLite, en les nettoyant au passage. Une fois termin\u00e9, la base de donn\u00e9es sera utilis\u00e9e dans des analyses par certains de vos coll\u00e8gues ing\u00e9nieurs.</p>"},{"location":"cours4/meteorites/instructions/#distribution-code","title":"Distribution Code","text":"<p>et voir un fichier CSV nomm\u00e9 <code>meteorites.csv</code> \u00e0 c\u00f4t\u00e9 d'un fichier <code>import.sql</code>. Si ce n'est pas le cas, revenez sur vos pas et voyez si vous pouvez d\u00e9terminer o\u00f9 vous vous \u00eates tromp\u00e9 !</p>"},{"location":"cours4/meteorites/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Dans <code>import.sql</code>, \u00e9crivez une s\u00e9rie d'instructions SQL (et SQLite) pour importer et nettoyer les donn\u00e9es de <code>meteorites.csv</code> dans une table, <code>meteorites</code>, dans une base de donn\u00e9es appel\u00e9e <code>meteorites.db</code>.</p> <p>Dans <code>meteorites.db</code>, la table <code>meteorites</code> doit avoir les colonnes suivantes :</p> <p>Colonnes dans la table <code>meteorites</code> - <code>id</code>, qui repr\u00e9sente l'ID unique de la m\u00e9t\u00e9orite. - <code>name</code>, qui repr\u00e9sente le nom donn\u00e9 \u00e0 la m\u00e9t\u00e9orite. - <code>class</code>, qui est la classification de la m\u00e9t\u00e9orite, selon le sch\u00e9ma de classification traditionnel. - <code>mass</code>, qui est le poids de la m\u00e9t\u00e9orite, en grammes. - <code>discovery</code>, qui est soit \"Fell\" (chute) soit \"Found\" (trouv\u00e9e). \"Fell\" indique que la m\u00e9t\u00e9orite a \u00e9t\u00e9 vue tombant sur Terre, tandis que \"Found\" indique que la m\u00e9t\u00e9orite n'a \u00e9t\u00e9 trouv\u00e9e qu'apr\u00e8s avoir atterri sur Terre. - <code>year</code>, qui est l'ann\u00e9e de d\u00e9couverte de la m\u00e9t\u00e9orite. - <code>lat</code>, qui est la latitude \u00e0 laquelle la m\u00e9t\u00e9orite a atterri. - <code>long</code>, qui est la longitude \u00e0 laquelle la m\u00e9t\u00e9orite a atterri.</p> <p>Gardez \u00e0 l'esprit que toutes les colonnes du CSV ne doivent pas se retrouver dans la table finale !</p> <p>Pour consid\u00e9rer les donn\u00e9es de la table <code>meteorites</code> comme propres, vous devez vous assurer que...</p> <ol> <li>Toutes les valeurs vides dans <code>meteorites.csv</code> sont repr\u00e9sent\u00e9es par <code>NULL</code> dans la table <code>meteorites</code>.<ul> <li>Gardez \u00e0 l'esprit que les colonnes <code>mass</code>, <code>year</code>, <code>lat</code>, et <code>long</code> ont des valeurs vides dans le CSV.</li> </ul> </li> <li>Toutes les colonnes avec des valeurs d\u00e9cimales (par exemple, 70.4777) doivent \u00eatre arrondies au centi\u00e8me le plus proche (par exemple, 70.4777 devient 70.48).<ul> <li>Gardez \u00e0 l'esprit que les colonnes <code>mass</code>, <code>lat</code>, et <code>long</code> ont des valeurs d\u00e9cimales.</li> </ul> </li> <li>Toutes les m\u00e9t\u00e9orites avec le <code>nametype</code> \"Relict\" ne sont pas incluses dans la table <code>meteorites</code>.</li> <li>Les m\u00e9t\u00e9orites sont tri\u00e9es par <code>year</code>, de la plus ancienne \u00e0 la plus r\u00e9cente, et ensuite - si deux m\u00e9t\u00e9orites ont atterri la m\u00eame ann\u00e9e - par <code>name</code>, dans l'ordre alphab\u00e9tique.</li> <li>Vous avez mis \u00e0 jour les IDs des m\u00e9t\u00e9orites de <code>meteorites.csv</code>, selon l'ordre sp\u00e9cifi\u00e9 en #4.<ul> <li>L'<code>id</code> des m\u00e9t\u00e9orites doit commencer \u00e0 1, en commen\u00e7ant par la m\u00e9t\u00e9orite qui a atterri l'ann\u00e9e la plus ancienne et qui est la premi\u00e8re dans l'ordre alphab\u00e9tique pour cette ann\u00e9e-l\u00e0.</li> </ul> </li> </ol>"},{"location":"cours4/meteorites/instructions/#conseils","title":"Conseils","text":"<p>Il peut sembler accablant de savoir par o\u00f9 commencer pour nettoyer un fichier de donn\u00e9es aussi volumineux ! D\u00e9composons le probl\u00e8me en morceaux plus petits.</p> <p>Commencez par importer <code>meteorites.csv</code> dans une table temporaire</p> <p>Commencez par importer toutes les donn\u00e9es de <code>meteorites.csv</code> dans une table temporaire, appel\u00e9e <code>meteorites_temp</code>. Une table temporaire est un espace r\u00e9serv\u00e9 utile : vous pouvez l'utiliser pour nettoyer vos donn\u00e9es jusqu'\u00e0 ce qu'elles soient sous une forme adapt\u00e9e \u00e0 votre table <code>meteorites</code> finale.</p> <p>Avant d'importer un CSV dans une base de donn\u00e9es SQLite, il est pr\u00e9f\u00e9rable de d\u00e9finir le sch\u00e9ma de la table dans laquelle ces donn\u00e9es seront import\u00e9es. Dans <code>import.sql</code>, essayez ce qui suit :</p> <pre><code>CREATE TABLE \"meteorites_temp\" (\n    -- TODO\n);\n</code></pre> <p>Nous vous laissons le soin de choisir les noms des colonnes.</p> <p>Ensuite, rappelez-vous que <code>.import</code> est une instruction SQLite qui peut importer un CSV dans une table de votre choix. Apr\u00e8s votre instruction <code>CREATE TABLE</code>, \u00e9crivez une instruction <code>.import</code> pour importer les donn\u00e9es de <code>meteorites.csv</code> dans la table <code>meteorites_temp</code>.</p> <p>Enfin, conform\u00e9ment \u00e0 la section Utilisation ci-dessous, essayez de cr\u00e9er <code>meteorites.db</code> en ex\u00e9cutant les instructions dans <code>import.sql</code>.</p> <p>\u00c9crivez des instructions SQL pour nettoyer les donn\u00e9es import\u00e9es</p> <p>Avec vos donn\u00e9es dans une table temporaire, continuez \u00e0 \u00e9crire des instructions SQL pour nettoyer les donn\u00e9es. Consid\u00e9rez comment vous pourriez mettre \u00e0 jour les valeurs de la colonne <code>mass</code>, par exemple :</p> <pre><code>UPDATE \"meteorites_temp\"\nSET \"mass\" = ...\nWHERE ...\n</code></pre> <p>Vous devrez peut-\u00eatre \u00e9crire quelques instructions de ce type, une (ou plus) pour chaque colonne que vous essayez de nettoyer.</p> <p>Transf\u00e9rez les donn\u00e9es de votre table temporaire dans une table <code>meteorites</code></p> <p>Rappelez-vous que vous pouvez <code>INSERT</code> des valeurs dans une nouvelle table en <code>SELECT</code>ionnant des lignes d'une autre :</p> <pre><code>INSERT INTO \"table0\" (\"column0\", \"column1\")\nSELECT \"column0\", \"column1\" FROM \"table1\";\n</code></pre> <p>Lorsque vous le faites, vous pouvez r\u00e9organiser vos donn\u00e9es en utilisant <code>ORDER BY</code>. Et, tant que vous avez sp\u00e9cifi\u00e9 une colonne de cl\u00e9 primaire dans votre nouvelle table, une telle instruction attribuera automatiquement de nouveaux IDs aux lignes ins\u00e9r\u00e9es si aucun n'est sp\u00e9cifi\u00e9.</p> <p>Une fois que vous avez termin\u00e9 avec la table temporaire, il est bon de la supprimer !</p>"},{"location":"cours4/meteorites/instructions/#utilisation","title":"Utilisation","text":"<p>Introduisons quelques commandes de terminal qui pourraient \u00eatre utiles pendant que vous travaillez sur le nettoyage de cet ensemble de donn\u00e9es ! Consid\u00e9rez ce qui suit :</p> <pre><code>cat import.sql | sqlite3 meteorites.db\n</code></pre> <p>La commande ci-dessus peut \u00eatre d\u00e9compos\u00e9e en deux parties :</p> <ul> <li><code>cat import.sql</code> affiche les donn\u00e9es dans <code>import.sql</code>. Essayez-le seul si vous \u00eates curieux.</li> <li><code>sqlite3 meteorites.db</code> ouvre un fichier appel\u00e9 <code>meteorites.db</code> avec le moteur <code>sqlite3</code>, comme vous en avez d\u00e9j\u00e0 l'habitude.</li> </ul> <p>Lorsque ces commandes sont combin\u00e9es avec un pipe, <code>|</code>, les donn\u00e9es de <code>import.sql</code> sont trait\u00e9es comme un ensemble d'instructions pour <code>sqlite3</code> \u00e0 ex\u00e9cuter sur <code>meteorites.db</code>. Si <code>meteorites.db</code> n'existe pas encore, il sera cr\u00e9\u00e9 et les instructions dans <code>import.sql</code> seront ex\u00e9cut\u00e9es dessus.</p> <p>Et si votre <code>import.sql</code> n'est pas parfait et que vous souhaitez recr\u00e9er la base de donn\u00e9es ? Consid\u00e9rez la suppression de la version actuelle de <code>meteorites.db</code> avec :</p> <pre><code>rm meteorites.db\n</code></pre> <p><code>rm</code> signifie remove (supprimer). Si vous y \u00eates invit\u00e9, tapez \"y\" suivi de Entr\u00e9e pour confirmer la suppression de <code>meteorites.db</code>. \u00c0 partir de l\u00e0, vous pouvez r\u00e9ex\u00e9cuter <code>cat import.sql | sqlite3 meteorites.db</code> pour cr\u00e9er <code>meteorites.db</code> \u00e0 partir de z\u00e9ro.</p>"},{"location":"cours5/","title":"Introduction","text":""},{"location":"cours5/#cours-5-version-originale","title":"Cours 5 (Version originale)","text":"<ul> <li>Introduction</li> <li>Vues (Views)</li> <li>Simplification</li> <li>Agr\u00e9gation</li> <li>Expression Commune de Table (CTE)</li> <li>Partitionnement</li> <li>S\u00e9curisation</li> <li>Suppressions Logiques (Soft Deletions)</li> </ul>"},{"location":"cours5/#introduction","title":"Introduction","text":"<ul> <li>Jusqu'\u00e0 pr\u00e9sent, nous avons appris des concepts qui nous permettent de concevoir des bases de donn\u00e9es complexes et d'y \u00e9crire des donn\u00e9es. Maintenant, nous allons explorer des moyens d'obtenir des vues \u00e0 partir de ces bases de donn\u00e9es.</li> <li>Revenons \u00e0 la base de donn\u00e9es contenant des livres pr\u00e9s\u00e9lectionn\u00e9s pour le International Booker Prize. Voici un aper\u00e7u des tables de cette base de donn\u00e9es.</li> </ul> <p> - Pour trouver un livre \u00e9crit par l'auteur Han Kang, nous devrions parcourir chacune des trois tables ci-dessus \u2014 d'abord en trouvant l'ID de l'auteur, puis les IDs des livres correspondants et enfin les titres des livres. Au lieu de cela, existe-t-il un moyen de regrouper les informations connexes des trois tables dans une seule vue ? - Oui, nous pouvons utiliser la commande <code>JOIN</code> en SQL pour combiner des lignes de deux tables ou plus en fonction d'une colonne li\u00e9e entre elles. Voici une repr\u00e9sentation visuelle de la mani\u00e8re dont ces tables pourraient \u00eatre jointes afin d'aligner les auteurs et leurs livres.</p> <p></p> <p>Cela permet de voir facilement que Han Kang a \u00e9crit \"The White Book\". - On peut aussi imaginer supprimer les colonnes d'ID ici, de sorte que notre vue ressemble \u00e0 ce qui suit.</p> <p></p>"},{"location":"cours5/#vues-views","title":"Vues (Views)","text":"<ul> <li>Une vue est une table virtuelle d\u00e9finie par une requ\u00eate.</li> <li>Supposons que nous \u00e9crivions une requ\u00eate pour joindre trois tables, comme dans l'exemple pr\u00e9c\u00e9dent, puis s\u00e9lectionnons les colonnes pertinentes. La nouvelle table cr\u00e9\u00e9e par cette requ\u00eate peut \u00eatre enregistr\u00e9e en tant que vue, \u00e0 interroger ult\u00e9rieurement.</li> <li>Les vues sont utiles pour :<ul> <li>simplifier : regrouper des donn\u00e9es de diff\u00e9rentes tables pour les interroger plus simplement,</li> <li>agr\u00e9ger : ex\u00e9cuter des fonctions d'agr\u00e9gation, comme trouver la somme, et stocker les r\u00e9sultats,</li> <li>partitionner : diviser les donn\u00e9es en morceaux logiques,</li> <li>s\u00e9curiser : masquer les colonnes qui doivent rester s\u00e9curis\u00e9es. Bien qu'il existe d'autres fa\u00e7ons dont les vues peuvent \u00eatre utiles, dans cette conf\u00e9rence, nous nous concentrerons sur les quatre points ci-dessus.</li> </ul> </li> </ul>"},{"location":"cours5/#simplification","title":"Simplification","text":"<ul> <li>Ouvrons <code>longlist.db</code> sur SQLite et ex\u00e9cutons la commande <code>.schema</code> pour v\u00e9rifier que les trois tables que nous avons vues dans l'exemple pr\u00e9c\u00e9dent sont cr\u00e9\u00e9es : <code>authors</code>, <code>authored</code> et <code>books</code>.</li> <li>Pour s\u00e9lectionner les livres \u00e9crits par Fernanda Melchor, nous \u00e9cririons cette requ\u00eate imbriqu\u00e9e.</li> </ul> <pre><code>SELECT \"title\" FROM \"books\"\nWHERE \"id\" IN (\n    SELECT \"book_id\" FROM \"authored\"\n    WHERE \"author_id\" = (\n        SELECT \"id\" FROM \"authors\"\n        WHERE \"name\" = 'Fernanda Melchor'\n    )\n);\n</code></pre> <ul> <li>La requ\u00eate ci-dessus est complexe \u2014 il y a trois requ\u00eates <code>SELECT</code> dans la requ\u00eate imbriqu\u00e9e. Pour simplifier cela, utilisons d'abord <code>JOIN</code> pour cr\u00e9er une vue contenant les auteurs et leurs livres.</li> <li>Dans un nouveau terminal, connectons-nous \u00e0 nouveau \u00e0 <code>longlist.db</code>, et ex\u00e9cutons la requ\u00eate suivante.</li> </ul> <pre><code>SELECT \"name\", \"title\" FROM \"authors\"\nJOIN \"authored\" ON \"authors\".\"id\" = \"authored\".\"author_id\"\nJOIN \"books\" ON \"books\".\"id\" = \"authored\".\"book_id\";\n</code></pre> <pre><code>- Notez qu'il est important de sp\u00e9cifier comment deux tables sont jointes, ou les colonnes sur lesquelles elles sont jointes.\n- Astuce : La colonne de cl\u00e9 primaire d'une table est g\u00e9n\u00e9ralement jointe \u00e0 la colonne de cl\u00e9 \u00e9trang\u00e8re correspondante de l'autre table !\n- L'ex\u00e9cution de cette requ\u00eate affichera une table contenant tous les noms d'auteurs \u00e0 c\u00f4t\u00e9 des titres des livres qu'ils ont \u00e9crits.\n</code></pre> <ul> <li>Pour enregistrer la table virtuelle cr\u00e9\u00e9e \u00e0 l'\u00e9tape pr\u00e9c\u00e9dente en tant que vue, nous devons modifier la requ\u00eate.</li> </ul> <pre><code>CREATE VIEW \"longlist\" AS\nSELECT \"name\", \"title\" FROM \"authors\"\nJOIN \"authored\" ON \"authors\".\"id\" = \"authored\".\"author_id\"\nJOIN \"books\" ON \"books\".\"id\" = \"authored\".\"book_id\";\n</code></pre> <p>La vue cr\u00e9\u00e9e ici s'appelle <code>longlist</code>. Cette vue peut maintenant \u00eatre utilis\u00e9e exactement comme nous utiliserions une table en SQL. - \u00c9crivons une requ\u00eate pour voir toutes les donn\u00e9es dans cette vue.</p> <pre><code>SELECT * FROM \"longlist\";\n</code></pre> <ul> <li>En utilisant cette vue, nous pouvons consid\u00e9rablement simplifier la requ\u00eate n\u00e9cessaire pour trouver les livres \u00e9crits par Fernanda Melchor.</li> </ul> <pre><code>SELECT \"title\" FROM \"longlist\" WHERE \"name\" = 'Fernanda Melchor';\n</code></pre> <ul> <li>Une vue, \u00e9tant une table virtuelle, ne consomme pas beaucoup plus d'espace disque pour \u00eatre cr\u00e9\u00e9e. Les donn\u00e9es d'une vue sont toujours stock\u00e9es dans les tables sous-jacentes, mais restent accessibles via cette vue simplifi\u00e9e.</li> </ul>"},{"location":"cours5/#questions","title":"Questions","text":"<p>Peut-on manipuler les vues pour les trier ou les afficher diff\u00e9remment ?</p> <ul> <li>Oui, nous pouvons trier les livres dans une vue de la m\u00eame mani\u00e8re que nous le ferions dans une table.<ul> <li>Par exemple, affichons les donn\u00e9es de la vue <code>longlist</code>, tri\u00e9es par les titres des livres.</li> </ul> </li> </ul> <pre><code>SELECT \"name\", \"title\"\nFROM  \"longlist\"\nORDER BY \"title\";\n</code></pre> <pre><code>- Nous pourrions \u00e9galement avoir la vue elle-m\u00eame tri\u00e9e. Nous pouvons le faire en incluant une clause `ORDER BY` dans la requ\u00eate utilis\u00e9e pour cr\u00e9er la vue.\n</code></pre>"},{"location":"cours5/#agregation","title":"Agr\u00e9gation","text":"<ul> <li>Dans <code>longlist.db</code>, nous avons une table contenant des notes individuelles attribu\u00e9es \u00e0 chaque livre. Dans les semaines pr\u00e9c\u00e9dentes, nous avons vu comment trouver la note moyenne de chaque livre, arrondie \u00e0 2 d\u00e9cimales.</li> </ul> <pre><code>SELECT \"book_id\", ROUND(AVG(\"rating\"), 2) AS \"rating\"\nFROM \"ratings\"\nGROUP BY \"book_id\";\n</code></pre> <ul> <li>Les r\u00e9sultats de la requ\u00eate ci-dessus peuvent \u00eatre rendus plus utiles en affichant le titre de chaque livre, et peut-\u00eatre l'ann\u00e9e o\u00f9 chaque livre a \u00e9t\u00e9 pr\u00e9s\u00e9lectionn\u00e9. Ces informations sont pr\u00e9sentes dans la table <code>books</code>.</li> </ul> <pre><code>SELECT \"book_id\", \"title\", \"year\", ROUND(AVG(\"rating\"), 2) AS \"rating\"\nFROM \"ratings\"\nJOIN \"books\" ON \"ratings\".\"book_id\" = \"books\".\"id\"\nGROUP BY \"book_id\";\n</code></pre> <pre><code>- Ici, nous utilisons un `JOIN` pour combiner des informations des tables `ratings` et `books`, en les joignant sur la colonne de l'ID du livre.\n- Remarquez l'ordre des op\u00e9rations dans cette requ\u00eate \u2014 en particulier, le placement de l'op\u00e9ration `GROUP BY` \u00e0 la fin de la requ\u00eate apr\u00e8s la jonction des deux tables.\n</code></pre> <ul> <li>Ces donn\u00e9es agr\u00e9g\u00e9es peuvent \u00eatre stock\u00e9es dans une vue.</li> </ul> <pre><code>CREATE VIEW \"average_book_ratings\" AS\nSELECT \"book_id\" AS \"id\", \"title\", \"year\", ROUND(AVG(\"rating\"), 2) AS \"rating\"\nFROM \"ratings\"\nJOIN \"books\" ON \"ratings\".\"book_id\" = \"books\".\"id\"\nGROUP BY \"book_id\";\n</code></pre> <pre><code>- Maintenant, regardons les donn\u00e9es dans cette vue.\n</code></pre> <pre><code>SELECT * FROM \"average_book_ratings\";\n</code></pre> <ul> <li>En ajoutant plus de donn\u00e9es \u00e0 la table <code>ratings</code>, pour obtenir un agr\u00e9gat \u00e0 jour, il suffit de requ\u00eater \u00e0 nouveau la vue en utilisant une commande <code>SELECT</code> comme ci-dessus !</li> <li>Chaque fois qu'une vue est cr\u00e9\u00e9e, elle est ajout\u00e9e au sch\u00e9ma. Nous pouvons v\u00e9rifier cela en ex\u00e9cutant <code>.schema</code> pour observer que <code>longlist</code> et <code>average_book_ratings</code> font d\u00e9sormais partie du sch\u00e9ma de cette base de donn\u00e9es.</li> <li>Pour cr\u00e9er des vues temporaires qui ne sont pas stock\u00e9es dans le sch\u00e9ma de la base de donn\u00e9es, nous pouvons utiliser <code>CREATE TEMPORARY VIEW</code>. Cette commande cr\u00e9e une vue qui existe uniquement pendant la dur\u00e9e de notre connexion avec la base de donn\u00e9es.</li> <li>Pour trouver la note moyenne des livres par ann\u00e9e, nous pouvons utiliser la vue que nous avons d\u00e9j\u00e0 cr\u00e9\u00e9e.</li> </ul> <pre><code>SELECT \"year\", ROUND(AVG(\"rating\"), 2) AS \"rating\"\nFROM \"average_book_ratings\"\nGROUP BY \"year\";\n</code></pre> <p>Remarquez que nous s\u00e9lectionnons la colonne <code>rating</code> de <code>average_book_ratings</code>, qui contient d\u00e9j\u00e0 les notes moyennes par livre. Ensuite, nous les regroupons par ann\u00e9e et calculons \u00e0 nouveau les notes moyennes, ce qui nous donne la note moyenne par ann\u00e9e ! - Nous pouvons stocker les r\u00e9sultats dans une vue temporaire.</p> <pre><code>CREATE TEMPORARY VIEW \"average_ratings_by_year\" AS\nSELECT \"year\", ROUND(AVG(\"rating\"), 2) AS \"rating\" FROM \"average_book_ratings\"\nGROUP BY \"year\";\n</code></pre>"},{"location":"cours5/#questions_1","title":"Questions","text":"<p>Les vues temporaires peuvent-elles \u00eatre utilis\u00e9es pour tester si une requ\u00eate fonctionne ou non ?</p> <ul> <li>Oui, c'est un excellent cas d'utilisation pour les vues temporaires ! Pour g\u00e9n\u00e9raliser un peu, les vues temporaires sont utilis\u00e9es lorsque nous voulons organiser des donn\u00e9es d'une certaine mani\u00e8re sans r\u00e9ellement stocker cette organisation \u00e0 long terme.</li> </ul>"},{"location":"cours5/#expression-commune-de-table-cte","title":"Expression Commune de Table (CTE)","text":"<ul> <li>Une vue r\u00e9guli\u00e8re existe pour toujours dans notre sch\u00e9ma de base de donn\u00e9es. Une vue temporaire existe pendant la dur\u00e9e de notre connexion avec la base de donn\u00e9es. Une CTE est une vue qui existe pour une seule requ\u00eate.</li> <li>Recr\u00e9ons la vue contenant les notes moyennes des livres par ann\u00e9e en utilisant une CTE au lieu d'une vue temporaire. Tout d'abord, nous devons supprimer la vue temporaire existante afin de pouvoir r\u00e9utiliser le nom <code>average_book_ratings</code>.</li> </ul> <pre><code>DROP VIEW \"average_book_ratings\";\n</code></pre> <ul> <li>Ensuite, nous cr\u00e9ons une CTE contenant les notes moyennes par livre. Nous utilisons ensuite les notes moyennes par livre pour calculer les notes moyennes par ann\u00e9e, de la m\u00eame mani\u00e8re que nous l'avons fait pr\u00e9c\u00e9demment.</li> </ul> <pre><code>WITH \"average_book_ratings\" AS (\n    SELECT \"book_id\", \"title\", \"year\", ROUND(AVG(\"rating\"), 2) AS \"rating\" FROM \"ratings\"\n    JOIN \"books\" ON \"ratings\".\"book_id\" = \"books\".\"id\"\n    GROUP BY \"book_id\"\n)\nSELECT \"year\" ROUND(AVG(\"rating\"), 2) AS \"rating\" FROM \"average_book_ratings\"\nGROUP BY \"year\";\n</code></pre>"},{"location":"cours5/#partitionnement","title":"Partitionnement","text":"<ul> <li>Les vues peuvent \u00eatre utilis\u00e9es pour partitionner des donn\u00e9es, ou les diviser en morceaux plus petits qui seront utiles pour nous ou une application. Par exemple, le site web du International Booker Prize a une page de livres pr\u00e9s\u00e9lectionn\u00e9s pour chaque ann\u00e9e o\u00f9 le prix a \u00e9t\u00e9 d\u00e9cern\u00e9. Cependant, notre base de donn\u00e9es stocke tous les livres pr\u00e9s\u00e9lectionn\u00e9s dans une seule table. Pour cr\u00e9er le site web, ou \u00e0 d'autres fins, il pourrait \u00eatre utile d'avoir une table (ou vue) diff\u00e9rente de livres pour chaque ann\u00e9e.</li> <li>Cr\u00e9ons une vue pour stocker les livres pr\u00e9s\u00e9lectionn\u00e9s en 2022.</li> </ul> <pre><code>CREATE VIEW \"2022\" AS\nSELECT \"id\", \"title\" FROM \"books\"\nWHERE \"year\" = 2022;\n</code></pre> <pre><code>- Nous pouvons \u00e9galement voir les donn\u00e9es dans cette vue.\n</code></pre> <pre><code>SELECT * FROM \"2022\";\n</code></pre>"},{"location":"cours5/#questions_2","title":"Questions","text":"<p>Les vues peuvent-elles \u00eatre mises \u00e0 jour ?</p> <ul> <li>Non, car les vues ne contiennent pas de donn\u00e9es comme les tables. Les vues extraient en fait des donn\u00e9es des tables sous-jacentes chaque fois qu'elles sont interrog\u00e9es. Cela signifie que lorsqu'une table sous-jacente est mise \u00e0 jour, la prochaine fois que la vue est interrog\u00e9e, elle affichera les donn\u00e9es mises \u00e0 jour de la table !</li> </ul>"},{"location":"cours5/#securisation","title":"S\u00e9curisation","text":"<ul> <li>Les vues peuvent \u00eatre utilis\u00e9es pour am\u00e9liorer la s\u00e9curit\u00e9 de la base de donn\u00e9es en limitant l'acc\u00e8s \u00e0 certaines donn\u00e9es.</li> <li>Prenons l'exemple d'une base de donn\u00e9es d'une entreprise de covoiturage avec une table <code>rides</code> qui ressemble \u00e0 ce qui suit.</li> </ul> <p> - Si nous devions donner ces donn\u00e9es \u00e0 un analyste, dont le travail est de trouver les itin\u00e9raires de trajet les plus populaires, il serait inutile et en fait, non s\u00e9curis\u00e9 de lui donner les noms des passagers individuels. Les noms des passagers sont probablement class\u00e9s comme informations personnelles identifiables (PII) que les entreprises ne sont pas autoris\u00e9es \u00e0 partager sans discernement. - Les vues peuvent \u00eatre utiles dans cette situation \u2014 nous pouvons partager avec l'analyste une vue contenant l'origine et la destination des trajets, mais pas les noms des passagers. - Pour essayer cela, ouvrons <code>rideshare.db</code> dans notre terminal. L'ex\u00e9cution de <code>.schema</code> devrait r\u00e9v\u00e9ler une table appel\u00e9e <code>rides</code> dans cette base de donn\u00e9es. - Nous pouvons cr\u00e9er une vue avec les colonnes pertinentes, tout en omettant compl\u00e8tement la colonne <code>rider</code>. Mais nous irons un peu plus loin ici, et cr\u00e9erons une colonne <code>rider</code> pour afficher un passager anonyme pour chaque ligne du tableau. Cela indiquera \u00e0 l'analyste que bien que nous ayons des noms de passagers dans la base de donn\u00e9es, les noms ont \u00e9t\u00e9 anonymis\u00e9s pour des raisons de s\u00e9curit\u00e9.</p> <pre><code>CREATE VIEW \"analysis\" AS\nSELECT \"id\", \"origin\", \"destination\", 'Anonymous' AS \"rider\"\nFROM \"rides\";\n</code></pre> <pre><code>- Nous pouvons interroger cette vue pour nous assurer qu'elle est s\u00e9curis\u00e9e.\n</code></pre> <pre><code>SELECT * FROM \"analysis\";\n</code></pre> <ul> <li>Bien que nous puissions cr\u00e9er une vue qui anonymise les donn\u00e9es, SQLite ne permet pas le contr\u00f4le d'acc\u00e8s. Cela signifie que notre analyste pourrait simplement interroger la table <code>rides</code> d'origine et voir tous les noms de passagers que nous avons pris soin d'omettre dans la vue <code>analysis</code>.</li> </ul>"},{"location":"cours5/#suppressions-logiques-soft-deletions","title":"Suppressions Logiques (Soft Deletions)","text":"<ul> <li>Comme nous l'avons vu dans les semaines pr\u00e9c\u00e9dentes, une suppression logique implique de marquer une ligne comme supprim\u00e9e au lieu de la retirer de la table.</li> <li>Par exemple, une \u0153uvre d'art intitul\u00e9e \"Farmers working at dawn\" est marqu\u00e9e comme supprim\u00e9e de la table <code>collections</code> en changeant la valeur de la colonne <code>deleted</code> de 0 \u00e0 1.</li> </ul> <p> - Nous pouvons imaginer cr\u00e9er une vue pour afficher uniquement l'art qui n'est pas supprim\u00e9. - Pour essayer cela, ouvrons <code>mfa.db</code> dans notre terminal. La table <code>collections</code> n'a pas encore de colonne <code>deleted</code>, nous devons donc l'ajouter. La valeur par d\u00e9faut ici sera 0, pour indiquer que la ligne n'est pas supprim\u00e9e.</p> <pre><code>ALTER TABLE \"collections\"\nADD COLUMN \"deleted\" INTEGER DEFAULT 0;\n</code></pre> <ul> <li>Maintenant, effectuons une suppression logique sur l'\u0153uvre \"Farmers working at dawn\", en la mettant \u00e0 jour pour avoir 1 dans la colonne <code>deleted</code>.</li> </ul> <pre><code>UPDATE \"collections\"\nSET \"deleted\" = 1\nWHERE \"title\" = 'Farmers working at dawn';\n</code></pre> <ul> <li>Nous pouvons cr\u00e9er une vue pour afficher les informations sur les lignes qui ne sont pas supprim\u00e9es.</li> </ul> <pre><code>CREATE VIEW \"current_collections\" AS\nSELECT \"id\", \"title\", \"accession_number\", \"acquired\"\nFROM \"collections\"\nWHERE \"deleted\" = 0;\n</code></pre> <pre><code>- Nous pouvons afficher les donn\u00e9es dans cette vue pour v\u00e9rifier que \"Farmers working at dawn\" n'est pas pr\u00e9sent.\n</code></pre> <pre><code>SELECT * FROM \"current_collections\";\n</code></pre> <pre><code>- Lors de la suppression logique d'une ligne de la table sous-jacente `collections`, elle sera retir\u00e9e de la vue `current_collections` lors de toute interrogation ult\u00e9rieure.\n</code></pre> <ul> <li>Nous savons d\u00e9j\u00e0 qu'il n'est pas possible d'ins\u00e9rer des donn\u00e9es dans une vue ou de les supprimer d'une vue. Cependant, nous pouvons configurer un d\u00e9clencheur qui ins\u00e8re ou supprime de la table sous-jacente ! Le d\u00e9clencheur <code>INSTEAD OF</code> nous permet de le faire.</li> </ul> <pre><code>CREATE TRIGGER \"delete\"\nINSTEAD OF DELETE ON \"current_collections\"\nFOR EACH ROW\nBEGIN\n    UPDATE \"collections\" SET \"deleted\" = 1\n    WHERE \"id\" = OLD.\"id\";\nEND;\n</code></pre> <pre><code>- Chaque fois que nous essayons de supprimer des lignes de la vue, ce d\u00e9clencheur mettra \u00e0 jour la colonne `deleted` de la ligne dans la table sous-jacente `collections`, compl\u00e9tant ainsi la suppression logique.\n- Nous utilisons le mot-cl\u00e9 `OLD` dans notre clause de mise \u00e0 jour pour indiquer que l'ID de la ligne mise \u00e0 jour dans `collections` doit \u00eatre le m\u00eame que l'ID de la ligne que nous essayons de supprimer de `current_collections`.\n</code></pre> <ul> <li>Maintenant, nous pouvons supprimer une ligne de la vue <code>current_collections</code>.</li> </ul> <pre><code>DELETE FROM \"current_collections\"\nWHERE \"title\" = 'Imaginative landscape';\n</code></pre> <p>Nous pouvons v\u00e9rifier que cela a fonctionn\u00e9 en interrogeant la vue.</p> <pre><code>SELECT * FROM \"current_collections\";\n</code></pre> <ul> <li>De m\u00eame, nous pouvons cr\u00e9er un d\u00e9clencheur qui ins\u00e8re des donn\u00e9es dans la table sous-jacente lorsque nous essayons de les ins\u00e9rer dans une vue.</li> <li>Il y a deux situations \u00e0 consid\u00e9rer ici. Nous pourrions essayer d'ins\u00e9rer dans une vue une ligne qui existe d\u00e9j\u00e0 dans la table sous-jacente, mais qui a \u00e9t\u00e9 supprim\u00e9e logiquement. Nous pouvons \u00e9crire le d\u00e9clencheur suivant pour g\u00e9rer cette situation.</li> </ul> <pre><code>CREATE TRIGGER \"insert_when_exists\"\nINSTEAD OF INSERT ON \"current_collections\"\nFOR EACH ROW\nWHEN NEW.\"accession_number\" IN (\n    SELECT \"accession_number\" FROM \"collections\"\n)\nBEGIN\n    UPDATE \"collections\"\n    SET \"deleted\" = 0\n    WHERE \"accession_number\" = NEW.\"accession_number\";\nEND;\n</code></pre> <pre><code>- Le mot-cl\u00e9 `WHEN` est utilis\u00e9 pour v\u00e9rifier si le num\u00e9ro d'accession de l'\u0153uvre existe d\u00e9j\u00e0 dans la table `collections`. Cela fonctionne parce qu'un num\u00e9ro d'accession, comme nous le savons des semaines pr\u00e9c\u00e9dentes, identifie de mani\u00e8re unique chaque \u0153uvre d'art dans cette table.\n- Si l'\u0153uvre existe dans la table sous-jacente, nous d\u00e9finissons sa valeur `deleted` sur 0, indiquant une annulation de la suppression logique.\n</code></pre> <ul> <li>La deuxi\u00e8me situation se produit lorsque nous essayons d'ins\u00e9rer une ligne qui n'existe pas dans la table sous-jacente. Le d\u00e9clencheur suivant g\u00e8re cette situation.</li> </ul> <pre><code>CREATE TRIGGER \"insert_when_new\"\nINSTEAD OF INSERT ON \"current_collections\"\nFOR EACH ROW\nWHEN NEW.\"accession_number\" NOT IN (\n    SELECT \"accession_number\" FROM \"collections\"\n)\nBEGIN\n    INSERT INTO \"collections\" (\"title\", \"accession_number\", \"acquired\")\n    VALUES (NEW.\"title\", NEW.\"accession_number\", NEW.\"acquired\");\nEND;\n</code></pre> <pre><code>- Lorsque le num\u00e9ro d'accession des donn\u00e9es ins\u00e9r\u00e9es n'est pas d\u00e9j\u00e0 pr\u00e9sent dans `collections`, il ins\u00e8re la ligne dans la table.\n</code></pre>"},{"location":"cours5/bnb/instructions/","title":"Bed and Breakfast","text":"<p> \u201cA bed and breakfast in Boston, the style of a realistic photograph\u201d, generated by DALL\u00b7E 2</p>"},{"location":"cours5/bnb/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 r\u00e9soudre","text":"<p>Un Bed and Breakfast (\u201cBnB\u201d en abr\u00e9g\u00e9 !) est un lieu d'h\u00e9bergement \u00e0 court terme o\u00f9 l'on peut s\u00e9journer et payer le propri\u00e9taire pour le service, similaire \u00e0 un h\u00f4tel. Au cours des derni\u00e8res ann\u00e9es, AirBnB a permis \u00e0 presque tout le monde de louer son logement, qu'il s'agisse d'une maison, d'un cottage mignon ou m\u00eame d'une cabane dans les arbres.</p> <p>Vous \u00eates un analyste de donn\u00e9es pour la ville de Boston et vous vous int\u00e9ressez \u00e0 d\u00e9couvrir comment l'essor d'AirBnB a chang\u00e9 la sc\u00e8ne touristique locale. Vous avez m\u00eame compil\u00e9 une base de donn\u00e9es, <code>bnb.db</code>, remplie de donn\u00e9es directement issues d'AirBnB. Dans <code>bnb.db</code>, cr\u00e9ez quelques vues (views) qui donneront une image plus claire de l'influence d'AirBnB sur la ville de Boston.</p>"},{"location":"cours5/bnb/instructions/#demonstration","title":"D\u00e9monstration","text":"<pre><code>$ sqlite3 bnb.db                                                                                    \nsqlite&gt; SELECT \"property_type\", \"host_name\", \"bedrooms\"                                             \n   ...&gt; FROM \"listings\"                                                                             \n   ...&gt; LIMIT 10;\n.quit\n</code></pre>"},{"location":"cours5/bnb/instructions/#code-de-distribution","title":"Code de distribution","text":"<p>Pour ce probl\u00e8me, vous devrez t\u00e9l\u00e9charger <code>bnb.db</code>, ainsi que quelques fichiers <code>.sql</code> dans lesquels vous \u00e9crirez vos requ\u00eates (queries).</p>"},{"location":"cours5/bnb/instructions/#schema","title":"Sch\u00e9ma","text":"<pre><code>erDiagram\n    \"Listing\" ||--o{ \"Review\" : receives\n    \"Listing\" ||--|{ \"Availability\" : has\n</code></pre> <p>Dans <code>bnb.db</code>, vous trouverez trois tables qui impl\u00e9mentent les relations d\u00e9crites dans le diagramme ER ci-dessus. Cliquez sur les d\u00e9roulants ci-dessous pour en savoir plus sur le sch\u00e9ma de chaque table.</p> <p><code>listings</code> table</p> <p>La table <code>listings</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de l'annonce (listing).</li> <li><code>property_type</code>, qui est le type de l'annonce (par exemple, \u201cEntire rental unit\u201d, \u201cPrivate room in rental unit\u201d, etc.).</li> <li><code>host_name</code>, qui est le nom d'utilisateur AirBnB de l'h\u00f4te de l'annonce.</li> <li><code>accommodates</code>, qui est le nombre maximum d'occupants de l'annonce.</li> <li><code>bedrooms</code>, qui est le nombre de chambres de l'annonce.</li> <li><code>description</code>, qui est la description de l'annonce sur AirBnB.</li> </ul> <p><code>reviews</code> table</p> <p>La table <code>reviews</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de l'avis (review).</li> <li><code>listing_id</code>, qui est l'ID de l'annonce qui a re\u00e7u l'avis.</li> <li><code>date</code>, qui est la date de publication de l'avis.</li> <li><code>reviewer_name</code>, qui est le nom d'utilisateur AirBnB du r\u00e9viseur.</li> <li><code>comments</code>, qui est le contenu de l'avis.</li> </ul> <p><code>availabilities</code> table</p> <p>La table <code>availabilities</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de la disponibilit\u00e9 (availability).</li> <li><code>listing_id</code>, qui est l'ID de l'annonce associ\u00e9e \u00e0 la disponibilit\u00e9.</li> <li><code>date</code>, qui est la date de la disponibilit\u00e9.</li> <li><code>available</code>, qui indique si la date est toujours disponible \u00e0 la r\u00e9servation (<code>TRUE</code> ou <code>FALSE</code>).</li> <li><code>price</code>, qui est le prix du s\u00e9jour \u00e0 la date donn\u00e9e.</li> </ul>"},{"location":"cours5/bnb/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Dans chacun des fichiers <code>.sql</code> correspondants, \u00e9crivez une instruction SQL (SQL statement) pour cr\u00e9er chacune des vues (views) suivantes des donn\u00e9es dans <code>bnb.db</code>. Notez que, bien que les vues puissent \u00eatre cr\u00e9\u00e9es \u00e0 partir d'autres vues, chacune de vos vues doit \u00eatre autonome (c'est-\u00e0-dire ne pas d\u00e9pendre d'une vue ant\u00e9rieure).</p>"},{"location":"cours5/bnb/instructions/#no-descriptions","title":"No Descriptions","text":"<p>Vous remarquerez peut-\u00eatre qu'en ex\u00e9cutant</p> <pre><code>SELECT * FROM \"listings\" LIMIT 5;\n</code></pre> <p>les r\u00e9sultats semblent assez bizarres ! La colonne <code>description</code> contient des descriptions avec de nombreux sauts de ligne, chacun \u00e9tant imprim\u00e9 dans votre terminal.</p> <p>Dans <code>no_descriptions.sql</code>, \u00e9crivez une instruction SQL pour cr\u00e9er une vue nomm\u00e9e <code>no_descriptions</code> qui inclut toutes les colonnes de la table <code>listings</code> sauf <code>description</code>.</p>"},{"location":"cours5/bnb/instructions/#one-bedrooms","title":"One-Bedrooms","text":"<p>Dans <code>one_bedrooms.sql</code>, \u00e9crivez une instruction SQL pour cr\u00e9er une vue nomm\u00e9e <code>one_bedrooms</code>. Cette vue doit contenir toutes les annonces (listings) qui ont exactement une chambre. Assurez-vous que la vue contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'<code>id</code> de l'annonce de la table <code>listings</code>.</li> <li><code>property_type</code>, de la table <code>listings</code>.</li> <li><code>host_name</code>, de la table <code>listings</code>.</li> <li><code>accommodates</code>, de la table <code>listings</code>.</li> </ul>"},{"location":"cours5/bnb/instructions/#available","title":"Available","text":"<p>Dans <code>available.sql</code>, \u00e9crivez une instruction SQL pour cr\u00e9er une vue nomm\u00e9e <code>available</code>. Cette vue doit contenir toutes les dates disponibles pour toutes les annonces. Assurez-vous que la vue contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'<code>id</code> de l'annonce de la table <code>listings</code>.</li> <li><code>property_type</code>, de la table <code>listings</code>.</li> <li><code>host_name</code>, de la table <code>listings</code>.</li> <li><code>date</code>, de la table <code>availabilities</code>, qui est la date de la disponibilit\u00e9.</li> </ul>"},{"location":"cours5/bnb/instructions/#frequently-reviewed","title":"Frequently Reviewed","text":"<p>Dans <code>frequently_reviewed.sql</code>, \u00e9crivez une instruction SQL pour cr\u00e9er une vue nomm\u00e9e <code>frequently_reviewed</code>. Cette vue doit contenir les 100 annonces les plus fr\u00e9quemment comment\u00e9es, tri\u00e9es de la plus \u00e0 la moins fr\u00e9quemment comment\u00e9e. Assurez-vous que la vue contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'<code>id</code> de l'annonce de la table <code>listings</code>.</li> <li><code>property_type</code>, de la table <code>listings</code>.</li> <li><code>host_name</code>, de la table <code>listings</code>.</li> <li><code>reviews</code>, qui est le nombre d'avis que l'annonce a re\u00e7us.</li> </ul> <p>Si deux annonces ont le m\u00eame nombre d'avis, triez par <code>property_type</code> (par ordre alphab\u00e9tique), puis par <code>host_name</code> (par ordre alphab\u00e9tique).</p>"},{"location":"cours5/bnb/instructions/#june-vacancies","title":"June Vacancies","text":"<p>Dans <code>june_vacancies.sql</code>, \u00e9crivez une instruction SQL pour cr\u00e9er une vue nomm\u00e9e <code>june_vacancies</code>. Cette vue doit contenir toutes les annonces et le nombre de jours en juin 2023 o\u00f9 elles sont rest\u00e9es vacantes. Assurez-vous que la vue contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'<code>id</code> de l'annonce de la table <code>listings</code>.</li> <li><code>property_type</code>, de la table <code>listings</code>.</li> <li><code>host_name</code>, de la table <code>listings</code>.</li> <li><code>days_vacant</code>, qui est le nombre de jours en juin 2023 o\u00f9 l'annonce donn\u00e9e \u00e9tait marqu\u00e9e comme disponible.</li> </ul>"},{"location":"cours5/bnb/instructions/#utilisation","title":"Utilisation","text":"<p>Pour tester vos vues au fur et \u00e0 mesure que vous les \u00e9crivez dans vos fichiers <code>.sql</code>, vous pouvez ex\u00e9cuter une requ\u00eate (query) sur la base de donn\u00e9es en ex\u00e9cutant</p> <pre><code>.read FILENAME\n</code></pre> <p>o\u00f9 <code>FILENAME</code> est le nom du fichier contenant votre requ\u00eate SQL. Par exemple,</p> <pre><code>.read no_descriptions.sql\n</code></pre> <p>Gardez \u00e0 l'esprit que vous pouvez \u00e9galement utiliser</p> <pre><code>DROP VIEW name;\n</code></pre> <p>o\u00f9 <code>name</code> est le nom de votre vue, pour supprimer une vue avant de la recr\u00e9er.</p>"},{"location":"cours5/bnb/instructions/#comment-tester","title":"Comment tester","text":"<p>Bien que <code>check50</code> soit disponible pour ce probl\u00e8me, vous \u00eates encourag\u00e9 \u00e0 tester \u00e9galement votre code par vous-m\u00eame. Vous pouvez essayer des requ\u00eates comme celles ci-dessous :</p> <ul> <li>Combien y a-t-il d'annonces au total ? Utilisez votre vue <code>no_descriptions</code> pour trouver qu'il y en a 3 973.</li> <li>Combien y a-t-il d'annonces avec une chambre ? Et combien peuvent accueillir au moins 4 invit\u00e9s ? Utilisez votre vue <code>one_bedrooms</code> pour trouver que parmi les 1 228 annonces avec une chambre, 222 peuvent accueillir votre groupe de 4.</li> <li>Combien d'annonces sont disponibles pour le 31 d\u00e9cembre 2023 (c'est-\u00e0-dire \u201c2023-12-31\u201d) ? Utilisez votre vue <code>available</code> pour trouver qu'il y en a 2 251. Combien d'entre elles sont disponibles sur n'importe quel type de bateau ? Vous devriez trouver qu'il y en a 7. Bonne ann\u00e9e \u00e0 flot !</li> <li>Combien d'avis a la propri\u00e9t\u00e9 la plus fr\u00e9quemment comment\u00e9e ? Et qui est l'h\u00f4te de cette propri\u00e9t\u00e9 ? Utilisez votre vue <code>frequently_reviewed</code> pour trouver que la propri\u00e9t\u00e9 de Tiffany a 860 avis.</li> <li>Combien d'annonces \u00e9taient disponibles en juin 2023 ? Utilisez votre vue <code>june_vacancies</code> pour trouver qu'il y avait 1 895 vacances.</li> </ul>"},{"location":"cours5/census/instructions/","title":"Recenseur","text":"<p> \u00ab Les cha\u00eenes de montagnes de l'Himalaya dans le style d'une peinture n\u00e9palaise \u00bb, g\u00e9n\u00e9r\u00e9e par DALL\u00b7E 2</p>"},{"location":"cours5/census/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 r\u00e9soudre","text":"<p>Vous \u00eates un recenseur (census taker) travaillant pour le gouvernement n\u00e9palais. Alors que vous franchissez une derni\u00e8re colline, votre souffle se coupe \u00e0 la vue d'un lever de soleil himalayen, projetant une lueur sur le village que vous avez parcouru si loin pour atteindre. Votre guide, un local, s'arr\u00eate brusquement. Sous le bruissement constant de vos papiers de recensement (census papers), vous ressentez une d\u00e9mangeaison de curiosit\u00e9. Apr\u00e8s tout, ce n'est pas tous les jours que votre travail vous emm\u00e8ne dans un village comme celui-ci.</p> <p>Dans <code>census.db</code>, traitez vos donn\u00e9es en vues (views) que le gouvernement n\u00e9palais peut utiliser pour la tenue des dossiers.</p>"},{"location":"cours5/census/instructions/#demonstration","title":"D\u00e9monstration","text":"<pre><code>sqlite3 census.db\nSELECT district, locality, families FROM census;\n.quit       \n</code></pre>"},{"location":"cours5/census/instructions/#code-de-distribution","title":"Code de distribution","text":"<p>Pour ce probl\u00e8me, vous devrez t\u00e9l\u00e9charger <code>census.db</code>, ainsi que quelques fichiers <code>.sql</code> dans lesquels vous \u00e9crirez vos requ\u00eates (queries).</p>"},{"location":"cours5/census/instructions/#schema","title":"Sch\u00e9ma","text":"<p>Dans <code>census.db</code>, vous trouverez une seule table, <code>census</code>. Dans la table <code>census</code>, vous trouverez les colonnes suivantes :</p> <ul> <li><code>id</code>, qui identifie de mani\u00e8re unique chaque enregistrement de recensement (census record)</li> <li><code>district</code>, qui est le nom du district de l'enregistrement de recensement</li> <li><code>locality</code>, qui est le nom de la localit\u00e9 de l'enregistrement de recensement au sein du district</li> <li><code>families</code>, qui est le nombre de familles associ\u00e9es \u00e0 l'enregistrement de recensement</li> <li><code>households</code>, qui est le nombre total de m\u00e9nages associ\u00e9s \u00e0 l'enregistrement de recensement (plusieurs familles peuvent vivre dans le m\u00eame m\u00e9nage)</li> <li><code>population</code>, qui est la population associ\u00e9e \u00e0 l'enregistrement de recensement</li> <li><code>male</code>, qui est le nombre de personnes associ\u00e9es \u00e0 l'enregistrement de recensement qui se sont identifi\u00e9es comme \u00e9tant de sexe masculin</li> <li><code>female</code>, qui est le nombre de personnes associ\u00e9es \u00e0 l'enregistrement de recensement qui se sont identifi\u00e9es comme \u00e9tant de sexe f\u00e9minin</li> </ul>"},{"location":"cours5/census/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Dans chacun des fichiers <code>.sql</code> correspondants, \u00e9crivez une instruction SQL (SQL statement) pour cr\u00e9er chacune des vues (views) suivantes des donn\u00e9es dans <code>census.db</code>. Notez que, bien que les vues puissent \u00eatre cr\u00e9\u00e9es \u00e0 partir d'autres vues, chacune de vos vues doit \u00eatre autonome (c'est-\u00e0-dire ne pas d\u00e9pendre d'une vue ant\u00e9rieure).</p>"},{"location":"cours5/census/instructions/#rural","title":"Rural","text":"<p>Dans <code>rural.sql</code>, \u00e9crivez une instruction SQL pour cr\u00e9er une vue nomm\u00e9e <code>rural</code>. Cette vue doit contenir tous les enregistrements de recensement relatifs \u00e0 une municipalit\u00e9 rurale (identifi\u00e9e par l'inclusion de \u00ab rural \u00bb dans leur nom). Assurez-vous que la vue contient toutes les colonnes de la table <code>census</code>.</p>"},{"location":"cours5/census/instructions/#total","title":"Total","text":"<p>Dans <code>total.sql</code>, \u00e9crivez une instruction SQL pour cr\u00e9er une vue nomm\u00e9e <code>total</code>. Cette vue doit contenir les sommes pour chaque colonne num\u00e9rique dans <code>census</code>, \u00e0 travers tous les districts et localit\u00e9s. Assurez-vous que la vue contient chacune des colonnes suivantes :</p> <ul> <li><code>families</code>, qui est la somme des familles de chaque localit\u00e9 au N\u00e9pal.</li> <li><code>households</code>, qui est la somme des m\u00e9nages de chaque localit\u00e9 au N\u00e9pal.</li> <li><code>population</code>, qui est la somme de la population de chaque localit\u00e9 au N\u00e9pal.</li> <li><code>male</code>, qui est la somme des personnes s'identifiant comme \u00e9tant de sexe masculin de chaque localit\u00e9 au N\u00e9pal.</li> <li><code>female</code>, qui est la somme des personnes s'identifiant comme \u00e9tant de sexe f\u00e9minin de chaque localit\u00e9 au N\u00e9pal.</li> </ul>"},{"location":"cours5/census/instructions/#par-district","title":"Par District","text":"<p>Dans <code>by_district.sql</code>, \u00e9crivez une instruction SQL pour cr\u00e9er une vue nomm\u00e9e <code>by_district</code>. Cette vue doit contenir les sommes pour chaque colonne num\u00e9rique dans <code>census</code>, regroup\u00e9es par <code>district</code>. Assurez-vous que la vue contient chacune des colonnes suivantes :</p> <ul> <li><code>district</code>, qui est le nom du district.</li> <li><code>families</code>, qui est le nombre total de familles dans le district.</li> <li><code>households</code>, qui est le nombre total de m\u00e9nages dans le district.</li> <li><code>population</code>, qui est la population totale du district.</li> <li><code>male</code>, qui est le nombre total de personnes s'identifiant comme \u00e9tant de sexe masculin dans le district.</li> <li><code>female</code>, qui est le nombre total de personnes s'identifiant comme \u00e9tant de sexe f\u00e9minin dans le district.</li> </ul>"},{"location":"cours5/census/instructions/#le-plus-peuple","title":"Le plus peupl\u00e9","text":"<p>Dans <code>most_populated.sql</code>, \u00e9crivez une instruction SQL pour cr\u00e9er une vue nomm\u00e9e <code>most_populated</code>. Cette vue doit contenir, dans l'ordre du plus grand au plus petit, les districts les plus peupl\u00e9s du N\u00e9pal. Assurez-vous que la vue contient chacune des colonnes suivantes :</p> <ul> <li><code>district</code>, qui est le nom du district.</li> <li><code>families</code>, qui est le nombre total de familles dans le district.</li> <li><code>households</code>, qui est le nombre total de m\u00e9nages dans le district.</li> <li><code>population</code>, qui est la population totale du district.</li> <li><code>male</code>, qui est le nombre total de personnes s'identifiant comme \u00e9tant de sexe masculin dans le district.</li> <li><code>female</code>, qui est le nombre total de personnes s'identifiant comme \u00e9tant de sexe f\u00e9minin dans le district.</li> </ul>"},{"location":"cours5/census/instructions/#utilisation","title":"Utilisation","text":"<p>Pour tester vos vues au fur et \u00e0 mesure que vous les \u00e9crivez dans vos fichiers <code>.sql</code>, vous pouvez ex\u00e9cuter une requ\u00eate (query) sur la base de donn\u00e9es en ex\u00e9cutant</p> <pre><code>.read FILENAME\n</code></pre> <p>o\u00f9 <code>FILENAME</code> est le nom du fichier contenant votre requ\u00eate SQL. Par exemple,</p> <pre><code>.read rural.sql\n</code></pre> <p>Gardez \u00e0 l'esprit que vous pouvez \u00e9galement utiliser</p> <pre><code>DROP VIEW name;\n</code></pre> <p>o\u00f9 <code>name</code> est le nom de votre vue, pour supprimer une vue avant de la recr\u00e9er.</p>"},{"location":"cours5/private/instructions/","title":"The Private Eye","text":"<p> \u201cA detective\u2019s library in the style of an oil painting,\u201d generated by DALL\u00b7E 2</p>"},{"location":"cours5/private/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 r\u00e9soudre","text":"<p>Le d\u00e9bogueur de canard (duck debugger) de CS50 a encore disparu et vous avez d\u00e9sesp\u00e9r\u00e9ment besoin d'un d\u00e9tective. Vous avez entendu des histoires sur un d\u00e9tective qui vit en haut de la ville, toujours secret dans son travail, jamais vu sauf quand il le souhaite. Sans surprise, il s'est av\u00e9r\u00e9 \u00eatre assez insaisissable pour vous. Mais vous voil\u00e0, dans son \u00e9tude, apr\u00e8s avoir r\u00e9cup\u00e9r\u00e9 son adresse aupr\u00e8s d'un certain employ\u00e9 de la poste.</p> <p>Sur son bureau en acajou, du papier blanc frais scintille. Inscrit, vous trouvez le tableau suivant :</p> 14 98 4 114 3 5 618 72 9 630 7 3 932 12 5 2230 50 7 2346 44 10 3041 14 5 <p>Et gliss\u00e9 en dessous, un livre us\u00e9, Les Aventures de Sherlock Holmes.</p>"},{"location":"cours5/private/instructions/#code-de-distribution","title":"Code de distribution","text":"<p>Pour ce probl\u00e8me, vous devrez t\u00e9l\u00e9charger <code>private.db</code> et <code>private.sql</code>.</p>"},{"location":"cours5/private/instructions/#contexte","title":"Contexte","text":"<p>\u00c9tant donn\u00e9 la proximit\u00e9 du papier avec Les Aventures de Sherlock Holmes, ce qui est \u00e9crit sur celui-ci semble \u00eatre une variation d'un chiffre de livre (book cipher). Vous savez que dans une version d'un chiffre de livre, le cr\u00e9ateur du chiffre vous donne une liste de \u201ctriplets\u201d (c'est-\u00e0-dire un ensemble de trois nombres). Chaque triplet est structur\u00e9 comme suit :</p> <ul> <li>Le premier nombre du triplet est le num\u00e9ro de la phrase r\u00e9f\u00e9renc\u00e9e par l'encodeur.</li> <li>Le deuxi\u00e8me nombre du triplet est le num\u00e9ro du caract\u00e8re, dans cette phrase, o\u00f9 le message commence.</li> <li>Le troisi\u00e8me nombre du triplet est la longueur du message en caract\u00e8res (c'est-\u00e0-dire combien de caract\u00e8res lire \u00e0 partir du premier, y compris les espaces et la ponctuation).</li> </ul> <p>Par exemple, consid\u00e9rez le triplet 2, 1, 8 \u00e0 la lumi\u00e8re des phrases suivantes :</p> <p>Quite so! You have not observed. And yet you have seen.</p> <p>2 fait r\u00e9f\u00e9rence \u00e0 la 2\u00e8me phrase, \u201cYou have not observed.\u201d 1 fait r\u00e9f\u00e9rence au 1er caract\u00e8re de cette phrase, \u201cY.\u201d Et 8 fait r\u00e9f\u00e9rence \u00e0 la longueur du message \u00e0 partir de ce premier caract\u00e8re. En commen\u00e7ant par le 1er caract\u00e8re de la 2\u00e8me phrase, en lisant 8 caract\u00e8res (y compris les espaces !) vous obtenez :</p> <p>You have</p> <p>Vous pouvez imaginer, maintenant, encha\u00eener plusieurs tuples pour encoder un message plus long. Peut-\u00eatre que c'est exactement ce que le d\u00e9tective a fait !</p>"},{"location":"cours5/private/instructions/#schema","title":"Sch\u00e9ma","text":"<p>Dans <code>private.db</code>, vous trouverez une table, <code>sentences</code>. La table <code>sentences</code> contient toutes les phrases des Aventures de Sherlock Holmes. En particulier, elle contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de la phrase</li> <li><code>sentence</code>, qui est la phrase elle-m\u00eame</li> </ul>"},{"location":"cours5/private/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Votre t\u00e2che est de d\u00e9coder le chiffre laiss\u00e9 pour vous par le d\u00e9tective. La mani\u00e8re dont vous le faites d\u00e9pend de vous, mais vous devez vous assurer que\u2014\u00e0 la fin de votre processus\u2014vous avez une vue (view) structur\u00e9e comme suit :</p> <ul> <li>La vue doit \u00eatre nomm\u00e9e <code>message</code></li> <li>La vue doit avoir une seule colonne, <code>phrase</code></li> <li>Lorsque la requ\u00eate SQL (SQL query) suivante est ex\u00e9cut\u00e9e sur <code>private.db</code>, votre vue doit renvoyer une seule colonne dans laquelle chaque ligne est une phrase du message.</li> </ul> <pre><code>SELECT \"phrase\" FROM \"message\";\n</code></pre> <p>Dans <code>private.sql</code>, vous devez \u00e9crire toutes les instructions SQL (SQL statements) n\u00e9cessaires pour reproduire votre cr\u00e9ation de la vue. C'est-\u00e0-dire :</p> <ul> <li>Si la cr\u00e9ation de la vue n\u00e9cessite la cr\u00e9ation d'une table s\u00e9par\u00e9e et l'insertion de donn\u00e9es dans celle-ci, vous devez vous assurer que <code>private.sql</code> contient les instructions pour cr\u00e9er cette table et ins\u00e9rer ces donn\u00e9es. (N'ayez pas peur d'ajouter des tables et d'ajouter des donn\u00e9es comme vous le souhaitez !)</li> <li><code>private.sql</code>, lorsqu'il est ex\u00e9cut\u00e9 sur une nouvelle instance de <code>private.db</code>, doit \u00eatre capable de reconstruire enti\u00e8rement votre vue.</li> </ul>"},{"location":"cours5/private/instructions/#conseil","title":"Conseil","text":"<p>Il s'av\u00e8re que SQLite est \u00e9quip\u00e9 d'une fonction qui impl\u00e9mente exactement la fonctionnalit\u00e9 du chiffre de livre : <code>substr</code>. La fonction <code>substr</code> prend trois entr\u00e9es (\u201carguments\u201d) :</p> <ul> <li>Une cha\u00eene (c'est-\u00e0-dire du texte) \u00e0 partir de laquelle prendre une sous-cha\u00eene (c'est-\u00e0-dire un sous-ensemble des caract\u00e8res de la cha\u00eene)</li> <li>Le caract\u00e8re de d\u00e9but de la sous-cha\u00eene, identifi\u00e9 par son num\u00e9ro (le premier caract\u00e8re est 1)</li> <li>La longueur de la sous-cha\u00eene</li> </ul> <p>Par exemple, supposons que vous ayez une table appel\u00e9e <code>sentences</code> qui inclut ce qui suit :</p> ID sentence 1 Quite so! 2 You have not observed. 3 And yet you have seen. <p>Si vous ex\u00e9cutez la requ\u00eate SQL suivante\u2026</p> <pre><code>SELECT substr(\"sentence\", 1, 2)\nFROM \"sentences\";\n</code></pre> <p>vous recevrez les r\u00e9sultats suivants :</p> ID Substring (1, 2) 1 Qu 2 Yo 3 An <p>Gardez \u00e0 l'esprit que les autres arguments de <code>substr</code> peuvent \u00e9galement \u00eatre des colonnes enti\u00e8res !</p>"},{"location":"cours6/","title":"Introduction","text":""},{"location":"cours6/#cours-5","title":"Cours 5","text":"<p>Vid\u00e9o en anglais - Introduction - Index - Index sur plusieurs tables - Compromis espace - Compromis temps - Index partiel - Vacuum - Concurrence   - Transactions   - Conditions de course - Fin</p>"},{"location":"cours6/#introduction","title":"Introduction","text":"<ul> <li>Cette semaine, nous allons apprendre \u00e0 optimiser nos requ\u00eates SQL, \u00e0 la fois en termes de temps et d'espace. Nous apprendrons \u00e9galement \u00e0 ex\u00e9cuter des requ\u00eates simultan\u00e9ment.</li> <li>Nous ferons tout cela dans le contexte d'une nouvelle base de donn\u00e9es \u2014 la base de donn\u00e9es Internet Movies Database, ou IMDb comme elle est plus commun\u00e9ment connue. Notre base de donn\u00e9es SQLite est compil\u00e9e \u00e0 partir de la grande base de donn\u00e9es en ligne de films que vous avez peut-\u00eatre d\u00e9j\u00e0 vue sur imdb.com.</li> <li>Jetez un \u0153il \u00e0 ces statistiques pour vous faire une id\u00e9e de la taille de cette base de donn\u00e9es ! Elle contient beaucoup plus de donn\u00e9es que toutes les autres bases de donn\u00e9es avec lesquelles nous avons travaill\u00e9 jusqu'\u00e0 pr\u00e9sent.</li> </ul> <ul> <li>Voici le diagramme ER d\u00e9taillant les entit\u00e9s et leurs relations.</li> </ul> <pre><code>erDiagram\n\nACTEURS {\n  INTEGER id\n  TEXT nom\n  NUMERIC date_de_naissance\n}\n\nFILMS {\n  INTEGER id\n  TEXT titre\n  NUMERIC annee\n}\n\nNOTES {\n  INTEGER id\n  REAL note\n  INTEGER votes\n}\n\nACTEURS ||--o{FILMS : jouent\nFILMS ||--o{NOTES : ont\n\n</code></pre>"},{"location":"cours6/#index","title":"Index","text":"<ul> <li>Ouvrons cette base de donn\u00e9es appel\u00e9e <code>movies.db</code> dans SQLite.</li> <li><code>.schema</code> nous montre les tables cr\u00e9\u00e9es dans cette base de donn\u00e9es. Pour impl\u00e9menter la relation plusieurs-\u00e0-plusieurs entre les entit\u00e9s Person et Movie du diagramme ER, nous avons ici une table jointe appel\u00e9e <code>stars</code> qui r\u00e9f\u00e9rence les colonnes ID des deux tables <code>people</code> et <code>movies</code> en tant que colonnes de cl\u00e9 \u00e9trang\u00e8re !</li> <li>Pour jeter un \u0153il \u00e0 la table <code>movies</code>, nous pouvons s\u00e9lectionner dans la table et limiter les r\u00e9sultats.</li> </ul> <pre><code>SELECT * FROM \"movies\" LIMIT 5;\n</code></pre> <ul> <li>Pour trouver les informations concernant le film Cars, nous ex\u00e9cuterions la requ\u00eate suivante.</li> </ul> <pre><code>SELECT * FROM \"movies\"\nWHERE \"title\" = 'Cars';\n</code></pre> <ul> <li>Supposons que nous voulons savoir combien de temps il a fallu pour ex\u00e9cuter cette requ\u00eate. SQLite dispose d'une commande <code>.timer on</code> qui nous permet de chronom\u00e9trer nos requ\u00eates.</li> <li>En ex\u00e9cutant \u00e0 nouveau la requ\u00eate ci-dessus pour trouver Cars, nous pouvons voir trois mesures de temps diff\u00e9rentes affich\u00e9es avec les r\u00e9sultats.</li> <li>Le temps \"r\u00e9el\" indique le temps du chronom\u00e8tre, ou le temps entre l'ex\u00e9cution de la requ\u00eate et l'obtention des r\u00e9sultats. C'est la mesure de temps sur laquelle nous allons nous concentrer. Le temps n\u00e9cessaire pour ex\u00e9cuter cette requ\u00eate pendant le cours \u00e9tait d'environ un dixi\u00e8me de seconde !</li> <li>Sous le capot, lorsque la requ\u00eate pour trouver Cars a \u00e9t\u00e9 ex\u00e9cut\u00e9e, nous avons d\u00e9clench\u00e9 un scan de la table <code>movies</code> \u2014 c'est-\u00e0-dire que la table <code>movies</code> a \u00e9t\u00e9 scann\u00e9e de haut en bas, ligne par ligne, pour trouver toutes les lignes avec le titre Cars.</li> <li>Nous pouvons optimiser cette requ\u00eate pour qu'elle soit plus efficace qu'un scan. De la m\u00eame mani\u00e8re que les manuels scolaires ont souvent un index, les tables de bases de donn\u00e9es peuvent \u00e9galement avoir un index. Un index, en termes de bases de donn\u00e9es, est une structure utilis\u00e9e pour acc\u00e9l\u00e9rer la r\u00e9cup\u00e9ration des lignes d'une table.</li> <li>Nous pouvons utiliser la commande suivante pour cr\u00e9er un index pour la colonne <code>\"title\"</code> dans la table <code>movies</code>.</li> </ul> <pre><code>CREATE INDEX \"title_index\" ON \"movies\" (\"title\");\n</code></pre> <ul> <li>Apr\u00e8s avoir cr\u00e9\u00e9 cet index, nous ex\u00e9cutons \u00e0 nouveau la requ\u00eate pour trouver le film intitul\u00e9 Cars. Lors de cette ex\u00e9cution, le temps n\u00e9cessaire est consid\u00e9rablement plus court (pendant le cours, presque huit fois plus rapide que la premi\u00e8re ex\u00e9cution) !</li> <li>Dans l'exemple pr\u00e9c\u00e9dent, une fois l'index cr\u00e9\u00e9, nous avons simplement suppos\u00e9 que SQL l'utiliserait pour trouver un film. Cependant, nous pouvons \u00e9galement le voir explicitement en utilisant une commande SQLite <code>EXPLAIN QUERY PLAN</code> avant toute requ\u00eate.</li> <li>Pour supprimer l'index que nous venons de cr\u00e9er, ex\u00e9cutez :</li> </ul> <pre><code>DROP INDEX \"title_index\";\n</code></pre> <ul> <li>Apr\u00e8s avoir supprim\u00e9 l'index, l'ex\u00e9cution \u00e0 nouveau de <code>EXPLAIN QUERY PLAN</code> avec la requ\u00eate <code>SELECT</code> d\u00e9montrera que le plan reviendrait \u00e0 scanner toute la base de donn\u00e9es.</li> </ul>"},{"location":"cours6/#questions","title":"Questions","text":"<p>Les bases de donn\u00e9es n'ont-elles pas des algorithmes implicites pour optimiser la recherche ?</p> <ul> <li>Elles en ont, pour certaines colonnes. Dans SQLite et la plupart des autres syst\u00e8mes de gestion de bases de donn\u00e9es, si nous sp\u00e9cifions qu'une colonne est une cl\u00e9 primaire, un index sera automatiquement cr\u00e9\u00e9 via lequel nous pouvons rechercher la cl\u00e9 primaire. Cependant, pour les colonnes r\u00e9guli\u00e8res comme <code>\"title\"</code>, il n'y aurait pas d'optimisation automatique.</li> </ul> <p>Serait-il judicieux de cr\u00e9er un index diff\u00e9rent pour chaque colonne au cas o\u00f9 nous en aurions besoin ?</p> <ul> <li>Bien que cela semble utile, il y a des compromis en termes d'espace et du temps n\u00e9cessaire pour ins\u00e9rer ult\u00e9rieurement des donn\u00e9es dans des tables avec un index. Nous verrons cela plus en d\u00e9tail bient\u00f4t !</li> </ul>"},{"location":"cours6/#index-sur-plusieurs-tables","title":"Index sur plusieurs tables","text":"<ul> <li>Nous ex\u00e9cuterions la requ\u00eate suivante pour trouver tous les films dans lesquels Tom Hanks a jou\u00e9.</li> </ul> <pre><code>SELECT \"title\" FROM \"movies\"\nWHERE \"id\" IN (\n    SELECT \"movie_id\" FROM \"stars\"\n    WHERE \"person_id\" = (\n        SELECT \"id\" FROM \"people\"\n        WHERE \"name\" = 'Tom Hanks'\n    )\n);\n</code></pre> <ul> <li>Pour comprendre quel type d'index pourrait aider \u00e0 acc\u00e9l\u00e9rer cette requ\u00eate, nous pouvons ex\u00e9cuter <code>EXPLAIN QUERY PLAN</code> avant cette requ\u00eate \u00e0 nouveau. Cela nous montre que la requ\u00eate n\u00e9cessite deux scans \u2014 de <code>people</code> et <code>stars</code>. La table <code>movies</code> n'est pas scann\u00e9e car nous recherchons <code>movies</code> par son ID, pour lequel un index est automatiquement cr\u00e9\u00e9 par SQLite !</li> <li>Cr\u00e9ons les deux index pour acc\u00e9l\u00e9rer cette requ\u00eate.</li> </ul> <pre><code>CREATE INDEX \"person_index\" ON \"stars\" (\"person_id\");\nCREATE INDEX \"name_index\" ON \"people\" (\"name\");\n</code></pre> <ul> <li>Maintenant, nous ex\u00e9cutons <code>EXPLAIN QUERY PLAN</code> avec la m\u00eame requ\u00eate imbriqu\u00e9e. Nous pouvons observer que :</li> <li>tous les scans sont maintenant des recherches utilisant des index, ce qui est g\u00e9nial !</li> <li>la recherche sur la table <code>people</code> utilise quelque chose appel\u00e9 un <code>COVERING INDEX</code>.</li> <li>Un index couvrant signifie que toutes les informations n\u00e9cessaires pour la requ\u00eate peuvent \u00eatre trouv\u00e9es dans l'index lui-m\u00eame. Au lieu de deux \u00e9tapes :</li> <li>rechercher les informations pertinentes dans l'index,</li> <li>utiliser l'index pour rechercher ensuite dans la table, un index couvrant signifie que nous effectuons notre recherche en une seule \u00e9tape (juste la premi\u00e8re).</li> <li>Pour que notre recherche sur la table <code>stars</code> utilise \u00e9galement un index couvrant, nous pouvons ajouter <code>\"movie_id\"</code> \u00e0 l'index que nous avons cr\u00e9\u00e9 pour <code>stars</code>. Cela garantira que les informations recherch\u00e9es (movie ID) et la valeur recherch\u00e9e (person ID) soient toutes deux dans l'index.</li> <li>Tout d'abord, supprimons l'impl\u00e9mentation existante de notre index sur la table <code>stars</code>.</li> </ul> <pre><code>DROP INDEX \"person_index\";\n</code></pre> <ul> <li>Ensuite, nous cr\u00e9ons le nouvel index.</li> </ul> <pre><code>CREATE INDEX \"person_index\" ON \"stars\" (\"person_id\", \"movie_id\");\n</code></pre> <ul> <li>L'ex\u00e9cution de ce qui suit d\u00e9montrera que nous avons maintenant deux index couvrants, ce qui devrait r\u00e9sulter en une recherche beaucoup plus rapide !</li> </ul> <pre><code>EXPLAIN QUERY PLAN\nSELECT \"title\" FROM \"movies\" WHERE \"id\" IN (\n    SELECT \"movie_id\" FROM \"stars\" WHERE \"person_id\" = (\n        SELECT \"id\" FROM \"people\" WHERE \"name\" = 'Tom Hanks'\n    )\n);\n</code></pre> <ul> <li>En nous assurant que nous avons ex\u00e9cut\u00e9 <code>.timer on</code>, ex\u00e9cutons la requ\u00eate ci-dessus pour trouver tous les films dans lesquels Tom Hanks a jou\u00e9, et observons le temps qu'il faut pour l'ex\u00e9cuter. La requ\u00eate s'ex\u00e9cute maintenant beaucoup plus rapidement qu'elle ne le faisait sans index (dans le cours, un ordre de grandeur plus rapide) !</li> </ul>"},{"location":"cours6/#compromis-espace","title":"Compromis espace","text":"<ul> <li>Les index semblent incroyablement utiles, mais il y a des compromis associ\u00e9s \u2014 ils occupent un espace suppl\u00e9mentaire dans la base de donn\u00e9es, donc m\u00eame si nous gagnons en vitesse de requ\u00eate, nous perdons en espace.</li> <li>Un index est stock\u00e9 dans une base de donn\u00e9es sous la forme d'une structure de donn\u00e9es appel\u00e9e B-Tree, ou arbre \u00e9quilibr\u00e9. Une structure de donn\u00e9es d'arbre ressemble \u00e0 ceci :</li> </ul> <ul> <li>Remarquez que l'arbre a de nombreux n\u0153uds, chacun connect\u00e9 \u00e0 quelques autres par des fl\u00e8ches. Le n\u0153ud racine, ou le n\u0153ud \u00e0 partir duquel l'arbre prend son origine, a trois enfants. Certains n\u0153uds \u00e0 la p\u00e9riph\u00e9rie de l'arbre ne pointent vers aucun autre n\u0153ud. Ceux-ci sont appel\u00e9s n\u0153uds feuilles.</li> <li>Consid\u00e9rons comment un index est cr\u00e9\u00e9 pour la colonne <code>\"title\"</code> de la table <code>movies</code>. Si les titres des films \u00e9taient tri\u00e9s par ordre alphab\u00e9tique, il serait beaucoup plus facile de trouver un film particulier en utilisant une recherche binaire.</li> <li>Dans ce cas, une copie est faite de la colonne <code>\"titles\"</code>. Cette copie est tri\u00e9e puis li\u00e9e \u00e0 nouveau aux lignes d'origine dans la table <code>movies</code> en pointant vers les ID des films. Cela est visualis\u00e9 ci-dessous.</li> </ul> <ul> <li>Bien que cela nous aide \u00e0 visualiser facilement l'index pour cette colonne, en r\u00e9alit\u00e9, l'index n'est pas une seule colonne mais est divis\u00e9 en de nombreux n\u0153uds. C'est parce que si la base de donn\u00e9es contient beaucoup de donn\u00e9es, comme notre exemple IMDb, stocker une colonne enti\u00e8re ensemble en m\u00e9moire pourrait ne pas \u00eatre faisable.</li> <li>Si nous avons plusieurs n\u0153uds contenant des sections de l'index, nous avons \u00e9galement besoin de n\u0153uds pour naviguer vers les bonnes sections. Par exemple, consid\u00e9rez les n\u0153uds suivants. Le n\u0153ud de gauche nous dirige vers la bonne section de l'index en fonction du fait que le titre du film vient avant Frozen, entre Frozen et Soul, ou apr\u00e8s Soul par ordre alphab\u00e9tique !</li> </ul> <ul> <li>La repr\u00e9sentation ci-dessus est un B-tree ! C'est ainsi que les index sont stock\u00e9s dans SQLite.</li> </ul>"},{"location":"cours6/#compromis-temps","title":"Compromis temps","text":"<ul> <li>De mani\u00e8re similaire au compromis espace dont nous avons discut\u00e9 pr\u00e9c\u00e9demment, il faut \u00e9galement plus de temps pour ins\u00e9rer des donn\u00e9es dans une colonne et ensuite les ajouter \u00e0 un index. Chaque fois qu'une valeur est ajout\u00e9e \u00e0 l'index, le B-tree doit \u00eatre parcouru pour d\u00e9terminer o\u00f9 la valeur doit \u00eatre ajout\u00e9e !</li> </ul>"},{"location":"cours6/#index-partiel","title":"Index partiel","text":"<ul> <li>Il s'agit d'un index qui n'inclut qu'un sous-ensemble de lignes d'une table, nous permettant d'\u00e9conomiser un peu de l'espace qu'un index complet occuperait.</li> <li>Cela est particuli\u00e8rement utile lorsque nous savons que les utilisateurs n'interrogent qu'un sous-ensemble de lignes de la table. Dans le cas d'IMDb, il se peut que les utilisateurs soient plus susceptibles d'interroger un film qui vient de sortir plut\u00f4t qu'un film vieux de 15 ans. Essayons de cr\u00e9er un index partiel qui stocke les titres des films sortis en 2023.</li> </ul> <pre><code>CREATE INDEX \"recents\" ON \"movies\" (\"titles\")\nWHERE \"year\" = 2023;\n</code></pre> <ul> <li>Nous pouvons v\u00e9rifier que la recherche de films sortis en 2023 utilise le nouvel index.</li> </ul> <pre><code>EXPLAIN QUERY PLAN\nSELECT \"title\" FROM \"movies\"\nWHERE \"year\" = 2023;\n</code></pre> <p>Cela nous montre que la table <code>movies</code> est scann\u00e9e en utilisant l'index partiel.</p>"},{"location":"cours6/#questions_1","title":"Questions","text":"<p>Les index sont-ils sauvegard\u00e9s dans le sch\u00e9ma ?</p> <ul> <li>Oui, dans SQLite, ils le sont ! Nous pouvons le confirmer en ex\u00e9cutant <code>.schema</code> et nous verrons les index cr\u00e9\u00e9s list\u00e9s dans le sch\u00e9ma de la base de donn\u00e9es.</li> </ul>"},{"location":"cours6/#vacuum","title":"Vacuum","text":"<ul> <li>Il existe des moyens de supprimer l'espace inutilis\u00e9 dans notre base de donn\u00e9es. SQLite nous permet de \"vacuumiser\" les donn\u00e9es \u2014 cela nettoie les donn\u00e9es pr\u00e9c\u00e9demment supprim\u00e9es (qui ne sont en fait pas supprim\u00e9es, mais simplement marqu\u00e9es comme espace disponible pour la prochaine <code>INSERT</code>).</li> <li>Pour trouver la taille de <code>movies.db</code> sur le terminal, nous pouvons utiliser une commande Unix</li> </ul> <pre><code>du -b movies.db\n</code></pre> <ul> <li>Dans le cours, cette commande nous a montr\u00e9 que la taille de la base de donn\u00e9es est d'environ 158 millions d'octets, soit 158 m\u00e9gaoctets.</li> <li>Nous pouvons maintenant nous connecter \u00e0 notre base de donn\u00e9es et supprimer un index que nous avions pr\u00e9c\u00e9demment cr\u00e9\u00e9.</li> </ul> <pre><code>DROP INDEX \"person_index\";\n</code></pre> <ul> <li>Maintenant, si nous ex\u00e9cutons \u00e0 nouveau la commande Unix, nous constatons que la taille de la base de donn\u00e9es n'a pas diminu\u00e9 ! Pour r\u00e9ellement nettoyer l'espace supprim\u00e9, nous devons le vacuumiser. Nous pouvons ex\u00e9cuter la commande suivante dans SQLite.</li> </ul> <pre><code>VACUUM;\n</code></pre> <p>Cela peut prendre une seconde ou deux pour s'ex\u00e9cuter. En ex\u00e9cutant \u00e0 nouveau la commande Unix pour v\u00e9rifier la taille de la base de donn\u00e9es, nous devrions voir une taille plus petite. Une fois que nous avons supprim\u00e9 tous les index et vacuumis\u00e9 \u00e0 nouveau, la base de donn\u00e9es sera consid\u00e9rablement plus petite que 158 Mo (dans le cours, environ 100 Mo).</p>"},{"location":"cours6/#questions_2","title":"Questions","text":"<p>Est-il possible de vacuumiser plus rapidement ?</p> <ul> <li>Chaque vacuumisation peut prendre une quantit\u00e9 de temps diff\u00e9rente, en fonction de la quantit\u00e9 d'espace que nous essayons de vacuumiser et de la facilit\u00e9 avec laquelle nous pouvons trouver les bits et les octets qui doivent \u00eatre lib\u00e9r\u00e9s !</li> </ul> <p>Si une requ\u00eate pour supprimer certaines lignes ne les supprime pas r\u00e9ellement, mais les marque seulement comme supprim\u00e9es, pourrions-nous toujours r\u00e9cup\u00e9rer ces lignes ?</p> <ul> <li>Les personnes form\u00e9es \u00e0 la m\u00e9decine l\u00e9gale sont capables de trouver des donn\u00e9es que nous pensons supprim\u00e9es mais qui sont en fait toujours sur nos ordinateurs. Dans le cas de SQLite, apr\u00e8s avoir effectu\u00e9 un vacuum, il ne serait plus possible de retrouver les lignes supprim\u00e9es.</li> </ul>"},{"location":"cours6/#concurrence","title":"Concurrence","text":"<ul> <li>Jusqu'\u00e0 pr\u00e9sent, nous avons vu comment optimiser des requ\u00eates individuelles. Maintenant, nous allons voir comment permettre non seulement une requ\u00eate, mais plusieurs \u00e0 la fois.</li> <li>La concurrence est la gestion simultan\u00e9e de plusieurs requ\u00eates ou interactions par la base de donn\u00e9es. Imaginez une base de donn\u00e9es pour un site web, ou un service financier, qui re\u00e7oit beaucoup de trafic en m\u00eame temps. La concurrence est particuli\u00e8rement importante dans ces cas.</li> <li>Certaines transactions de base de donn\u00e9es peuvent \u00eatre multipartites. Par exemple, consid\u00e9rons la base de donn\u00e9es d'une banque. Voici une vue de la table <code>accounts</code> qui stocke les soldes des comptes.</li> </ul> <ul> <li>Une transaction pourrait consister \u00e0 envoyer de l'argent d'un compte \u00e0 un autre. Par exemple, Alice essaie d'envoyer 10 $ \u00e0 Bob.</li> <li>Pour compl\u00e9ter cette transaction, nous devrions ajouter 10 $ au compte de Bob et \u00e9galement soustraire 10 $ du compte d'Alice. Si quelqu'un voit l'\u00e9tat de la base de donn\u00e9es <code>accounts</code> apr\u00e8s la premi\u00e8re mise \u00e0 jour du compte de Bob mais avant la deuxi\u00e8me mise \u00e0 jour du compte d'Alice, il pourrait obtenir une compr\u00e9hension incorrecte du montant total d'argent d\u00e9tenu par la banque.</li> </ul>"},{"location":"cours6/#transactions","title":"Transactions","text":"<ul> <li>Pour un observateur ext\u00e9rieur, il devrait sembler que les diff\u00e9rentes parties d'une transaction se produisent toutes en m\u00eame temps. En termes de bases de donn\u00e9es, une transaction est une unit\u00e9 individuelle de travail \u2014 quelque chose qui ne peut pas \u00eatre d\u00e9compos\u00e9 en morceaux plus petits.</li> <li>Les transactions ont certaines propri\u00e9t\u00e9s, qui peuvent \u00eatre rappel\u00e9es en utilisant l'acronyme ACID :</li> <li>atomicit\u00e9 : ne peut pas \u00eatre d\u00e9compos\u00e9e en morceaux plus petits,</li> <li>coh\u00e9rence : ne doit pas violer une contrainte de base de donn\u00e9es,</li> <li>isolation : si plusieurs utilisateurs acc\u00e8dent \u00e0 une base de donn\u00e9es, leurs transactions ne peuvent pas interf\u00e9rer les unes avec les autres,</li> <li>durabilit\u00e9 : en cas de d\u00e9faillance dans la base de donn\u00e9es, toutes les donn\u00e9es modifi\u00e9es par les transactions resteront.</li> <li>Ouvrons <code>bank.db</code> dans notre terminal afin que nous puissions impl\u00e9menter une transaction pour transf\u00e9rer de l'argent d'Alice \u00e0 Bob !</li> <li>Tout d'abord, nous voulons voir les donn\u00e9es d\u00e9j\u00e0 pr\u00e9sentes dans la table <code>accounts</code>.</li> </ul> <pre><code>SELECT * FROM \"accounts\";\n</code></pre> <p>Nous notons ici que l'ID de Bob est 2 et celui d'Alice est 1, ce qui sera utile pour notre requ\u00eate. - Pour transf\u00e9rer 10 $ du compte d'Alice \u00e0 celui de Bob, nous pouvons \u00e9crire la transaction suivante.</p> <pre><code>BEGIN TRANSACTION;\nUPDATE \"accounts\" SET \"balance\" = \"balance\" + 10 WHERE \"id\" = 2;\nUPDATE \"accounts\" SET \"balance\" = \"balance\" - 10 WHERE \"id\" = 1;\nCOMMIT;\n</code></pre> <p>Remarquez que les instructions <code>UPDATE</code> sont \u00e9crites entre les commandes pour commencer la transaction et la valider. Si nous ex\u00e9cutons la requ\u00eate apr\u00e8s avoir \u00e9crit les instructions <code>UPDATE</code>, mais sans les valider, aucune des deux instructions <code>UPDATE</code> ne sera ex\u00e9cut\u00e9e ! Cela aide \u00e0 garder la transaction atomique. En mettant \u00e0 jour notre table de cette mani\u00e8re, nous ne pouvons pas voir les \u00e9tapes interm\u00e9diaires. - Si nous essayions d'ex\u00e9cuter \u00e0 nouveau la transaction ci-dessus \u2014 Alice essaie de payer Bob encore 10 $ \u2014 elle devrait \u00e9chouer car le solde du compte d'Alice est \u00e0 0. (La colonne <code>\"balance\"</code> dans <code>accounts</code> a une contrainte de v\u00e9rification pour s'assurer qu'elle a une valeur non n\u00e9gative. Nous pouvons ex\u00e9cuter <code>.schema</code> pour v\u00e9rifier cela.) - La mani\u00e8re dont nous impl\u00e9mentons l'annulation de la transaction est en utilisant <code>ROLLBACK</code>. Une fois que nous avons commenc\u00e9 une transaction et \u00e9crit quelques instructions SQL, si l'une d'elles \u00e9choue, nous pouvons la terminer avec un <code>ROLLBACK</code> pour revenir toutes les valeurs \u00e0 leur \u00e9tat pr\u00e9-transaction. Cela aide \u00e0 garder les transactions coh\u00e9rentes.</p> <pre><code>BEGIN TRANSACTION;\nUPDATE \"accounts\" SET \"balance\" = \"balance\" + 10 WHERE \"id\" = 2;\nUPDATE \"accounts\" SET \"balance\" = \"balance\" - 10 WHERE \"id\" = 1; -- Invokes constraint error\nROLLBACK;\n</code></pre>"},{"location":"cours6/#conditions-de-course","title":"Conditions de course","text":"<ul> <li>Les transactions peuvent aider \u00e0 se pr\u00e9munir contre les conditions de course.</li> <li>Une condition de course se produit lorsque plusieurs entit\u00e9s acc\u00e8dent simultan\u00e9ment \u00e0 une valeur partag\u00e9e et prennent des d\u00e9cisions bas\u00e9es sur celle-ci, potentiellement causant des incoh\u00e9rences dans la base de donn\u00e9es. Des conditions de course non r\u00e9solues peuvent \u00eatre exploit\u00e9es par des hackers pour manipuler la base de donn\u00e9es.</li> <li>Dans le cours, un exemple de condition de course est discut\u00e9 dans lequel deux utilisateurs travaillant ensemble peuvent exploiter des incoh\u00e9rences momentan\u00e9es dans la base de donn\u00e9es pour voler la banque.</li> <li>Cependant, les transactions sont trait\u00e9es en isolation pour \u00e9viter les incoh\u00e9rences d\u00e8s le d\u00e9part. Chaque transaction traitant des donn\u00e9es similaires de notre base de donn\u00e9es sera trait\u00e9e s\u00e9quentiellement. Cela aide \u00e0 pr\u00e9venir les incoh\u00e9rences qu'une attaque adversariale pourrait exploiter.</li> <li>Pour rendre les transactions s\u00e9quentielles, SQLite et d'autres syst\u00e8mes de gestion de bases de donn\u00e9es utilisent des verrous sur les bases de donn\u00e9es. Une table dans une base de donn\u00e9es pourrait \u00eatre dans quelques \u00e9tats diff\u00e9rents :</li> <li>UNLOCKED : c'est l'\u00e9tat par d\u00e9faut lorsqu'aucun utilisateur n'acc\u00e8de \u00e0 la base de donn\u00e9es,</li> <li>SHARED : lorsqu'une transaction lit des donn\u00e9es de la base de donn\u00e9es, elle obtient un verrou partag\u00e9 qui permet \u00e0 d'autres transactions de lire simultan\u00e9ment de la base de donn\u00e9es,</li> <li>EXCLUSIVE : si une transaction doit \u00e9crire ou mettre \u00e0 jour des donn\u00e9es, elle obtient un verrou exclusif sur la base de donn\u00e9es qui ne permet pas \u00e0 d'autres transactions de se produire en m\u00eame temps (pas m\u00eame une lecture).</li> </ul>"},{"location":"cours6/#questions_3","title":"Questions","text":"<p>Comment d\u00e9cidons-nous quand une transaction peut obtenir un verrou exclusif ? Comment priorisons-nous diff\u00e9rents types de transactions ?</p> <ul> <li>Diff\u00e9rents algorithmes pourraient \u00eatre utilis\u00e9s pour prendre ces d\u00e9cisions. Par exemple, nous pourrions toujours choisir la transaction qui est arriv\u00e9e en premier. Si une transaction exclusive est n\u00e9cessaire, aucune autre transaction ne peut s'ex\u00e9cuter en m\u00eame temps, ce qui est un inconv\u00e9nient n\u00e9cessaire pour assurer la coh\u00e9rence de la table.</li> </ul> <p>Quelle est la granularit\u00e9 du verrouillage ? Verrouillons-nous une base de donn\u00e9es, une table ou une ligne d'une table ?</p> <ul> <li>Cela d\u00e9pend du SGBD. Dans SQLite, nous pouvons le faire en ex\u00e9cutant une transaction exclusive comme suit :</li> </ul> <pre><code>BEGIN EXCLUSIVE TRANSACTION;\n</code></pre> <p>Si nous ne compl\u00e9tons pas cette transaction maintenant, et essayons de nous connecter \u00e0 la base de donn\u00e9es via un autre terminal pour lire depuis la table, nous obtiendrons une erreur indiquant que la base de donn\u00e9es est verrouill\u00e9e ! Cela, bien s\u00fbr, est une mani\u00e8re tr\u00e8s grossi\u00e8re de verrouiller car elle verrouille toute la base de donn\u00e9es. Comme SQLite est grossier de cette mani\u00e8re, il a un module pour prioriser les transactions et s'assurer qu'un verrou exclusif est obtenu uniquement pour la dur\u00e9e la plus courte n\u00e9cessaire.</p>"},{"location":"cours6/#fin","title":"Fin","text":"<ul> <li>Cela conclut le Cours 5 sur l'Optimisation en SQL !</li> </ul>"},{"location":"cours6/harvard/instructions/","title":"your.harvard","text":"<p> Le logo my.harvard</p>"},{"location":"cours6/harvard/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Si vous n'\u00eates pas d\u00e9j\u00e0 familier, Harvard dispose d'un outil de recherche de cours appel\u00e9 my.harvard, avec lequel les \u00e9tudiants explorent (et finalement s'inscrivent !) aux cours. Pour suivre les cours, les \u00e9tudiants et leurs inscriptions, my.harvard utilise probablement une sorte de base de donn\u00e9es sous-jacente. Et pourtant, si vous l'avez d\u00e9j\u00e0 utilis\u00e9, vous savez que my.harvard n'est pas particuli\u00e8rement... rapide.</p> <p>Voici votre chance de rendre my.harvard un peu plus rapide ! Dans ce probl\u00e8me, prenez des donn\u00e9es de cours de Harvard et cr\u00e9ez des index pour acc\u00e9l\u00e9rer les requ\u00eates typiques sur la base de donn\u00e9es. Gardez \u00e0 l'esprit que l'indexation de chaque colonne n'est pas toujours la meilleure solution : vous devrez consid\u00e9rer les compromis en termes d'espace et de temps, repr\u00e9sentant finalement les cours et les \u00e9tudiants de Harvard de la mani\u00e8re la plus efficace possible.</p>"},{"location":"cours6/harvard/instructions/#demonstration","title":"D\u00e9monstration","text":"<pre><code>$ sqlite3 harvard.db                                                                                \nsqlite&gt; SELECT \"title\", \"semester\"                                                                  \n   ...&gt; FROM \"courses\"                                                                              \n   ...&gt; WHERE \"semester\" = 'Fall 2023'                                                              \n   ...&gt; LIMIT 5;   \n</code></pre>"},{"location":"cours6/harvard/instructions/#code-de-distribution","title":"Code de Distribution","text":"<p>Pour ce probl\u00e8me, vous devrez utiliser <code>harvard.db</code> et un fichier <code>indexes.sql</code> dans lequel vous \u00e9crirez vos instructions SQL pour cr\u00e9er vos index.</p>"},{"location":"cours6/harvard/instructions/#schema","title":"Sch\u00e9ma","text":"<pre><code>erDiagram\n    \"Student\" }o--|{ \"Course\" : \"enrolls in\"\n    \"Course\" }|--o{ \"Requirement\" : \"satisfies\"\n</code></pre> <p>Dans <code>harvard.db</code>, vous trouverez cinq tables qui impl\u00e9mentent les relations d\u00e9crites dans le diagramme ER ci-dessus. Cliquez sur les menus d\u00e9roulants ci-dessous pour en savoir plus sur le sch\u00e9ma de chaque table individuelle.</p>"},{"location":"cours6/harvard/instructions/#table-students","title":"Table <code>students</code>","text":"<p>La table <code>students</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de l'\u00e9tudiant.</li> <li><code>name</code>, qui est le nom de l'\u00e9tudiant.</li> </ul>"},{"location":"cours6/harvard/instructions/#table-courses","title":"Table <code>courses</code>","text":"<p>La table <code>courses</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID du cours.</li> <li><code>department</code>, qui est le d\u00e9partement dans lequel le cours est enseign\u00e9 (par exemple, \u00ab Computer Science \u00bb, \u00ab Economics \u00bb, \u00ab Philosophy \u00bb).</li> <li><code>number</code>, qui est le num\u00e9ro du cours (par exemple, 50, 12, 330).</li> <li><code>semester</code>, qui est le semestre au cours duquel le cours a \u00e9t\u00e9 enseign\u00e9 (par exemple, \u00ab Spring 2024 \u00bb, \u00ab Fall 2023 \u00bb).</li> <li><code>title</code>, qui est le titre du cours (par exemple, \u00ab Introduction to Computer Science \u00bb).</li> </ul>"},{"location":"cours6/harvard/instructions/#table-enrollments","title":"Table <code>enrollments</code>","text":"<p>La table <code>enrollments</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID pour identifier l'inscription.</li> <li><code>student_id</code>, qui est l'ID de l'\u00e9tudiant inscrit.</li> <li><code>course_id</code>, qui est l'ID du cours dans lequel l'\u00e9tudiant est inscrit.</li> </ul>"},{"location":"cours6/harvard/instructions/#table-requirements","title":"Table <code>requirements</code>","text":"<p>La table <code>requirements</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de l'exigence.</li> <li><code>name</code>, qui est le nom de l'exigence.</li> </ul>"},{"location":"cours6/harvard/instructions/#table-satisfies","title":"Table <code>satisfies</code>","text":"<p>La table <code>satisfies</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de la paire cours-exigence.</li> <li><code>course_id</code>, qui est l'ID d'un cours donn\u00e9.</li> <li><code>requirement_id</code>, qui est l'ID de l'exigence que le cours donn\u00e9 satisfait.</li> </ul>"},{"location":"cours6/harvard/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Dans <code>indexes.sql</code>, \u00e9crivez un ensemble d'instructions SQL qui cr\u00e9ent des index qui acc\u00e9l\u00e9reront les requ\u00eates typiques sur la base de donn\u00e9es <code>harvard.db</code>. Le nombre d'index que vous cr\u00e9ez, ainsi que les colonnes qu'ils incluent, d\u00e9pend enti\u00e8rement de vous. Assurez-vous d'\u00e9quilibrer la vitesse avec l'espace disque, en cr\u00e9ant uniquement les index dont vous avez besoin.</p> <p>Lorsque les ing\u00e9nieurs optimisent une base de donn\u00e9es, ils se soucient souvent des requ\u00eates typiques ex\u00e9cut\u00e9es sur la base de donn\u00e9es. De telles requ\u00eates mettent en \u00e9vidence les sch\u00e9mas avec lesquels une base de donn\u00e9es est acc\u00e9d\u00e9e, r\u00e9v\u00e9lant ainsi les meilleures colonnes et tables sur lesquelles cr\u00e9er des index. Cliquez sur l'\u00e9tiquette spoiler ci-dessous pour voir l'ensemble des requ\u00eates <code>SELECT</code> typiques ex\u00e9cut\u00e9es sur <code>harvard.db</code>.</p>"},{"location":"cours6/harvard/instructions/#requetes-select-typiques-sur-harvarddb","title":"Requ\u00eates <code>SELECT</code> typiques sur <code>harvard.db</code>","text":"<ul> <li>Trouver les inscriptions historiques aux cours d'un \u00e9tudiant, en fonction de son ID :</li> </ul> <pre><code>SELECT \"courses\".\"title\", \"courses\".\"semester\"\nFROM \"enrollments\"\nJOIN \"courses\" ON \"enrollments\".\"course_id\" = \"courses\".\"id\"\nJOIN \"students\" ON \"enrollments\".\"student_id\" = \"students\".\"id\"\nWHERE \"students\".\"id\" = 3;\n</code></pre> <ul> <li>Trouver tous les \u00e9tudiants inscrits \u00e0 Computer Science 50 en Fall 2023 :</li> </ul> <pre><code>SELECT \"id\", \"name\"\nFROM \"students\"\nWHERE \"id\" IN (\n    SELECT \"student_id\"\n    FROM \"enrollments\"\n    WHERE \"course_id\" = (\n        SELECT \"id\"\n        FROM \"courses\"\n        WHERE \"courses\".\"department\" = 'Computer Science'\n        AND \"courses\".\"number\" = 50\n        AND \"courses\".\"semester\" = 'Fall 2023'\n    )\n);\n</code></pre> <ul> <li>Trier les cours par nombre d'inscriptions, du plus au moins, en Fall 2023 :</li> </ul> <pre><code>SELECT \"courses\".\"id\", \"courses\".\"department\", \"courses\".\"number\", \"courses\".\"title\", COUNT(*) AS \"enrollment\"\nFROM \"courses\"\nJOIN \"enrollments\" ON \"enrollments\".\"course_id\" = \"courses\".\"id\"\nWHERE \"courses\".\"semester\" = 'Fall 2023'\nGROUP BY \"courses\".\"id\"\nORDER BY \"enrollment\" DESC;\n</code></pre> <ul> <li>Trouver tous les cours de computer science enseign\u00e9s en Spring 2024 :</li> </ul> <pre><code>SELECT \"courses\".\"id\", \"courses\".\"department\", \"courses\".\"number\", \"courses\".\"title\"\nFROM \"courses\"\nWHERE \"courses\".\"department\" = 'Computer Science'\nAND \"courses\".\"semester\" = 'Spring 2024';\n</code></pre> <ul> <li>Trouver l'exigence satisfaite par \u00ab Advanced Databases \u00bb en Fall 2023 :</li> </ul> <pre><code>SELECT \"requirements\".\"name\"\nFROM \"requirements\"\nWHERE \"requirements\".\"id\" = (\n    SELECT \"requirement_id\"\n    FROM \"satisfies\"\n    WHERE \"course_id\" = (\n        SELECT \"id\"\n        FROM \"courses\"\n        WHERE \"title\" = 'Advanced Databases'\n        AND \"semester\" = 'Fall 2023'\n    )\n);\n</code></pre> <ul> <li>Trouver combien de cours dans chaque exigence un \u00e9tudiant a satisfait :</li> </ul> <pre><code>SELECT \"requirements\".\"name\", COUNT(*) AS \"courses\"\nFROM \"requirements\"\nJOIN \"satisfies\" ON \"requirements\".\"id\" = \"satisfies\".\"requirement_id\"\nWHERE \"satisfies\".\"course_id\" IN (\n    SELECT \"course_id\"\n    FROM \"enrollments\"\n    WHERE \"enrollments\".\"student_id\" = 8\n)\nGROUP BY \"requirements\".\"name\";\n</code></pre> <ul> <li>Rechercher un cours par titre et semestre :</li> </ul> <pre><code>SELECT \"department\", \"number\", \"title\"\nFROM \"courses\"\nWHERE \"title\" LIKE \"History%\"\nAND \"semester\" = 'Fall 2023';\n</code></pre> <p>Assurez-vous de consulter la section Conseils (Advice) lorsque vous commencez !</p>"},{"location":"cours6/harvard/instructions/#conseils","title":"Conseils","text":"<p>Dans ce probl\u00e8me, vous prendrez le point de vue oppos\u00e9 \u00e0 celui que vous aviez en travaillant sur In a Snap : plut\u00f4t que de concevoir une requ\u00eate qui tire parti des index existants, votre t\u00e2che consiste \u00e0 concevoir des index dont les requ\u00eates existantes peuvent tirer parti.</p> <p>Utilisez <code>EXPLAIN QUERY PLAN</code> sur chaque requ\u00eate <code>SELECT</code> pour \u00e9valuer o\u00f9 il est pr\u00e9f\u00e9rable de cr\u00e9er des index.</p> <p>Commencez par \u00e9valuer o\u00f9 il est pr\u00e9f\u00e9rable de cr\u00e9er des index en comprenant le plan de chaque requ\u00eate typique sur la base de donn\u00e9es de my.harvard.</p> <p>Par exemple, essayez de r\u00e9v\u00e9ler le plan de la premi\u00e8re requ\u00eate typique, en ex\u00e9cutant ce qui suit :</p> <pre><code>EXPLAIN QUERY PLAN\nSELECT \"courses\".\"title\", \"courses\".\"semester\"\nFROM \"enrollments\"\nJOIN \"courses\" ON \"enrollments\".\"course_id\" = \"courses\".\"id\"\nJOIN \"students\" ON \"enrollments\".\"student_id\" = \"students\".\"id\"\nWHERE \"students\".\"id\" = 3;\n</code></pre> <p>La sortie de ce qui pr\u00e9c\u00e8de est la suivante :</p> <pre><code>QUERY PLAN\n|--SEARCH students USING INTEGER PRIMARY KEY (rowid=?\n|--SCAN enrollments\n`--SEARCH courses USING INTEGER PRIMARY KEY (rowid=?\n</code></pre> <p>Remarquez que, bien que le moteur de la base de donn\u00e9es <code>SEARCH</code> d\u00e9j\u00e0 les tables <code>students</code> et <code>courses</code> en utilisant leurs index de cl\u00e9 primaire, il y a encore des am\u00e9liorations \u00e0 apporter : le moteur de la base de donn\u00e9es <code>SCAN</code> la table <code>enrollments</code> sans index. Rappelez-vous que <code>SCAN</code> signifie que le moteur de la base de donn\u00e9es doit rechercher toutes les lignes, une par une\u2014un processus beaucoup plus lent que la recherche d'un index !</p> <p>Exp\u00e9rimentez maintenant en cr\u00e9ant un index qui pourrait transformer ce <code>SCAN</code> en une <code>SEARCH</code> utilisant un index. Ensuite, r\u00e9p\u00e9tez le m\u00eame processus pour chacune des requ\u00eates typiques sur la base de donn\u00e9es de my.harvard jusqu'\u00e0 ce que vous ayez obtenu un ensemble d'index qui garantit que toutes les requ\u00eates utilisent des index \u00e0 leur plein potentiel.</p>"},{"location":"cours6/harvard/instructions/#minimisez-le-nombre-dindex-que-vous-avez-crees","title":"Minimisez le nombre d'index que vous avez cr\u00e9\u00e9s","text":"<p>Gardez \u00e0 l'esprit que les index prennent de l'espace suppl\u00e9mentaire et qu'ils peuvent ralentir les requ\u00eates <code>INSERT</code>, <code>UPDATE</code> et <code>DELETE</code>. Une fois que vous avez obtenu un ensemble initial d'index, commencez \u00e0 les r\u00e9duire jusqu'\u00e0 ce que vous ayez cr\u00e9\u00e9 le minimum requis pour que chaque requ\u00eate utilise des index de mani\u00e8re optimale. Comment commencer ce processus ? Consid\u00e9rez les questions suivantes :</p> <ul> <li>Certains de vos index incluent-ils les m\u00eames colonnes ? Si c'est le cas, il est probable que vous n'ayez besoin que d'un seul index sur cette colonne particuli\u00e8re.</li> <li>Certains de vos index incluent-ils des colonnes inutilis\u00e9es par les requ\u00eates donn\u00e9es ? Si c'est le cas, il est probable que vous puissiez supprimer ces colonnes de vos index.</li> <li>La suppression d'un index a-t-elle un impact sur le plan de chaque requ\u00eate ? Si ce n'est pas le cas, il est peut-\u00eatre pr\u00e9f\u00e9rable de le supprimer !</li> </ul> <p>Gr\u00e2ce au processus it\u00e9ratif ci-dessus, vous affinerez les index que vous avez choisi de cr\u00e9er.</p>"},{"location":"cours6/harvard/instructions/#utilisation","title":"Utilisation","text":"<p>Pour charger vos index au fur et \u00e0 mesure que vous les \u00e9crivez dans <code>indexes.sql</code>, vous pouvez utiliser</p> <pre><code>.read indexes.sql\n</code></pre> <p>Gardez \u00e0 l'esprit que vous pouvez \u00e9galement utiliser</p> <pre><code>DROP INDEX name;\n</code></pre> <p>o\u00f9 <code>name</code> est le nom de votre index, pour supprimer un index avant de le recr\u00e9er.</p> <p>Vous voudrez peut-\u00eatre utiliser <code>VACUUM</code> pour lib\u00e9rer de l'espace disque apr\u00e8s avoir supprim\u00e9 un index !</p>"},{"location":"cours6/snap/instructions/","title":"En un Clin d'\u0152il","text":"<p> \u00ab Peinture \u00e0 l'huile abstraite d'une image num\u00e9rique envoy\u00e9e depuis un t\u00e9l\u00e9phone \u00bb, g\u00e9n\u00e9r\u00e9e par DALL\u00b7E 2</p>"},{"location":"cours6/snap/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Apr\u00e8s la presse \u00e0 imprimer, le service postal et le t\u00e9l\u00e9gramme, sont arriv\u00e9es les applications de messagerie. Il y a de fortes chances que vous ayez utilis\u00e9 une application de messagerie aujourd'hui, qu'il s'agisse de Facebook Messenger, iMessage, Instagram, Signal ou Snapchat, parmi tant d'autres. Alors que leurs pr\u00e9d\u00e9cesseurs mesuraient la vitesse de communication en termes de semaines, jours ou heures, les applications de messagerie d\u00e9pendent d'une vitesse de l'ordre des millisecondes : un message retard\u00e9 est maintenant une connexion manqu\u00e9e.</p> <p>Dans ce probl\u00e8me, vous \u00e9crirez des requ\u00eates SQL pour une application fictive qui permet aux utilisateurs d'envoyer des photos qui expirent 30 secondes apr\u00e8s que le destinataire les a vues (une id\u00e9e popularis\u00e9e par Snapchat !). Les requ\u00eates que vous \u00e9crirez permettront finalement \u00e0 l'application de mettre en \u0153uvre ses fonctionnalit\u00e9s principales. Cependant, \u00e9tant donn\u00e9 que l'application compte plusieurs milliers d'utilisateurs d\u00e9pendant d'une communication instantan\u00e9e, il est particuli\u00e8rement important d'\u00e9crire des requ\u00eates rapides, et pas seulement correctes. Vous pratiquerez l'\u00e9criture de requ\u00eates qui tirent parti des index, tout cela au service de permettre aux utilisateurs de rester en contact en un clin d'\u0153il.</p>"},{"location":"cours6/snap/instructions/#demonstration","title":"D\u00e9monstration","text":"<pre><code>$ sqlite3 snap.db                                                                                   \nsqlite&gt; EXPLAIN QUERY PLAN                                                                          \n   ...&gt; SELECT * FROM \"messages\"                                                                    \n   ...&gt; WHERE \"from_user_id\" = 2;                                                                   \nQUERY PLAN                                                                                          \n`--SEARCH messages USING INDEX search_messages_by_from_user_id (from_user_id=?)                     \nsqlite&gt; .quit \n</code></pre>"},{"location":"cours6/snap/instructions/#code-de-distribution","title":"Code de Distribution","text":"<p>Pour ce probl\u00e8me, vous devrez utiliser <code>snap.db</code> et quelques fichiers <code>.sql</code> dans lesquels vous \u00e9crirez vos instructions SQL.</p>"},{"location":"cours6/snap/instructions/#schema","title":"Sch\u00e9ma","text":"<pre><code>erDiagram\n    User }o--o{ User : friends\n    User ||--o{ Message : sends\n    User ||--o{ Message : views\n</code></pre> <p>Dans <code>snap.db</code>, vous trouverez trois tables qui impl\u00e9mentent les relations d\u00e9crites dans le diagramme ER ci-dessus. Cliquez sur les menus d\u00e9roulants ci-dessous pour en savoir plus sur le sch\u00e9ma de chaque table individuelle.</p>"},{"location":"cours6/snap/instructions/#table-users","title":"Table <code>users</code>","text":"<p>La table <code>users</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID de l'utilisateur.</li> <li><code>username</code>, qui est le nom d'utilisateur de l'utilisateur.</li> <li><code>phone_number</code>, qui est le num\u00e9ro de t\u00e9l\u00e9phone de l'utilisateur.</li> <li><code>joined_date</code>, qui est la date \u00e0 laquelle l'utilisateur a rejoint l'application.</li> <li><code>last_login_date</code>, qui est la date \u00e0 laquelle l'utilisateur s'est connect\u00e9 pour la derni\u00e8re fois.</li> </ul>"},{"location":"cours6/snap/instructions/#table-friends","title":"Table <code>friends</code>","text":"<p>La table <code>friends</code> contient les colonnes suivantes :</p> <ul> <li><code>user_id</code>, qui est l'ID d'un utilisateur donn\u00e9.</li> <li><code>friend_id</code>, qui est l'ID de l'utilisateur avec lequel l'utilisateur donn\u00e9 est ami.</li> <li><code>friendship_date</code>, qui est la date \u00e0 laquelle l'amiti\u00e9 a commenc\u00e9.</li> </ul> <p>Pour chaque ligne, l'utilisateur dans la colonne <code>user_id</code> compte l'utilisateur dans la colonne <code>friend_id</code> parmi ses amis, mais pas n\u00e9cessairement vice versa. Lorsque deux utilisateurs se comptent mutuellement parmi leurs amis, deux lignes sont ins\u00e9r\u00e9es :</p> user_id friend_id friendship_date 1 2 2024-01-01 2 1 2024-01-01"},{"location":"cours6/snap/instructions/#table-messages","title":"Table <code>messages</code>","text":"<p>La table <code>messages</code> contient les colonnes suivantes :</p> <ul> <li><code>id</code>, qui est l'ID du message.</li> <li><code>from_user_id</code>, qui est l'ID de l'utilisateur qui a envoy\u00e9 le message.</li> <li><code>to_user_id</code>, qui est l'ID de l'utilisateur auquel le message a \u00e9t\u00e9 envoy\u00e9.</li> <li><code>picture</code>, qui est le nom de fichier de la photo qui a \u00e9t\u00e9 envoy\u00e9e dans le message.</li> <li><code>sent_timestamp</code>, qui est l'horodatage auquel le message a \u00e9t\u00e9 envoy\u00e9.</li> <li><code>viewed_timestamp</code>, qui est l'horodatage auquel le message a \u00e9t\u00e9 vu.</li> <li><code>expires_timestamp</code>, qui est l'horodatage auquel le message expire.</li> </ul>"},{"location":"cours6/snap/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Dans chaque fichier <code>.sql</code> correspondant, \u00e9crivez une requ\u00eate SQL pour impl\u00e9menter les fonctionnalit\u00e9s d\u00e9crites ci-dessous. Puisque la vitesse est essentielle, vous devrez \u00e9galement vous assurer que votre requ\u00eate utilise l'index sp\u00e9cifi\u00e9. La meilleure fa\u00e7on de s'assurer qu'une requ\u00eate utilise un index est de v\u00e9rifier les r\u00e9sultats de <code>EXPLAIN QUERY PLAN</code>.</p> <p>Si vous vous sentez incertain sur la fa\u00e7on d'interpr\u00e9ter la sortie de <code>EXPLAIN QUERY PLAN</code>, consultez la section Conseils pour des explications suppl\u00e9mentaires !</p>"},{"location":"cours6/snap/instructions/#1sql","title":"<code>1.sql</code>","text":"<p>L'\u00e9quipe d'engagement des utilisateurs de l'application doit identifier les utilisateurs actifs. Trouvez tous les noms d'utilisateur des utilisateurs qui se sont connect\u00e9s depuis le 2024-01-01. Assurez-vous que votre requ\u00eate utilise l'index <code>search_users_by_last_login</code>, qui est d\u00e9fini comme suit :</p> <pre><code>CREATE INDEX \"search_users_by_last_login\"\nON \"users\"(\"last_login_date\");\n</code></pre>"},{"location":"cours6/snap/instructions/#2sql","title":"<code>2.sql</code>","text":"<p>Les utilisateurs doivent \u00eatre emp\u00each\u00e9s de rouvrir un message qui a expir\u00e9. Trouvez quand le message avec l'ID 151 expire. Vous pouvez utiliser l'ID du message directement dans votre requ\u00eate.</p> <p>Assurez-vous que votre requ\u00eate utilise l'index cr\u00e9\u00e9 automatiquement sur la colonne de cl\u00e9 primaire de la table <code>messages</code>.</p>"},{"location":"cours6/snap/instructions/#3sql","title":"<code>3.sql</code>","text":"<p>L'application doit classer les \u00ab meilleurs amis \u00bb d'un utilisateur, similaire \u00e0 la fonctionnalit\u00e9 \u00ab Friend Emojis \u00bb de Snapchat. Trouvez les ID des trois principaux utilisateurs auxquels <code>creativewisdom377</code> envoie le plus fr\u00e9quemment des messages. Classez les ID des utilisateurs par le nombre de messages que <code>creativewisdom377</code> a envoy\u00e9s \u00e0 ces utilisateurs, du plus grand au plus petit.</p> <p>Assurez-vous que votre requ\u00eate utilise l'index <code>search_messages_by_from_user_id</code>, qui est d\u00e9fini comme suit :</p> <pre><code>CREATE INDEX \"search_messages_by_from_user_id\"\nON \"messages\"(\"from_user_id\");\n</code></pre>"},{"location":"cours6/snap/instructions/#4sql","title":"<code>4.sql</code>","text":"<p>L'application doit envoyer aux utilisateurs un r\u00e9sum\u00e9 de leur engagement. Trouvez le nom d'utilisateur de l'utilisateur le plus populaire, d\u00e9fini comme l'utilisateur \u00e0 qui le plus de messages ont \u00e9t\u00e9 envoy\u00e9s.</p> <p>Assurez-vous que votre requ\u00eate utilise l'index <code>search_messages_by_to_user_id</code>, qui est d\u00e9fini comme suit :</p> <pre><code>CREATE INDEX \"search_messages_by_to_user_id\"\nON \"messages\"(\"to_user_id\");\n</code></pre>"},{"location":"cours6/snap/instructions/#5sql","title":"<code>5.sql</code>","text":"<p>Pour deux utilisateurs quelconques, l'application doit rapidement afficher une liste des amis qu'ils ont en commun. \u00c9tant donn\u00e9 deux noms d'utilisateur, <code>lovelytrust487</code> et <code>exceptionalinspiration482</code>, trouvez les ID des amis communs. Un ami commun est un utilisateur que <code>lovelytrust487</code> et <code>exceptionalinspiration482</code> comptent tous deux parmi leurs amis.</p> <p>Assurez-vous que votre requ\u00eate utilise l'index cr\u00e9\u00e9 automatiquement sur les colonnes de cl\u00e9 primaire de la table <code>friends</code>. Cet index s'appelle <code>sqlite_autoindex_friends_1</code>.</p> <p>Besoin d'un indice ?</p> <p>Rappelez-vous qu'en SQL, vous pouvez utiliser certains mots-cl\u00e9s pour trouver l'intersection de deux groupes. Consultez les notes de la semaine 1 pour un rappel.</p>"},{"location":"cours6/snap/instructions/#conseils","title":"Conseils","text":""},{"location":"cours6/snap/instructions/#utiliser-explain-query-plan-pour-montrer-les-etapes-dune-requete","title":"Utiliser <code>EXPLAIN QUERY PLAN</code> pour montrer les \u00e9tapes d'une requ\u00eate","text":"<p>Pour v\u00e9rifier les r\u00e9sultats de <code>EXPLAIN QUERY PLAN</code>, vous devez simplement pr\u00e9fixer <code>EXPLAIN QUERY PLAN</code> \u00e0 votre requ\u00eate :</p> <pre><code>EXPLAIN QUERY PLAN\nSELECT \"username\"\nFROM \"users\"\nWHERE \"id\" = 151;\n</code></pre>"},{"location":"cours6/snap/instructions/#interpreter-les-resultats-de-explain-query-plan","title":"Interpr\u00e9ter les r\u00e9sultats de <code>EXPLAIN QUERY PLAN</code>","text":"<p>Rappelez-vous du cours que <code>EXPLAIN QUERY PLAN</code> affiche les \u00e9tapes que le moteur de base de donn\u00e9es SQLite va suivre pour ex\u00e9cuter une requ\u00eate SQL donn\u00e9e. La sortie de <code>EXPLAIN QUERY PLAN</code> peut indiquer si une requ\u00eate utilise un index.</p> <ul> <li>Si vous voyez une \u00e9tape \u00e9tiquet\u00e9e <code>USING INDEX</code>, cela signifie que la requ\u00eate utilise un index \u00e0 cette \u00e9tape.</li> <li>Si vous voyez une \u00e9tape \u00e9tiquet\u00e9e <code>USING COVERING INDEX</code>, cela indique que la requ\u00eate utilise un index couvrant \u00e0 cette \u00e9tape.<ul> <li>Rappelez-vous qu'un index couvrant est un type sp\u00e9cial d'index qui inclut toutes les colonnes n\u00e9cessaires pour la requ\u00eate. Cela signifie que la base de donn\u00e9es peut satisfaire la requ\u00eate directement \u00e0 partir de l'index sans avoir \u00e0 rechercher des donn\u00e9es suppl\u00e9mentaires dans une table.</li> </ul> </li> <li>Lorsque vous voyez une \u00e9tape \u00e9tiquet\u00e9e <code>USING INTEGER PRIMARY KEY</code>, cela implique que la requ\u00eate utilise l'index sur la colonne de cl\u00e9 primaire, qui est fourni automatiquement par SQLite lorsque la cl\u00e9 primaire est de type affinit\u00e9 <code>INTEGER</code>. C'est un moyen efficace d'acc\u00e9der directement aux lignes si les conditions de la requ\u00eate impliquent la cl\u00e9 primaire d'une table.</li> </ul> <p>Voici quelques exemples de r\u00e9sultats de <code>EXPLAIN QUERY PLAN</code>, issus de requ\u00eates qui utilisent un index dans au moins une \u00e9tape de leur ex\u00e9cution :</p>"},{"location":"cours6/snap/instructions/#exemple-1","title":"Exemple 1","text":"<pre><code>QUERY PLAN\n`--SEARCH users USING INDEX search_users_by_last_login (last_login_date&gt;?\n</code></pre> <p>Remarquez que cette requ\u00eate peut \u00eatre ex\u00e9cut\u00e9e en une seule \u00e9tape, en recherchant l'index <code>search_users_by_last_login</code>.</p>"},{"location":"cours6/snap/instructions/#exemple-2","title":"Exemple 2","text":"<pre><code>QUERY PLAN\n|--SEARCH messages USING COVERING INDEX search_messages_by_to_user_id (to_user_id=?\n`--SCALAR SUBQUERY 1\n   `--SEARCH users USING COVERING INDEX sqlite_autoindex_users_1 (username=?\n</code></pre> <p>Remarquez que cette requ\u00eate n\u00e9cessite deux \u00e9tapes :</p> <ol> <li>La premi\u00e8re recherche l'index <code>search_messages_by_to_user_id</code>.</li> <li>La seconde r\u00e9sout une sous-requ\u00eate en recherchant l'index <code>sqlite_autoindex_users_1</code>.</li> </ol>"},{"location":"cours6/snap/instructions/#exemple-3","title":"Exemple 3","text":"<pre><code>QUERY PLAN\n|--SEARCH messages USING INDEX search_messages_by_from_user_id (from_user_id=?\n|--SCALAR SUBQUERY 1\n|  `--SEARCH users USING COVERING INDEX sqlite_autoindex_users_1 (username=?\n|--USE TEMP B-TREE FOR GROUP BY\n`--USE TEMP B-TREE FOR ORDER BY\n</code></pre> <p>Remarquez que cette requ\u00eate implique plusieurs \u00e9tapes, et qu'elle utilise des index pour accomplir la plupart :</p> <ol> <li>La premi\u00e8re \u00e9tape recherche l'index <code>search_messages_by_from_user_id</code>.</li> <li>La deuxi\u00e8me \u00e9tape recherche l'index <code>sqlite_autoindex_users_1</code>.</li> <li>Les \u00e9tapes finales utilisent des B-trees temporaires pour grouper et ordonner les r\u00e9sultats.</li> </ol>"},{"location":"cours6/snap/instructions/#exemple-4","title":"Exemple 4","text":"<pre><code>QUERY PLAN\n|--SEARCH users USING INTEGER PRIMARY KEY (rowid=?\n`--SCALAR SUBQUERY 1\n   |--SCAN messages USING COVERING INDEX search_messages_by_to_user_id\n   `--USE TEMP B-TREE FOR ORDER BY\n</code></pre> <p>Remarquez que cette requ\u00eate implique plusieurs \u00e9tapes, et qu'elle utilise des index pour accomplir la plupart :</p> <ol> <li>La premi\u00e8re \u00e9tape recherche un index de cl\u00e9 primaire automatique.</li> <li>La deuxi\u00e8me \u00e9tape scanne les lignes en utilisant l'index <code>search_messages_by_to_user_id</code>.</li> <li>L'\u00e9tape finale utilise un B-tree temporaire pour ordonner les r\u00e9sultats.</li> </ol>"},{"location":"cours6/snap/instructions/#exemple-5","title":"Exemple 5","text":"<pre><code>QUERY PLAN\n`--COMPOUND QUERY\n   |--LEFT-MOST SUBQUERY\n   |  |--SEARCH friends USING COVERING INDEX sqlite_autoindex_friends_1 (user_id=?\n   |  `--SCALAR SUBQUERY 1\n   |     `--SEARCH users USING COVERING INDEX sqlite_autoindex_users_1 (username=?\n   `--INTERSECT USING TEMP B-TREE\n      |--SEARCH friends USING COVERING INDEX sqlite_autoindex_friends_1 (user_id=?\n      `--SCALAR SUBQUERY 3\n         `--SEARCH users USING COVERING INDEX sqlite_autoindex_users_1 (username=?\n</code></pre> <p>Remarquez que cette requ\u00eate implique de nombreuses \u00e9tapes, et qu'elle utilise des index pour accomplir la plupart. Voyez en particulier que l'index <code>sqlite_autoindex_friends_1</code> est fr\u00e9quemment acc\u00e9d\u00e9.</p>"},{"location":"cours7/","title":"Introduction","text":""},{"location":"cours7/#cours-6","title":"Cours 6","text":"<ul> <li>Introduction</li> <li>MySQL<ul> <li>Creating the <code>cards</code> Table</li> <li>Creating the <code>stations</code> Table</li> <li>Creating the <code>swipes</code> Table</li> </ul> </li> <li>Altering Tables</li> <li>Stored Procedures<ul> <li>Stored Procedures with Parameters</li> </ul> </li> <li>PostgreSQL<ul> <li>Creating PostgreSQL Tables</li> </ul> </li> <li>Scaling with MySQL</li> <li>Access Controls</li> <li>SQL Injection Attacks</li> <li>Fin</li> </ul>"},{"location":"cours7/#introduction","title":"Introduction","text":"<ul> <li>Jusqu'\u00e0 pr\u00e9sent dans ce cours, nous avons appris \u00e0 concevoir et cr\u00e9er nos propres bases de donn\u00e9es, \u00e0 lire et \u00e9crire des donn\u00e9es, et plus r\u00e9cemment, \u00e0 optimiser nos requ\u00eates. Maintenant, nous allons comprendre comment faire tout cela mais \u00e0 plus grande \u00e9chelle.</li> <li>La scalabilit\u00e9 (scalability) est la capacit\u00e9 d'augmenter ou de diminuer la capacit\u00e9 d'une application ou d'une base de donn\u00e9es pour r\u00e9pondre \u00e0 la demande.</li> <li>Les plateformes de m\u00e9dias sociaux et les syst\u00e8mes bancaires sont des exemples d'applications qui peuvent avoir besoin de se d\u00e9velopper \u00e0 mesure qu'elles grandissent et gagnent plus d'utilisateurs.</li> <li>Dans cette conf\u00e9rence, nous utiliserons diff\u00e9rents syst\u00e8mes de gestion de bases de donn\u00e9es comme MySQL et PostgreSQL, qui peuvent \u00eatre utilis\u00e9s pour mettre \u00e0 l'\u00e9chelle des bases de donn\u00e9es.</li> <li>SQLite est une base de donn\u00e9es int\u00e9gr\u00e9e, mais MySQL et PostgreSQL sont des serveurs de bases de donn\u00e9es \u2014 ils fonctionnent souvent sur leur propre mat\u00e9riel d\u00e9di\u00e9 auquel nous pouvons nous connecter via Internet pour ex\u00e9cuter nos requ\u00eates SQL. Cela leur conf\u00e8re l'avantage de pouvoir stocker leurs donn\u00e9es en RAM, ce qui entra\u00eene des requ\u00eates plus rapides.</li> </ul>"},{"location":"cours7/#transition-de-sqlite-vers-les-bases-de-donnees-clientserveur","title":"Transition de SQLite vers les bases de donn\u00e9es client/serveur","text":"<ul> <li>SQLite, que nous avons utilis\u00e9 jusqu'\u00e0 pr\u00e9sent, est une base de donn\u00e9es int\u00e9gr\u00e9e : elle fonctionne comme une biblioth\u00e8que li\u00e9e directement \u00e0 l'application, sans processus serveur distinct.</li> <li>MySQL et PostgreSQL fonctionnent selon un mod\u00e8le client/serveur : un processus serveur d\u00e9di\u00e9 g\u00e8re la base de donn\u00e9es, tandis que les applications s'y connectent en tant que clients.</li> <li>Cette diff\u00e9rence architecturale a plusieurs implications importantes :</li> </ul> Caract\u00e9ristique SQLite MySQL/PostgreSQL Installation Simple, fichier unique N\u00e9cessite installation et configuration d'un serveur Concurrence Limit\u00e9e (verrous au niveau fichier) Avanc\u00e9e (gestion fine des transactions) M\u00e9moire Utilise la m\u00e9moire de l'application Utilise sa propre m\u00e9moire, configurable Performance Excellente pour les petites charges Sup\u00e9rieure pour les charges importantes Administration Minimale N\u00e9cessite une gestion active (utilisateurs, s\u00e9curit\u00e9, etc.) R\u00e9seau Local uniquement Accessible \u00e0 distance via le r\u00e9seau <ul> <li> <p>Le mod\u00e8le client/serveur permet des fonctionnalit\u00e9s avanc\u00e9es :</p> <ul> <li>Mise en cache : Stockage des donn\u00e9es fr\u00e9quemment utilis\u00e9es en RAM pour un acc\u00e8s ultra-rapide</li> <li>Connexions multiples : Centaines voire milliers de connexions simultan\u00e9es</li> <li>S\u00e9curit\u00e9 r\u00e9seau : Contr\u00f4le d'acc\u00e8s granulaire, SSL/TLS pour les connexions</li> <li>Haute disponibilit\u00e9 : R\u00e9plication, clustering, basculement automatique</li> </ul> </li> <li> <p>Ces diff\u00e9rences expliquent pourquoi les applications professionnelles adoptent g\u00e9n\u00e9ralement MySQL ou PostgreSQL lorsqu'elles d\u00e9passent un certain niveau de complexit\u00e9 ou d'utilisation.\u00e9rences expliquent pourquoi les applications professionnelles adoptent g\u00e9n\u00e9ralement MySQL ou PostgreSQL lorsqu'elles d\u00e9passent un certain niveau de complexit\u00e9 ou d'utilisation.</p> </li> </ul>"},{"location":"cours7/#mysql","title":"MySQL","text":"<ul> <li>Nous allons utiliser la base de donn\u00e9es MBTA avec laquelle nous avons travaill\u00e9 dans les conf\u00e9rences pr\u00e9c\u00e9dentes. Le diagramme ER suivant montre les entit\u00e9s Card (Carte), Swipe (Passage) et Station (Station) et les relations entre ces entit\u00e9s.</li> </ul> <p>[Diagramme ER pour la base de donn\u00e9es MBTA avec les entit\u00e9s Card, Swipe et Station]</p> <pre><code>erDiagram\n    Card ||--o{ Swipe : makes\n    Swipe }o--|| Station : at\n</code></pre> <ul> <li>Pour rappel, les usagers du m\u00e9tro utilisent une CharlieCard qu'ils passent dans les stations pour entrer. Les usagers peuvent recharger leurs cartes et, dans certains cas, doivent passer leurs cartes pour quitter une station. La MBTA ne stocke pas d'informations sur les usagers, mais suit uniquement les cartes.</li> <li>Nous voulons cr\u00e9er une base de donn\u00e9es dans MySQL avec ce sch\u00e9ma ! Dans le terminal, connectons-nous \u00e0 un serveur MySQL.</li> </ul> <p><code>bash   mysql -u root -h 127.0.0.1 -P 3306 -p</code></p> <pre><code>- Dans cette commande de terminal, `-u` indique l'utilisateur. Nous fournissons l'utilisateur auquel nous voulons nous connecter \u00e0 la base de donn\u00e9es en tant que `root` (synonyme d'administrateur de base de donn\u00e9es, dans ce cas).\n- `127.0.0.1` est l'adresse de l'h\u00f4te local sur Internet (notre propre ordinateur).\n- `3306` est le port auquel nous voulons nous connecter, et c'est le port par d\u00e9faut o\u00f9 MySQL est h\u00e9berg\u00e9. Consid\u00e9rez la combinaison de l'h\u00f4te et du port comme l'adresse de la base de donn\u00e9es \u00e0 laquelle nous essayons de nous connecter !\n- `-p` \u00e0 la fin de la commande indique que nous voulons \u00eatre invit\u00e9s \u00e0 saisir un mot de passe lors de la connexion.\n</code></pre> <ul> <li>\u00c9tant donn\u00e9 qu'il s'agit d'un serveur de base de donn\u00e9es complet avec potentiellement de nombreuses bases de donn\u00e9es \u00e0 l'int\u00e9rieur. Pour afficher toutes les bases de donn\u00e9es existantes, nous utilisons la commande MySQL suivante.</li> </ul> <p><code>sql   SHOW DATABASES;</code></p> <p>Cela renvoie certaines bases de donn\u00e9es par d\u00e9faut d\u00e9j\u00e0 pr\u00e9sentes dans le serveur. - Nous allons effectuer quelques op\u00e9rations pour configurer la base de donn\u00e9es MBTA. Nous avons vu comment faire cela dans SQLite, alors concentrons-nous sur les diff\u00e9rences de syntaxe pour MySQL !     - Cr\u00e9ation d'une nouvelle base de donn\u00e9es :</p> <pre><code>  ```sql\n  CREATE DATABASE `mbta`;\n  ```\n\n  Au lieu de guillemets, nous utilisons des accents graves pour identifier le nom de la table et d'autres variables dans nos instructions SQL.\n- Pour changer la base de donn\u00e9es actuelle en `mbta` :\n\n  ```sql\n  USE `mbta`;\n  ```\n</code></pre>"},{"location":"cours7/#creating-the-cards-table","title":"Creating the <code>cards</code> Table","text":"<ul> <li>MySQL offre une granularit\u00e9 plus fine avec les types que SQLite. Par exemple, un entier (integer) pourrait \u00eatre <code>TINYINT</code>, <code>SMALLINT</code>, <code>MEDIUMINT</code>, <code>INT</code> ou <code>BIGINT</code> en fonction de la taille du nombre que nous voulons stocker. Le tableau suivant nous montre la taille et la plage des nombres que nous pouvons stocker dans chacun des types d'entiers.</li> </ul> <p>[Tableau des types d'entiers dans MySQL]</p> <p>Ces plages supposent que nous voulons utiliser un entier sign\u00e9. Si nous utilisons des entiers non sign\u00e9s, la valeur maximale que nous pourrions stocker avec chaque type d'entier serait doubl\u00e9e. - Cr\u00e9ons maintenant la table <code>cards</code> en utilisant un type de donn\u00e9es <code>INT</code> pour la colonne ID. Puisqu'un <code>INT</code> peut stocker un nombre jusqu'\u00e0 4 milliards, il devrait \u00eatre suffisamment grand pour notre cas d'utilisation !</p> <p><code>sql   CREATE TABLE `cards` (       `id` INT AUTO_INCREMENT,       PRIMARY KEY(`id`)   );</code></p> <p>Notez que nous utilisons le mot-cl\u00e9 <code>AUTO_INCREMENT</code> avec l'ID afin que MySQL ins\u00e8re automatiquement le nombre suivant comme ID pour une nouvelle ligne.</p>"},{"location":"cours7/#questions","title":"Questions","text":"<p>L'ID ne devrait-il pas \u00eatre un entier non sign\u00e9 ? Comment pouvons-nous l'indiquer ?</p> <ul> <li>Oui, nous pourrions explicitement faire de l'ID un entier non sign\u00e9 en ajoutant le mot-cl\u00e9 <code>UNSIGNED</code> lors de la cr\u00e9ation de l'entier.</li> </ul>"},{"location":"cours7/#creating-the-stations-table","title":"Creating the <code>stations</code> Table","text":"<ul> <li>Apr\u00e8s avoir cr\u00e9\u00e9 la table, nous pouvons voir une liste des tables existantes en ex\u00e9cutant :</li> </ul> <p><code>sql   SHOW TABLES;</code> - Pour plus de d\u00e9tails sur une table, nous pouvons utiliser la commande <code>DESCRIBE</code>.</p> <p><code>sql   DESCRIBE `cards`;</code> - Pour g\u00e9rer le texte, MySQL propose de nombreux types. Deux types couramment utilis\u00e9s sont <code>CHAR</code> \u2014 une cha\u00eene de largeur fixe, et <code>VARCHAR</code> \u2014 une cha\u00eene de longueur variable. MySQL dispose \u00e9galement d'un type <code>TEXT</code> mais contrairement \u00e0 SQLite, ce type est utilis\u00e9 pour des morceaux de texte plus longs comme des paragraphes, des pages de livres, etc. En fonction de la longueur du texte, il pourrait \u00eatre l'un des types suivants : <code>TINYTEXT</code>, <code>TEXT</code>, <code>MEDIUMTEXT</code> et <code>LONGTEXT</code>. De plus, nous avons le type <code>BLOB</code> pour stocker des cha\u00eenes binaires. - MySQL fournit \u00e9galement deux autres types de texte : <code>ENUM</code> et <code>SET</code>. Enum restreint une colonne \u00e0 une seule option pr\u00e9d\u00e9finie parmi une liste d'options que nous fournissons. Par exemple, les tailles de t-shirts pourraient \u00eatre \u00e9num\u00e9r\u00e9es en M, L, XL, etc. Un ensemble permet de stocker plusieurs options dans une seule cellule, utile pour des sc\u00e9narios comme les genres de films. - Cr\u00e9ons maintenant la table <code>stations</code> dans MySQL.</p> <p><code>sql   CREATE TABLE `stations` (       `id` INT AUTO_INCREMENT,       `name` VARCHAR(32) NOT NULL UNIQUE,       `line` ENUM('blue', 'green', 'orange', 'red') NOT NULL,       PRIMARY KEY(`id`)   );</code></p> <pre><code>- Nous choisissons un `VARCHAR` pour le nom de la station car les noms peuvent avoir une longueur inconnue. La ligne sur laquelle se trouve une station, cependant, est l'une des lignes de m\u00e9tro existantes \u00e0 Boston. Puisque nous connaissons les valeurs que cela peut prendre, nous pouvons utiliser un type `ENUM`.\n- Nous utilisons \u00e9galement les contraintes de colonne `UNIQUE` et `NOT NULL` de la m\u00eame mani\u00e8re que nous l'avons fait avec SQLite.\n</code></pre> <ul> <li>En ex\u00e9cutant la commande pour d\u00e9crire cette table, nous voyons une sortie similaire qui r\u00e9pertorie chacune des colonnes de la table. Dans le champ <code>Key</code>, la cl\u00e9 primaire est reconnue par <code>PRI</code> et toute colonne avec des valeurs uniques est reconnue par <code>UNI</code>. Le champ <code>NULL</code> nous indique quelles colonnes permettent des valeurs <code>NULL</code>, ce que aucune des colonnes ne fait pour la table <code>stations</code>.</li> </ul>"},{"location":"cours7/#questions_1","title":"Questions","text":"<p>Peut-on utiliser une table comme entr\u00e9e pour <code>ENUM</code> ?</p> <ul> <li>Cela pourrait \u00eatre possible en utilisant une instruction <code>SELECT</code> imbriqu\u00e9e, mais ce n'est peut-\u00eatre pas une bonne id\u00e9e si les valeurs de la table changent avec le temps. Il pourrait \u00eatre pr\u00e9f\u00e9rable d'indiquer explicitement les valeurs comme options pour <code>ENUM</code>.</li> </ul> <p>Si nous ne savons pas combien de temps un morceau de texte sera et que nous utilisons quelque chose comme <code>VARCHAR(300)</code> pour le repr\u00e9senter, est-ce correct ?</p> <ul> <li>Bien que cela soit correct, il y a un compromis ici. Nous perdrons 300 octets de m\u00e9moire pour chaque ligne de donn\u00e9es ins\u00e9r\u00e9e, ce qui pourrait ne pas en valoir la peine si nous finissons par stocker uniquement des cha\u00eenes tr\u00e8s courtes. Il pourrait \u00eatre pr\u00e9f\u00e9rable de commencer avec une longueur plus courte, puis de modifier la table pour augmenter la longueur si n\u00e9cessaire.</li> </ul>"},{"location":"cours7/#creating-the-swipes-table","title":"Creating the <code>swipes</code> Table","text":"<ul> <li>MySQL nous propose quelques options pour stocker les dates et les heures, alors qu'elles devaient \u00eatre stock\u00e9es \u00e0 l'aide du type num\u00e9rique dans SQLite.</li> <li>Nous pourrions utiliser <code>DATE</code>, <code>YEAR</code>, <code>TIME</code>, <code>DATETIME</code> et <code>TIMESTAMP</code> (pour des temps plus pr\u00e9cis) pour stocker nos valeurs de date et d'heure. Les trois derniers permettent un param\u00e8tre facultatif pour sp\u00e9cifier la pr\u00e9cision avec laquelle nous voulons stocker l'heure.</li> <li>Dans SQLite, nous avions un type de donn\u00e9es <code>REAL</code>. Ici, nos options sont <code>FLOAT</code> et <code>DOUBLE PRECISION</code> comme montr\u00e9 dans le tableau ci-dessous.</li> </ul> <p>[Types de donn\u00e9es r\u00e9els dans MySQL]</p> <pre><code>- La quantit\u00e9 de pr\u00e9cision doit \u00eatre sp\u00e9cifi\u00e9e avec le nombre d'octets, en raison de l'impr\u00e9cision des nombres \u00e0 virgule flottante. Cela signifie qu'avec une quantit\u00e9 limit\u00e9e de m\u00e9moire, les nombres \u00e0 virgule flottante ne peuvent \u00eatre repr\u00e9sent\u00e9s qu'avec une certaine pr\u00e9cision. Plus il y a d'octets, plus la pr\u00e9cision avec laquelle le nombre est repr\u00e9sent\u00e9 est grande.\n</code></pre> <ul> <li>Il existe \u00e9galement un moyen dans MySQL d'utiliser un type d\u00e9cimal (pr\u00e9cision fixe). Avec cela, nous sp\u00e9cifierions le nombre de chiffres dans le nombre \u00e0 repr\u00e9senter, et le nombre de chiffres apr\u00e8s la virgule d\u00e9cimale.</li> <li>Cr\u00e9ons maintenant la table <code>swipes</code>.</li> </ul> <p><code>sql   CREATE TABLE `swipes` (       `id` INT AUTO_INCREMENT,       `card_id` INT,       `station_id` INT,       `type` ENUM('enter', 'exit', 'deposit') NOT NULL,       `datetime` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,       `amount` DECIMAL(5,2) NOT NULL CHECK(`amount` != 0),       PRIMARY KEY(`id`),       FOREIGN KEY(`station_id`) REFERENCES `stations`(`id`),       FOREIGN KEY(`card_id`) REFERENCES `cards`(`id`)   );</code></p> <pre><code>- Remarquez l'utilisation de `DEFAULT CURRENT_TIMESTAMP` pour indiquer que l'horodatage doit \u00eatre automatiquement rempli pour stocker l'heure actuelle si aucune valeur n'est fournie.\n- La pr\u00e9cision que nous choisissons pour le montant du passage est de 2. Cela garantit que les centimes sont ajout\u00e9s ou soustraits sans aucun arrondi.\n- Les contraintes de colonne de lorsque nous avons cr\u00e9\u00e9 la table dans SQLite restent, y compris la v\u00e9rification pour s'assurer que le montant du passage n'est pas n\u00e9gatif.\n</code></pre> <ul> <li>Si nous d\u00e9crivons cette table apr\u00e8s l'avoir cr\u00e9\u00e9e, nous verrons une sortie famili\u00e8re. Le champ <code>Key</code> a une nouvelle valeur, <code>MUL</code> (multiple) pour les colonnes de cl\u00e9 \u00e9trang\u00e8re, indiquant qu'elles pourraient avoir des valeurs r\u00e9p\u00e9t\u00e9es puisqu'elles sont des cl\u00e9s \u00e9trang\u00e8res.</li> </ul>"},{"location":"cours7/#questions_2","title":"Questions","text":"<p>Lorsque nous ajoutons des contraintes \u00e0 une colonne, y a-t-il une pr\u00e9c\u00e9dence avec laquelle elles prennent effet ?</p> <ul> <li>Non, les contraintes fonctionnent ensemble de mani\u00e8re combin\u00e9e. MySQL nous permet d'ajouter des contraintes dans n'importe quel ordre lors de la cr\u00e9ation de la table.</li> </ul> <p>MySQL a-t-il des affinit\u00e9s de type ?</p> <ul> <li>Pas exactement. MySQL a des types de donn\u00e9es, comme <code>INT</code> et <code>VARCHAR</code>, mais contrairement \u00e0 SQLite, il ne nous permettra pas d'entrer des donn\u00e9es d'un type diff\u00e9rent et d'essayer de les convertir.</li> </ul>"},{"location":"cours7/#altering-tables","title":"Altering Tables","text":"<ul> <li>MySQL nous permet de modifier les tables plus fondamentalement que SQLite.</li> <li>Si nous voulions ajouter une ligne argent\u00e9e (silver line) aux lignes possibles sur lesquelles une station pourrait se trouver, nous pouvons faire ce qui suit.</li> </ul> <p><code>sql   ALTER TABLE `stations`   MODIFY `line` ENUM('blue', 'green', 'orange', 'red', 'silver') NOT NULL;</code></p> <pre><code>- Cela nous permet de modifier la colonne `line` et de changer son type, de sorte que l'`ENUM` inclut d\u00e9sormais l'argent\u00e9 comme option.\n- Notez \u00e9galement que nous utilisons le mot-cl\u00e9 `MODIFY` en plus de la construction `ALTER TABLE` \u00e0 laquelle nous sommes habitu\u00e9s avec SQLite.\n</code></pre>"},{"location":"cours7/#stored-procedures","title":"Stored Procedures","text":"<ul> <li>Les proc\u00e9dures stock\u00e9es sont un moyen d'automatiser les instructions SQL et de les ex\u00e9cuter de mani\u00e8re r\u00e9p\u00e9t\u00e9e.</li> <li>Pour d\u00e9montrer les proc\u00e9dures stock\u00e9es, nous utiliserons une base de donn\u00e9es d'une conf\u00e9rence pr\u00e9c\u00e9dente \u2014 la base de donn\u00e9es MFA de Boston.</li> <li>Rappelez-vous que nous avons utilis\u00e9 des vues dans SQLite pour impl\u00e9menter une fonctionnalit\u00e9 de suppression logicielle pour les <code>collections</code> dans la base de donn\u00e9es MFA. Une vue <code>current_collections</code> affichait toutes les collections non marqu\u00e9es comme supprim\u00e9es. Nous allons maintenant utiliser une proc\u00e9dure stock\u00e9e dans MySQL pour faire quelque chose de similaire.</li> <li>Naviguons vers la base de donn\u00e9es MFA d\u00e9j\u00e0 cr\u00e9\u00e9e sur notre serveur MySQL.</li> </ul> <p><code>sql   USE `mfa`;</code> - En d\u00e9crivant la table <code>collections</code>, nous voyons que la colonne <code>deleted</code> n'est pas pr\u00e9sente et doit \u00eatre ajout\u00e9e \u00e0 la table.</p> <p><code>sql   ALTER TABLE `collections`   ADD COLUMN `deleted` TINYINT DEFAULT 0;</code></p> <p>\u00c9tant donn\u00e9 que la colonne <code>deleted</code> n'a que des valeurs de 0 ou 1, il est s\u00fbr d'utiliser un <code>TINYINT</code>. Nous d\u00e9finissons \u00e9galement la valeur par d\u00e9faut sur 0 car nous voulons conserver toutes les collections d\u00e9j\u00e0 pr\u00e9sentes dans la table. - Avant de cr\u00e9er une proc\u00e9dure stock\u00e9e, nous devons changer le d\u00e9limiteur de <code>;</code> \u00e0 autre chose. Contrairement \u00e0 SQLite, o\u00f9 nous pouvions taper plusieurs instructions entre un <code>BEGIN</code> et un <code>END</code> (ce dont nous avons besoin pour une proc\u00e9dure stock\u00e9e ici) et les terminer par un <code>;</code>, MySQL met fin pr\u00e9matur\u00e9ment \u00e0 l'instruction lorsqu'il rencontre un <code>;</code>.</p> <p><code>sql   delimiter //</code> - Maintenant, nous \u00e9crivons la proc\u00e9dure stock\u00e9e.</p> <p><code>sql   CREATE PROCEDURE `current_collection`()   BEGIN       SELECT `title`, `accession_number`, `acquired`       FROM `collections`       WHERE `deleted` = 0;   END//</code></p> <p>Remarquez l'utilisation de parenth\u00e8ses vides \u00e0 c\u00f4t\u00e9 du nom de la proc\u00e9dure, peut-\u00eatre r\u00e9miniscent des fonctions dans d'autres langages de programmation. De mani\u00e8re similaire aux fonctions, nous pouvons \u00e9galement appeler des proc\u00e9dures stock\u00e9es pour les ex\u00e9cuter. - Apr\u00e8s avoir cr\u00e9\u00e9 cela, nous devons r\u00e9initialiser le d\u00e9limiteur sur <code>;</code>.</p> <p><code>sql   delimiter ;</code> - Essayons d'appeler cette proc\u00e9dure pour voir les collections actuelles. \u00c0 ce stade, la requ\u00eate devrait afficher toutes les lignes de la table <code>collections</code> car nous n'avons encore rien supprim\u00e9 logiquement.</p> <p><code>sql   CALL current_collection();</code> - Si nous supprimons logiquement \u00ab Farmers working at dawn \u00bb et appelons \u00e0 nouveau la proc\u00e9dure, nous constaterons que la ligne supprim\u00e9e n'est pas incluse dans la sortie.</p> <p><code>sql   UPDATE `collections`   SET `deleted` = 1   WHERE `title` = 'Farmers working at dawn';</code></p>"},{"location":"cours7/#questions_3","title":"Questions","text":"<p>Pouvons-nous ajouter des param\u00e8tres aux proc\u00e9dures stock\u00e9es, c'est-\u00e0-dire les appeler avec une certaine entr\u00e9e ?</p> <ul> <li>Oui, nous le pouvons et nous verrons un exemple bient\u00f4t !</li> </ul> <p>Pouvons-nous appeler une proc\u00e9dure depuis une autre, comme avec les fonctions ?</p> <ul> <li>Oui. Vous pourriez mettre \u00e0 peu pr\u00e8s n'importe quelle instruction SQL que vous \u00e9crivez dans une proc\u00e9dure \u00e9galement.</li> </ul> <p>Peut-on laisser des notes ou des commentaires dans les tables dans MySQL ?</p> <ul> <li>Cela pourrait certainement \u00eatre une fonctionnalit\u00e9 utile ! Vous pourriez laisser des commentaires dans un fichier <code>schema.sql</code> d\u00e9crivant l'intention derri\u00e8re diff\u00e9rentes parties du sch\u00e9ma, mais il pourrait \u00e9galement y avoir des moyens d'ajouter des commentaires dans les tables SQL.</li> </ul>"},{"location":"cours7/#stored-procedures-with-parameters","title":"Stored Procedures with Parameters","text":"<ul> <li>Lorsque nous avons pr\u00e9c\u00e9demment travaill\u00e9 avec la base de donn\u00e9es MFA, nous avions une table appel\u00e9e <code>transactions</code> pour enregistrer l'achat ou la vente d'\u0153uvres d'art, que nous pouvons \u00e9galement cr\u00e9er ici.</li> </ul> <p><code>sql   CREATE TABLE `transactions` (       `id` INT AUTO_INCREMENT,       `title` VARCHAR(64) NOT NULL,       `action` ENUM('bought', 'sold') NOT NULL,       PRIMARY KEY(`id`)   );</code> - Maintenant, si une \u0153uvre d'art est supprim\u00e9e de <code>collections</code> parce qu'elle est vendue, nous voudrions \u00e9galement mettre \u00e0 jour cela dans la table <code>transactions</code>. Habituellement, cela n\u00e9cessiterait deux requ\u00eates diff\u00e9rentes, mais avec une proc\u00e9dure stock\u00e9e, nous pouvons donner un nom \u00e0 cette s\u00e9quence.</p> <p><code>sql   delimiter //   CREATE PROCEDURE `sell`(IN `sold_id` INT)   BEGIN       UPDATE `collections` SET `deleted` = 1       WHERE `id` = `sold_id`;       INSERT INTO `transactions` (`title`, `action`)       VALUES ((SELECT `title` FROM `collections` WHERE `id` = `sold_id`), 'sold');   END//   delimiter ;</code></p> <p>Le choix du param\u00e8tre pour cette proc\u00e9dure est l'ID du tableau ou de l'\u0153uvre d'art car c'est un identifiant unique. - Nous pouvons maintenant appeler la proc\u00e9dure pour vendre un article particulier. Supposons que nous voulons vendre \u00ab Imaginative landscape \u00bb.</p> <p><code>sql   CALL `sell`(2);</code> - Nous pouvons afficher les donn\u00e9es des tables <code>collections</code> et <code>transactions</code> pour v\u00e9rifier que les modifications ont \u00e9t\u00e9 effectu\u00e9es. - Que se passe-t-il si j'appelle <code>sell</code> sur le m\u00eame ID plus d'une fois ? Il y a un danger qu'il soit ajout\u00e9 plusieurs fois \u00e0 la table <code>transactions</code>. Les proc\u00e9dures stock\u00e9es peuvent \u00eatre consid\u00e9rablement am\u00e9lior\u00e9es en logique et en complexit\u00e9 en utilisant certains constructs de programmation classiques. La liste suivante contient quelques constructs populaires disponibles dans MySQL.</p> <p>[Constructs de programmation dans MySQL]</p>"},{"location":"cours7/#mariadb-alternative-a-mysql","title":"MariaDB : Alternative \u00e0 MySQL","text":"<ul> <li>Origine : MariaDB est un fork de MySQL cr\u00e9\u00e9 en 2009 par Michael \"Monty\" Widenius, le fondateur original de MySQL, suite au rachat de MySQL par Oracle.</li> <li>Compatibilit\u00e9 : MariaDB est hautement compatible avec MySQL, ce qui permet une migration relativement simple. Les commandes SQL, les APIs et les structures sont largement identiques.</li> <li> <p>Diff\u00e9rences principales avec MySQL :</p> <ul> <li>Licences : MariaDB est sous licence GPL v2, garantissant qu'elle restera toujours open-source, tandis que MySQL propose \u00e0 la fois des versions communautaires et des versions propri\u00e9taires.</li> <li>Moteurs de stockage : MariaDB inclut des moteurs suppl\u00e9mentaires comme Aria, ColumnStore (pour l'analytique) et Spider (pour le sharding).</li> <li>Fonctionnalit\u00e9s : MariaDB a ajout\u00e9 certaines fonctionnalit\u00e9s avant MySQL, comme les tables syst\u00e8me en JSON, des am\u00e9liorations de r\u00e9plication et une meilleure optimisation des requ\u00eates.</li> <li>Transparence : Le d\u00e9veloppement de MariaDB est plus ouvert, avec une feuille de route publique et un processus communautaire.</li> </ul> </li> <li> <p>Performance : Dans certains benchmarks, MariaDB surpasse MySQL, particuli\u00e8rement pour les charges de travail mixtes lecture/\u00e9criture.</p> </li> <li>Adoption : De nombreuses distributions Linux (comme Debian et RHEL) ont remplac\u00e9 MySQL par MariaDB comme syst\u00e8me de gestion de base de donn\u00e9es par d\u00e9faut.</li> <li> <p>Migration : La migration de MySQL vers MariaDB est g\u00e9n\u00e9ralement simple :   <code>bash   mysqldump -u root -p --all-databases &gt; sauvegarde_mysql.sql   # Apr\u00e8s installation de MariaDB   mysql -u root -p &lt; sauvegarde_mysql.sql</code></p> </li> <li> <p>Dans nos exercices pratiques, la plupart des commandes SQL fonctionneront de mani\u00e8re identique entre MySQL et MariaDB, ce qui facilite la transition entre ces syst\u00e8mes.</p> </li> </ul>"},{"location":"cours7/#postgresql","title":"PostgreSQL","text":"<ul> <li>Jusqu'\u00e0 pr\u00e9sent dans cette conf\u00e9rence, nous avons vu comment utiliser MySQL, ce qui nous donne une certaine capacit\u00e9 \u00e0 \u00e9voluer par rapport \u00e0 ce que SQLite peut offrir.</li> <li>Nous allons maintenant explorer les fonctionnalit\u00e9s de PostgreSQL en suivant le m\u00eame processus que nous avons fait avec MySQL. Nous allons travailler avec certaines bases de donn\u00e9es SQLite existantes et les convertir en PostgreSQL.</li> <li> <p>Revenons \u00e0 la base de donn\u00e9es MBTA qui avait une table <code>cards</code>, voyons quels types de donn\u00e9es sont disponibles pour nous dans PostgreSQL.</p> <ul> <li>Entiers (Integers)</li> </ul> <p>[Types d'entiers dans PostgreSQL]</p> <p>Nous pouvons observer qu'il y a moins d'options ici que MySQL. PostgreSQL fournit \u00e9galement des entiers non sign\u00e9s, similaires \u00e0 MySQL. Cela signifierait que le double de la valeur maximale affich\u00e9e ici pourrait \u00eatre stock\u00e9 dans chaque type d'entier lorsque vous travaillez avec des entiers non sign\u00e9s. - S\u00e9riels (Serials)     - Les s\u00e9riels sont \u00e9galement des entiers, mais ce sont des num\u00e9ros de s\u00e9rie, g\u00e9n\u00e9ralement utilis\u00e9s pour les cl\u00e9s primaires. - Connectons-nous au serveur de base de donn\u00e9es en ouvrant PSQL \u2014 l'interface de ligne de commande pour PostgreSQL.</p> </li> </ul> <p><code>bash   psql postgresql://postgres@127.0.0.1:5432/postgres</code></p> <p>Nous pouvons nous connecter en tant qu'utilisateur Postgres par d\u00e9faut ou administrateur. - Pour afficher toutes les bases de donn\u00e9es, nous pouvons ex\u00e9cuter <code>\\\\l</code> et cela affiche une liste. - Pour cr\u00e9er la base de donn\u00e9es MBTA, nous pouvons ex\u00e9cuter :</p> <p><code>sql   CREATE DATABASE \"mbta\";</code> - Pour nous connecter \u00e0 cette base de donn\u00e9es sp\u00e9cifique, nous pouvons ex\u00e9cuter <code>\\\\c \"mbta\"</code>. - Pour lister toutes les tables de la base de donn\u00e9es, nous pouvons ex\u00e9cuter <code>\\\\dt</code>. Pour l'instant, cependant, nous ne verrons aucune table dans la base de donn\u00e9es. - Enfin, nous pouvons cr\u00e9er la table <code>cards</code>, comme propos\u00e9. Nous utilisons un type de donn\u00e9es <code>SERIAL</code> pour la colonne ID.</p> <p><code>sql   CREATE TABLE \"cards\" (       \"id\" SERIAL,       PRIMARY KEY(\"id\")   );</code> - Pour d\u00e9crire une table dans PostgreSQL, nous pouvons utiliser une commande comme <code>\\\\d \"cards\"</code>. En ex\u00e9cutant cela, nous voyons certaines informations sur cette table mais dans un format l\u00e9g\u00e8rement diff\u00e9rent de MySQL.</p>"},{"location":"cours7/#questions_4","title":"Questions","text":"<p>Comment savez-vous dans PostgreSQL si votre requ\u00eate entra\u00eene une erreur ?</p> <ul> <li>Si vous appuyez sur Entr\u00e9e et que le serveur de base de donn\u00e9es ne dit pas ptu, vous saurez qu'il pourrait y avoir une erreur. Il est \u00e9galement probable que PostgreSQL vous donne des messages d'erreur utiles pour vous orienter dans la bonne direction.</li> </ul>"},{"location":"cours7/#creating-postgresql-tables","title":"Creating PostgreSQL Tables","text":"<ul> <li>La table <code>stations</code> est cr\u00e9\u00e9e de mani\u00e8re similaire \u00e0 MySQL.</li> </ul> <p><code>sql   CREATE TABLE \"stations\" (       \"id\" SERIAL,       \"name\" VARCHAR(32) NOT NULL UNIQUE,       \"line\" VARCHAR(32) NOT NULL,       PRIMARY KEY(\"id\")   );</code></p> <p>Nous pouvons utiliser <code>VARCHAR</code> de la m\u00eame mani\u00e8re que dans MySQL. Pour simplifier, nous disons que la colonne <code>\"line\"</code> est \u00e9galement de type <code>VARCHAR</code>. - Nous voulons cr\u00e9er la table <code>swipes</code> ensuite. Rappelez-vous que le type de passage peut marquer l'entr\u00e9e, la sortie ou le d\u00e9p\u00f4t de fonds dans la carte. De mani\u00e8re similaire \u00e0 MySQL, nous pouvons utiliser un <code>ENUM</code> pour capturer ces options, mais nous ne l'incluons pas dans la d\u00e9finition de la colonne. Au lieu de cela, nous cr\u00e9ons notre propre type.</p> <p><code>sql   CREATE TYPE \"swipe_type\" AS ENUM('enter', 'exit', 'deposit');</code> - PostgreSQL dispose des types <code>TIMESTAMP</code>, <code>DATE</code>, <code>TIME</code> et <code>INTERVAL</code> pour repr\u00e9senter les valeurs de date et d'heure. <code>INTERVAL</code> est utilis\u00e9 pour capturer la dur\u00e9e de quelque chose ou la distance entre les heures. De mani\u00e8re similaire \u00e0 MySQL, nous pouvons sp\u00e9cifier la pr\u00e9cision avec ces types. - Une diff\u00e9rence cl\u00e9 avec les types de nombres r\u00e9els dans PostgreSQL est que le type <code>DECIMAL</code> s'appelle <code>NUMERIC</code>. - Nous pouvons maintenant cr\u00e9er la table <code>swipes</code> comme suit.</p> <p><code>sql   CREATE TABLE \"swipes\" (       \"id\" SERIAL,       \"card_id\" INT,       \"station_id\" INT,       \"type\" \"swipe_type\" NOT NULL,       \"datetime\" TIMESTAMP NOT NULL DEFAULT now(),       \"amount\" NUMERIC(5,2) NOT NULL CHECK(\"amount\" != 0),       PRIMARY KEY(\"id\"),       FOREIGN KEY(\"station_id\") REFERENCES \"stations\"(\"id\"),       FOREIGN KEY(\"card_id\") REFERENCES \"cards\"(\"id\")   );</code></p> <p>Pour l'horodatage par d\u00e9faut, nous utilisons une fonction fournie par PostgreSQL appel\u00e9e <code>now()</code> qui nous donne l'horodatage actuel ! - Pour quitter PostgreSQL, nous utilisons la commande <code>\\\\q</code>.</p>"},{"location":"cours7/#scaling-with-mysql","title":"Scaling with MySQL","text":"<ul> <li>Consid\u00e9rons un serveur de base de donn\u00e9es pour une application dont la demande augmente. \u00c0 mesure que le nombre de lectures et d'\u00e9critures provenant de l'application commence \u00e0 augmenter, le temps d'attente pour que les requ\u00eates soient trait\u00e9es par le serveur augmente \u00e9galement.</li> <li>Une approche ici consiste \u00e0 mettre \u00e0 l'\u00e9chelle la base de donn\u00e9es verticalement. La mise \u00e0 l'\u00e9chelle verticale consiste \u00e0 augmenter la capacit\u00e9 en augmentant la puissance de calcul du serveur de base de donn\u00e9es.</li> <li>Une autre approche consiste \u00e0 mettre \u00e0 l'\u00e9chelle horizontalement. Cela signifie augmenter la capacit\u00e9 en r\u00e9partissant la charge sur plusieurs serveurs. Lorsque nous mettons \u00e0 l'\u00e9chelle horizontalement, nous conservons des copies de notre base de donn\u00e9es sur plusieurs serveurs (r\u00e9plication).</li> <li>Il existe trois principaux mod\u00e8les de r\u00e9plication : \u00e0 leader unique, \u00e0 leaders multiples et sans leader. La r\u00e9plication \u00e0 leader unique implique un seul serveur de base de donn\u00e9es traitant les \u00e9critures entrantes, puis copiant ces modifications dans d'autres serveurs, tandis que la r\u00e9plication \u00e0 leaders multiples implique plusieurs serveurs recevant des mises \u00e0 jour, entra\u00eenant une complexit\u00e9 accrue. La r\u00e9plication sans leader utilise une approche diff\u00e9rente qui ne n\u00e9cessite pas de leaders en ce sens.</li> <li>Ici, nous nous concentrerons sur le mod\u00e8le de r\u00e9plication \u00e0 leader unique. Dans ce mod\u00e8le, le serveur de base de donn\u00e9es suiveur est une r\u00e9plique en lecture : une copie de la base de donn\u00e9es \u00e0 partir de laquelle les donn\u00e9es peuvent uniquement \u00eatre lues. Le serveur leader est d\u00e9sign\u00e9 pour traiter les \u00e9critures dans la base de donn\u00e9es.</li> <li>Une fois que le leader traite une demande d'\u00e9criture, il pourrait attendre que les suiveurs r\u00e9pliquent les modifications avant de faire quoi que ce soit d'autre. Cela s'appelle la r\u00e9plication synchrone. Bien qu'elle garantisse que la base de donn\u00e9es est toujours coh\u00e9rente, elle peut \u00eatre trop lente \u00e0 r\u00e9pondre aux requ\u00eates. Dans les applications comme la finance ou les soins de sant\u00e9, o\u00f9 la coh\u00e9rence des donn\u00e9es est extr\u00eamement importante, nous pourrions choisir ce type de communication malgr\u00e9 les inconv\u00e9nients.</li> <li>Un autre type est la r\u00e9plication asynchrone, dans laquelle le leader communique avec les serveurs suiveurs de mani\u00e8re asynchrone pour s'assurer que les modifications sont r\u00e9pliqu\u00e9es. Cette m\u00e9thode pourrait \u00eatre utilis\u00e9e dans les applications de m\u00e9dias sociaux, o\u00f9 la rapidit\u00e9 de r\u00e9ponse est extr\u00eamement importante.</li> <li>Une autre m\u00e9thode populaire de mise \u00e0 l'\u00e9chelle s'appelle le sharding. Cela implique de diviser la base de donn\u00e9es en shards sur plusieurs serveurs de base de donn\u00e9es. Un mot d'avertissement avec le sharding : nous voulons \u00e9viter d'avoir un point d'acc\u00e8s de base de donn\u00e9es, ou un serveur de base de donn\u00e9es qui devient plus fr\u00e9quemment acc\u00e9d\u00e9 que d'autres. Cela pourrait cr\u00e9er une surcharge sur ce serveur.</li> <li>Un autre probl\u00e8me survient lorsque nous utilisons le sharding sans r\u00e9plication. Dans ce cas, si l'un des serveurs tombe en panne, nous aurons une base de donn\u00e9es incompl\u00e8te. Cela cr\u00e9e un point de d\u00e9faillance unique : si un syst\u00e8me tombe en panne, notre syst\u00e8me entier est inutilisable.</li> </ul>"},{"location":"cours7/#access-controls","title":"Access Controls","text":"<ul> <li>Auparavant, nous nous sommes connect\u00e9s \u00e0 MySQL en utilisant l'utilisateur root. Cependant, nous pouvons \u00e9galement cr\u00e9er plus d'utilisateurs et leur donner un certain type d'acc\u00e8s \u00e0 la base de donn\u00e9es.</li> <li>Cr\u00e9ons un nouvel utilisateur nomm\u00e9 Carter (n'h\u00e9sitez pas \u00e0 essayer avec votre propre nom ici) !</li> </ul> <p><code>sql   CREATE USER 'carter' IDENTIFIED BY 'password';</code> - Nous pouvons maintenant nous connecter \u00e0 MySQL en utilisant le nouvel utilisateur et le mot de passe, de la m\u00eame mani\u00e8re que nous l'avons fait pr\u00e9c\u00e9demment avec l'utilisateur root. - Lorsque nous cr\u00e9ons ce nouvel utilisateur, par d\u00e9faut, il a tr\u00e8s peu de privil\u00e8ges. Essayons la requ\u00eate suivante.</p> <p><code>sql   SHOW DATABASES;</code></p> <p>Cela n'affiche que certaines des bases de donn\u00e9es par d\u00e9faut dans le serveur. - Si nous nous connectons \u00e0 nouveau avec l'utilisateur root et ex\u00e9cutons la requ\u00eate ci-dessus, beaucoup plus de bases de donn\u00e9es apparaissent ! C'est parce que l'utilisateur root a acc\u00e8s \u00e0 presque tout dans le serveur. - Voyons comment nous pouvons accorder l'acc\u00e8s aux utilisateurs en discutant d'un exemple des semaines pr\u00e9c\u00e9dentes. Nous avions une base de donn\u00e9es <code>rideshare</code> avec une table <code>rides</code>. Dans cette table, nous stockions les noms des passagers, qui sont des informations personnellement identifiables (PII). Nous avons cr\u00e9\u00e9 une vue appel\u00e9e <code>analysis</code> qui anonymisait les noms des passagers, dans l'intention de partager uniquement cette vue avec un analyste ou un autre utilisateur. - Si nous voulions partager la vue <code>analysis</code> avec l'utilisateur que nous venons de cr\u00e9er, nous ferions ce qui suit tout en \u00e9tant connect\u00e9 en tant qu'utilisateur root.</p> <p><code>sql   GRANT SELECT ON `rideshare`.`analysis` TO 'carter';</code> - Maintenant, connectons-nous en tant que nouvel utilisateur et v\u00e9rifions que nous pouvons acc\u00e9der \u00e0 la vue. Nous pouvons maintenant ex\u00e9cuter</p> <p><code>sql   USE `rideshare`;</code> - Cependant, la seule partie de la base de donn\u00e9es \u00e0 laquelle cet utilisateur peut acc\u00e9der est la vue <code>analysis</code>. Nous pouvons maintenant voir les donn\u00e9es dans cette vue, mais pas \u00e0 partir de la table <code>rides</code> d'origine ! Nous venons de d\u00e9montrer l'avantage du contr\u00f4le d'acc\u00e8s de MySQL : nous pouvons avoir plusieurs utilisateurs acc\u00e9dant \u00e0 la base de donn\u00e9es mais n'autoriser que certains \u00e0 acc\u00e9der aux donn\u00e9es confidentielles.</p>"},{"location":"cours7/#sql-injection-attacks","title":"SQL Injection Attacks","text":"<ul> <li>Une fa\u00e7on d'augmenter la s\u00e9curit\u00e9 de notre base de donn\u00e9es consiste \u00e0 utiliser le contr\u00f4le d'acc\u00e8s et \u00e0 accorder uniquement les privil\u00e8ges n\u00e9cessaires \u00e0 chaque utilisateur. Cependant, nos applications qui utilisent une base de donn\u00e9es SQL pourraient \u00e9galement \u00eatre expos\u00e9es \u00e0 des attaques \u2014 l'une d'elles est une attaque par injection SQL.</li> <li>Comme son nom l'indique, cela implique qu'un utilisateur malveillant injecte certaines phrases SQL pour compl\u00e9ter une requ\u00eate existante dans notre application de mani\u00e8re ind\u00e9sirable.</li> <li>Par exemple, un site Web qui demande \u00e0 un utilisateur de se connecter avec son nom d'utilisateur et son mot de passe pourrait ex\u00e9cuter une requ\u00eate comme celle-ci sur la base de donn\u00e9es.</li> </ul> <p><code>sql   SELECT `id` FROM `users`   WHERE `user` = 'Carter' AND `password` = 'password';</code></p> <p>Dans l'exemple ci-dessus, l'utilisateur Carter a saisi son nom d'utilisateur et son mot de passe comme d'habitude. Cependant, un utilisateur malveillant pourrait entrer quelque chose de diff\u00e9rent, comme la cha\u00eene \u00ab password' OR '1' = '1 \u00bb comme mot de passe. Dans ce cas, ils essaient d'obtenir l'acc\u00e8s \u00e0 l'ensemble de la base de donn\u00e9es des utilisateurs et des mots de passe.</p> <p><code>sql   SELECT `id` FROM `users`   WHERE `user` = 'Carter' AND `password` = 'password' OR '1' = '1';</code> - Dans MySQL, nous pouvons utiliser des instructions pr\u00e9par\u00e9es pour pr\u00e9venir les attaques par injection SQL. Connectons-nous \u00e0 MySQL avec l'utilisateur que nous avons cr\u00e9\u00e9 pr\u00e9c\u00e9demment et passons \u00e0 la base de donn\u00e9es <code>bank</code>. - Un exemple d'attaque par injection SQL qui peut \u00eatre ex\u00e9cut\u00e9 pour afficher tous les comptes d'utilisateurs \u00e0 partir de la table <code>accounts</code> est le suivant.</p> <p><code>sql   SELECT * FROM `accounts`   WHERE `id` = 1 UNION SELECT * FROM `accounts`;</code> - Une instruction pr\u00e9par\u00e9e est une instruction dans SQL que nous pouvons ins\u00e9rer ult\u00e9rieurement des valeurs. Pour la requ\u00eate ci-dessus, nous pouvons \u00e9crire une instruction pr\u00e9par\u00e9e.</p> <p><code>sql   PREPARE `balance_check`   FROM 'SELECT * FROM `accounts`   WHERE `id` = ?';</code></p> <p>Le point d'interrogation dans l'instruction pr\u00e9par\u00e9e agit comme une sauvegarde contre l'ex\u00e9cution involontaire de code SQL. - Pour ex\u00e9cuter r\u00e9ellement cette instruction maintenant et v\u00e9rifier le solde de quelqu'un, nous acceptons l'entr\u00e9e de l'utilisateur comme variable, puis nous l'ins\u00e9rons dans l'instruction pr\u00e9par\u00e9e.</p> <p><code>sql   SET @id = 1;   EXECUTE `balance_check` USING @id;</code></p> <p>Dans le code ci-dessus, imaginez que l'instruction <code>SET</code> procure l'ID de l'utilisateur via l'application ! Le <code>@</code> est une convention pour les variables dans MySQL. - L'instruction pr\u00e9par\u00e9e nettoie l'entr\u00e9e pour s'assurer qu'aucun code SQL malveillant n'est inject\u00e9. Essayons d'ex\u00e9cuter les m\u00eames instructions que ci-dessus mais avec un ID malveillant.</p> <p><code>sql   SET @id = '1 UNION SELECT * FROM `accounts`';   EXECUTE `balance_check` USING @id;</code></p> <p>Cela nous donne les m\u00eames r\u00e9sultats que le code pr\u00e9c\u00e9dent \u2014 il nous montre le solde de l'utilisateur avec l'ID 1 et rien d'autre ! Ainsi, nous avons emp\u00each\u00e9 une \u00e9ventuelle attaque par injection SQL.</p>"},{"location":"cours7/#questions_5","title":"Questions","text":"<p>Dans cet exemple d'instruction pr\u00e9par\u00e9e, ne prend-elle en compte que la premi\u00e8re condition de la variable ?</p> <ul> <li>L'instruction pr\u00e9par\u00e9e fait quelque chose appel\u00e9 \u00e9chappement. Elle trouve toutes les parties de la variable qui pourraient \u00eatre malveillantes et les \u00e9chappe pour qu'elles ne soient pas r\u00e9ellement ex\u00e9cut\u00e9es.</li> </ul> <p>Est-ce similaire \u00e0 la raison pour laquelle nous ne devrions pas utiliser des cha\u00eenes format\u00e9es en Python pour ex\u00e9cuter une requ\u00eate SQL ?</p> <ul> <li>Oui, les cha\u00eenes format\u00e9es en Python ont le m\u00eame inconv\u00e9nient car elles sont susceptibles d'attaques par injection SQL.</li> </ul>"},{"location":"cours7/#postgresql-approfondissement","title":"PostgreSQL : Approfondissement","text":""},{"location":"cours7/#introduction-a-postgresql","title":"Introduction \u00e0 PostgreSQL","text":"<ul> <li>PostgreSQL (souvent appel\u00e9 \"Postgres\") est un syst\u00e8me de gestion de base de donn\u00e9es relationnel open-source avec plus de 30 ans de d\u00e9veloppement actif.</li> <li>Contrairement \u00e0 MySQL qui privil\u00e9gie la simplicit\u00e9 et la performance, PostgreSQL met l'accent sur la conformit\u00e9 aux standards SQL et les fonctionnalit\u00e9s avanc\u00e9es.</li> <li>PostgreSQL est souvent choisi pour les applications complexes, scientifiques ou les syst\u00e8mes qui n\u00e9cessitent une forte int\u00e9grit\u00e9 des donn\u00e9es.</li> </ul>"},{"location":"cours7/#differences-principales-avec-mysql","title":"Diff\u00e9rences principales avec MySQL","text":""},{"location":"cours7/#architecture","title":"Architecture","text":"<ul> <li>Mod\u00e8le de processus : PostgreSQL utilise un mod\u00e8le multi-processus (un processus par connexion) tandis que MySQL utilise un mod\u00e8le de threads.</li> <li>Transactions : PostgreSQL offre une gestion des transactions ACID plus stricte que MySQL, ce qui le rend particuli\u00e8rement fiable pour les applications financi\u00e8res.</li> <li>Extensibilit\u00e9 : PostgreSQL permet de cr\u00e9er vos propres types de donn\u00e9es, fonctions et op\u00e9rateurs, ce qui le rend tr\u00e8s flexible.</li> </ul>"},{"location":"cours7/#types-de-donnees","title":"Types de donn\u00e9es","text":"<ul> <li>PostgreSQL propose des types de donn\u00e9es plus riches que MySQL :<ul> <li>Support natif pour les donn\u00e9es g\u00e9ospatiales avec PostGIS</li> <li>Type JSONB pour le stockage optimis\u00e9 de JSON</li> <li>Tableaux et types composites</li> <li>HSTORE pour le stockage de paires cl\u00e9-valeur</li> </ul> </li> </ul> <pre><code>-- Exemple d'utilisation du type JSONB dans PostgreSQL\nCREATE TABLE commandes (\n    id SERIAL PRIMARY KEY,\n    infos JSONB\n);\n\nINSERT INTO commandes (infos) \nVALUES ('{\"client\": \"Dupont\", \"articles\": [{\"nom\": \"stylo\", \"quantit\u00e9\": 5}]}');\n\n-- Recherche dans le JSON\nSELECT * FROM commandes \nWHERE infos @&gt; '{\"client\": \"Dupont\"}';\n</code></pre>"},{"location":"cours7/#indexation","title":"Indexation","text":"<ul> <li>PostgreSQL offre plusieurs types d'index adapt\u00e9s \u00e0 diff\u00e9rents cas d'usage :<ul> <li>B-tree (par d\u00e9faut)</li> <li>Hash</li> <li>GiST (pour les donn\u00e9es g\u00e9om\u00e9triques, textuelles)</li> <li>GIN (pour les tableaux, JSONB)</li> <li>BRIN (pour grandes tables avec donn\u00e9es ordonn\u00e9es)</li> </ul> </li> </ul> <pre><code>-- Index GIN pour recherche efficace dans JSONB\nCREATE INDEX idx_commandes_infos ON commandes USING GIN (infos);\n</code></pre>"},{"location":"cours7/#quand-choisir-postgresql","title":"Quand choisir PostgreSQL ?","text":"<p>PostgreSQL est particuli\u00e8rement adapt\u00e9 quand :</p> <ol> <li>Vous avez besoin d'une haute int\u00e9grit\u00e9 des donn\u00e9es</li> <li>Votre application utilise des requ\u00eates complexes</li> <li>Vous travaillez avec des donn\u00e9es g\u00e9ospatiales</li> <li>Vous avez besoin d'extensibilit\u00e9 pour des cas sp\u00e9cifiques</li> <li>Vous pr\u00e9f\u00e9rez une solution enti\u00e8rement open-source</li> </ol>"},{"location":"cours7/#exemple-pratique-heritage-de-tables","title":"Exemple pratique : H\u00e9ritage de tables","text":"<p>Une fonctionnalit\u00e9 unique de PostgreSQL est l'h\u00e9ritage de tables :</p> <pre><code>-- Table parent pour tous les v\u00e9hicules\nCREATE TABLE vehicules (\n    id SERIAL PRIMARY KEY,\n    marque VARCHAR(50),\n    modele VARCHAR(50),\n    annee INTEGER\n);\n\n-- Tables sp\u00e9cialis\u00e9es qui h\u00e9ritent de la table parent\nCREATE TABLE voitures (\n    nombre_portes INTEGER,\n    type_carburant VARCHAR(20)\n) INHERITS (vehicules);\n\nCREATE TABLE motos (\n    cylindree INTEGER\n) INHERITS (vehicules);\n</code></pre> <p>Avec cette structure, une requ\u00eate sur <code>vehicules</code> retournera aussi les donn\u00e9es des tables <code>voitures</code> et <code>motos</code>.</p>"},{"location":"cours7/#migration-de-sqlite-vers-postgresql","title":"Migration de SQLite vers PostgreSQL","text":"<p>Lorsque votre application grandit, migrer de SQLite vers PostgreSQL implique :</p> <ol> <li>Exportation des donn\u00e9es depuis SQLite</li> <li>Adaptation du sch\u00e9ma pour utiliser les types PostgreSQL</li> <li>Importation des donn\u00e9es dans PostgreSQL</li> <li>Adaptation du code de connexion et des requ\u00eates sp\u00e9cifiques</li> </ol> <p>Ce processus est similaire \u00e0 la migration vers MySQL, mais avec une attention particuli\u00e8re aux types de donn\u00e9es et aux contraintes sp\u00e9cifiques \u00e0 PostgreSQL.</p>"},{"location":"cours7/#conclusion-sur-le-choix-entre-mysql-et-postgresql","title":"Conclusion sur le choix entre MySQL et PostgreSQL","text":"<ul> <li>MySQL : id\u00e9al pour les applications web classiques, blogs, sites e-commerce avec beaucoup de lectures et peu d'\u00e9critures complexes</li> <li>PostgreSQL : meilleur pour les applications analytiques, scientifiques, ou n\u00e9cessitant une forte int\u00e9grit\u00e9 des donn\u00e9es et des fonctionnalit\u00e9s avanc\u00e9es</li> <li>MariaDB : alternative \u00e0 MySQL avec des am\u00e9liorations de performance et une garantie de rester open-source</li> </ul> <p>Le choix d\u00e9pend principalement de votre cas d'utilisation et des fonctionnalit\u00e9s dont vous avez besoin pour votre application.</p>"},{"location":"cours7/index2/","title":"Index 2","text":""},{"location":"cours7/index2/#autres-solutions-sql-mainstream","title":"Autres Solutions SQL Mainstream","text":""},{"location":"cours7/index2/#oracle-database","title":"Oracle Database","text":""},{"location":"cours7/index2/#perspective-pratique","title":"Perspective pratique","text":"<ul> <li>Oracle Database est fr\u00e9quemment rencontr\u00e9 dans les grandes entreprises, notamment dans les secteurs bancaire, financier et industriel.</li> <li>Vous pourriez travailler avec Oracle lorsque vous rejoignez une grande organisation ou consultez pour des clients d'entreprise.</li> <li>Les outils comme Oracle SQL Developer ou SQL*Plus seront votre interface principale pour interroger ces bases de donn\u00e9es.</li> </ul>"},{"location":"cours7/index2/#differences-cles-pour-les-requetes","title":"Diff\u00e9rences cl\u00e9s pour les requ\u00eates","text":"<ul> <li>Types de donn\u00e9es : Oracle utilise <code>VARCHAR2</code> au lieu de <code>VARCHAR</code>, <code>NUMBER</code> au lieu de <code>INT</code>/<code>FLOAT</code>, et <code>DATE</code> stocke \u00e0 la fois la date et l'heure.</li> <li>Fonctions de date : Oracle utilise <code>TO_DATE</code>, <code>TO_CHAR</code> au lieu des fonctions vues dans SQLite ou MySQL.</li> <li>Pagination diff\u00e9rente : Limite des r\u00e9sultats avec <code>ROWNUM</code> au lieu de <code>LIMIT</code>.</li> </ul> <pre><code>-- Requ\u00eate avec limitation des r\u00e9sultats (\u00e9quivalent de LIMIT)\nSELECT * FROM ventes WHERE ROWNUM &lt;= 10;\n\n-- Format de date\nSELECT TO_CHAR(date_vente, 'YYYY-MM-DD') FROM ventes;\n\n-- Jointure avec syntaxe Oracle (ancienne syntaxe encore fr\u00e9quente)\nSELECT e.nom, d.nom_departement\nFROM employes e, departements d\nWHERE e.dept_id = d.dept_id;\n</code></pre>"},{"location":"cours7/index2/#impact-sur-votre-travail-quotidien","title":"Impact sur votre travail quotidien","text":"<ul> <li>Les requ\u00eates analytiques complexes peuvent \u00eatre plus performantes et offrir plus d'options.</li> <li>Oracle propose des fonctions analytiques avanc\u00e9es int\u00e9gr\u00e9es (OLAP).</li> <li>Vous pourriez rencontrer PL/SQL, le langage proc\u00e9dural d'Oracle, dans des proc\u00e9dures stock\u00e9es que vous devrez appeler.</li> </ul>"},{"location":"cours7/index2/#couts-approximatifs","title":"Co\u00fbts approximatifs","text":"<ul> <li>Licence Standard Edition 2 : ~15 000\u20ac par processeur</li> <li>Licence Enterprise Edition : ~40 000\u20ac par processeur</li> <li>Support annuel : ~22% du co\u00fbt de licence</li> <li>Des options sp\u00e9cifiques (RAC, Partitioning, etc.) peuvent significativement augmenter le co\u00fbt</li> </ul>"},{"location":"cours7/index2/#microsoft-sql-server","title":"Microsoft SQL Server","text":""},{"location":"cours7/index2/#perspective-pratique_1","title":"Perspective pratique","text":"<ul> <li>Probablement la solution que vous rencontrerez le plus souvent dans les entreprises utilisant les technologies Microsoft.</li> <li>Tr\u00e8s r\u00e9pandu dans les services financiers, l'assurance, la sant\u00e9, et le retail.</li> <li>L'interface principale sera SQL Server Management Studio (SSMS) ou Azure Data Studio.</li> </ul>"},{"location":"cours7/index2/#differences-cles-pour-les-requetes_1","title":"Diff\u00e9rences cl\u00e9s pour les requ\u00eates","text":"<ul> <li>T-SQL : La version Microsoft du SQL avec ses propres particularit\u00e9s.</li> <li>Fonctions de date : Utilise <code>GETDATE()</code> au lieu de <code>NOW()</code> ou <code>CURRENT_TIMESTAMP</code>.</li> <li>Concat\u00e9nation : Utilise <code>+</code> au lieu de <code>||</code> pour concat\u00e9ner des cha\u00eenes.</li> </ul> <pre><code>-- Concat\u00e9nation dans SQL Server\nSELECT prenom + ' ' + nom AS nom_complet FROM employes;\n\n-- Date actuelle\nSELECT GETDATE();\n\n-- Top N au lieu de LIMIT\nSELECT TOP 10 * FROM ventes ORDER BY montant DESC;\n</code></pre>"},{"location":"cours7/index2/#integration-avec-lecosysteme-danalyse","title":"Int\u00e9gration avec l'\u00e9cosyst\u00e8me d'analyse","text":"<ul> <li>Excel s'int\u00e8gre nativement avec SQL Server.</li> <li>Power BI se connecte directement \u00e0 SQL Server avec des performances optimis\u00e9es.</li> <li>SSRS (Reporting Services) permet de cr\u00e9er des rapports sur vos analyses SQL.</li> </ul>"},{"location":"cours7/index2/#couts-approximatifs_1","title":"Co\u00fbts approximatifs","text":"<ul> <li>Express Edition : Gratuit (limit\u00e9 \u00e0 10GB par base, 1 processeur, 1GB RAM)</li> <li>Standard Edition : ~3 500\u20ac par c\u0153ur (minimum 4 c\u0153urs)</li> <li>Enterprise Edition : ~12 000\u20ac par c\u0153ur</li> <li>Mod\u00e8le cloud (Azure SQL) : \u00c0 partir de ~75\u20ac/mois selon la configuration</li> </ul>"},{"location":"cours7/index2/#ibm-db2-et-sap-hana","title":"IBM Db2 et SAP HANA","text":""},{"location":"cours7/index2/#contextes-de-rencontre","title":"Contextes de rencontre","text":"<ul> <li>IBM Db2 : Principalement dans les grandes entreprises avec des syst\u00e8mes historiques, particuli\u00e8rement dans la banque, l'assurance et les services gouvernementaux.</li> <li>SAP HANA : Dans les entreprises utilisant les solutions SAP pour la gestion (ERP, CRM, etc.).</li> </ul>"},{"location":"cours7/index2/#ce-qui-change-pour-vos-requetes","title":"Ce qui change pour vos requ\u00eates","text":"<ul> <li>Ces syst\u00e8mes sont optimis\u00e9s pour des volumes de donn\u00e9es massifs.</li> <li>Les requ\u00eates analytiques peuvent \u00eatre nettement plus rapides qu'avec SQLite.</li> <li>Des fonctions analytiques et statistiques avanc\u00e9es sont disponibles nativement.</li> </ul> <pre><code>-- Exemple de fonction d'analyse dans Db2\nSELECT STDDEV(montant_vente) FROM ventes;\n\n-- Exemple de requ\u00eate analytique dans SAP HANA\nSELECT \n    categorie,\n    SUM(montant) AS total,\n    SUM(montant) / SUM(SUM(montant)) OVER () AS pourcentage\nFROM ventes\nGROUP BY categorie;\n</code></pre>"},{"location":"cours7/index2/#couts-approximatifs_2","title":"Co\u00fbts approximatifs","text":"<ul> <li> <p>IBM Db2 :</p> <ul> <li>Edition standard : ~5 000\u20ac par c\u0153ur</li> <li>Edition avanc\u00e9e : ~12 000\u20ac par c\u0153ur</li> <li>Cloud (Db2 on Cloud) : \u00c0 partir de ~150\u20ac/mois</li> </ul> </li> <li> <p>SAP HANA :</p> <ul> <li>Parmi les plus co\u00fbteuses des bases de donn\u00e9es</li> <li>Licences bas\u00e9es sur la m\u00e9moire utilis\u00e9e : ~100 000\u20ac pour 64GB</li> <li>Souvent inclus dans les contrats globaux SAP</li> </ul> </li> </ul>"},{"location":"cours7/index2/#comparaison-simplifiee-des-solutions-sql","title":"Comparaison simplifi\u00e9e des solutions SQL","text":"Caract\u00e9ristique SQLite MySQL PostgreSQL Oracle SQL Server O\u00f9 vous le rencontrerez Petites applications Startups, Web Entreprises tech Grandes entreprises, Finance Entreprises Microsoft Co\u00fbt approximatif Gratuit Gratuit - 3K\u20ac Gratuit 15K\u20ac - 40K\u20ac+ Gratuit - 12K\u20ac+ Outils d'acc\u00e8s DB Browser MySQLWorkbench pgAdmin SQL Developer SSMS, Power BI Particularit\u00e9s Simple, portable Simple, rapide Riche en fonctions Puissant mais verbeux Int\u00e9gration Microsoft Fonctions analytiques Basiques Moyennes Bonnes Excellentes Tr\u00e8s bonnes Performances sur gros volumes Faibles Moyennes Bonnes Excellentes Tr\u00e8s bonnes"},{"location":"cours7/index2/#ce-que-vous-devez-retenir","title":"Ce que vous devez retenir","text":"<ol> <li> <p>Syntaxe variable : Chaque syst\u00e8me a ses particularit\u00e9s syntaxiques, notamment pour:</p> <ul> <li>Fonctions de date et d'heure</li> <li>Pagination et limitation des r\u00e9sultats</li> <li>Fonctions d'agr\u00e9gation et analytiques</li> </ul> </li> <li> <p>Performances : Les bases de donn\u00e9es d'entreprise comme Oracle, SQL Server et SAP HANA sont optimis\u00e9es pour:</p> <ul> <li>G\u00e9rer des milliards de lignes</li> <li>Ex\u00e9cuter des requ\u00eates analytiques complexes</li> <li>Maintenir les performances avec de nombreux utilisateurs simultan\u00e9s</li> </ul> </li> <li> <p>Outils d'acc\u00e8s : Vous utiliserez rarement la ligne de commande, mais plut\u00f4t:</p> <ul> <li>Des outils sp\u00e9cifiques \u00e0 chaque SGBD (SQL Developer, SSMS)</li> <li>Des outils d'analyse (Tableau, Power BI) connect\u00e9s \u00e0 ces bases</li> <li>Des environnements de notebooks (Jupyter) via des connecteurs SQL</li> </ul> </li> <li> <p>Pr\u00e9paration : Pour vous adapter \u00e0 ces diff\u00e9rents environnements:</p> <ul> <li>Apprenez les particularit\u00e9s syntaxiques de chaque syst\u00e8me</li> <li>Familiarisez-vous avec les outils d'acc\u00e8s principaux</li> <li>Comprenez les fonctions analytiques sp\u00e9cifiques disponibles dans chaque syst\u00e8me</li> </ul> </li> </ol> <p>La bonne nouvelle est que les concepts fondamentaux que vous avez appris avec SQLite restent valables - seuls certains d\u00e9tails changent d'un syst\u00e8me \u00e0 l'autre.</p>"},{"location":"cours7/deep/answers/","title":"From the Deep","text":"<p>In this problem, you'll write freeform responses to the questions provided in the specification.</p>"},{"location":"cours7/deep/answers/#random-partitioning","title":"Random Partitioning","text":"<p>TODO</p>"},{"location":"cours7/deep/answers/#partitioning-by-hour","title":"Partitioning by Hour","text":"<p>TODO</p>"},{"location":"cours7/deep/answers/#partitioning-by-hash-value","title":"Partitioning by Hash Value","text":"<p>TODO</p>"},{"location":"cours7/deep/instructions/","title":"Deep Instructions","text":"<p># From the Deep</p> <p></p>"},{"location":"cours7/deep/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Vous \u00eates un chercheur op\u00e9rant un sous-marin t\u00e9l\u00e9command\u00e9, l'AquaByte Explorer, qui collecte en continu des observations depuis le fond de l'oc\u00e9an. (AquaByte, bien que fictif, est un peu comme le vrai SuBastion !). AquaByte envoie des donn\u00e9es depuis les profondeurs, les stockant dans une base de donn\u00e9es situ\u00e9e sur plusieurs bateaux \u00e0 la surface de l'oc\u00e9an.</p> <p>Dans un fichier nomm\u00e9 <code>answers.md</code>, votre t\u00e2che consiste \u00e0 analyser les compromis (trade-offs) dans quelques conceptions potentielles pour le syst\u00e8me de base de donn\u00e9es distribu\u00e9 d'AquaByte !</p>"},{"location":"cours7/deep/instructions/#contexte","title":"Contexte","text":"<p>AquaByte est capable d'envoyer plusieurs milliers d'observations par minute, souvent \u00e0 des moments particuliers de la journ\u00e9e. Par exemple, AquaByte observe le plus activement en soir\u00e9e et t\u00f4t le matin, lorsque certains poissons peuvent \u00eatre vus plus fr\u00e9quemment.</p> <p>Chaque ligne de donn\u00e9es envoy\u00e9e \u00e0 la surface par AquaByte est \u00e9tiquet\u00e9e avec une cl\u00e9 primaire : dans ce cas, l'horodatage exact de l'observation au format suivant : <code>YYYY-MM-DD HH:MM:SS.SSS</code>. Il s'agit du format ISO8601, si vous \u00eates curieux !</p>"},{"location":"cours7/deep/instructions/#collecte-dobservations","title":"Collecte d'Observations","text":"<p>Pour simplifier, supposons qu'AquaByte a envoy\u00e9 les 6 observations suivantes au cours du 1er novembre 2023. Pour la visualisation, chaque observation est repr\u00e9sent\u00e9e par un rectangle bleu \u00e9tiquet\u00e9 par sa cl\u00e9 primaire (l'horodatage auquel l'observation a \u00e9t\u00e9 prise).</p> <p></p> <p>Pour v\u00e9rifier votre compr\u00e9hension, \u00e0 quel moment la plupart des observations d'AquaByte ont-elles eu lieu ?</p> <ul> <li>Entre minuit et 1h du matin le 1er novembre 2023</li> </ul> <p>C'est correct !</p> <ul> <li>Entre midi et 13h le 1er novembre 2023</li> </ul> <p>Pas tout \u00e0 fait.</p> <ul> <li>Entre 16h et 17h le 1er novembre 2023</li> </ul> <p>Pas tout \u00e0 fait.</p>"},{"location":"cours7/deep/instructions/#partitions","title":"Partitions","text":"<p>AquaByte pr\u00e9voit d'envoyer ses six observations \u00e0 un r\u00e9seau de bateaux \u00e0 la surface : Bateau A, Bateau B et Bateau C. Plus de bateaux permettent \u00e0 AquaByte d'envoyer plus de donn\u00e9es que ce qu'un seul bateau pourrait stocker. Cependant, plus de bateaux entra\u00eenent plus de complexit\u00e9 : en supposant que les donn\u00e9es, une fois stock\u00e9es, ne doivent pas \u00eatre d\u00e9plac\u00e9es, \u00e0 quel bateau AquaByte doit-il envoyer chaque observation ? Il s'agit en fait d'un probl\u00e8me de partitionnement des donn\u00e9es.</p>"},{"location":"cours7/deep/instructions/#partitionnement-aleatoire","title":"Partitionnement Al\u00e9atoire","text":"<p>Une approche consiste pour AquaByte \u00e0 envoyer ses observations de mani\u00e8re al\u00e9atoire \u00e0 chaque bateau, comme illustr\u00e9 ci-dessous. Avec les questions suivantes, analysez les compromis techniques de cette d\u00e9cision de conception.</p> <p></p> <p>Consid\u00e9rez les deux questions suivantes. Une fois que vous avez une id\u00e9e en t\u00eate, choisissez la r\u00e9ponse qui correspond le mieux \u00e0 votre r\u00e9flexion en cliquant sur le menu d\u00e9roulant appropri\u00e9.</p> <p>Les observations seront-elles probablement r\u00e9parties uniform\u00e9ment sur tous les bateaux, m\u00eame si AquaByte collecte le plus souvent des observations entre minuit et 1h ? Pourquoi ou pourquoi pas ?</p> <ul> <li>Les observations seront r\u00e9parties uniform\u00e9ment.</li> </ul> <p>C'est correct. Les observations seront r\u00e9parties uniform\u00e9ment car chacune est attribu\u00e9e de mani\u00e8re al\u00e9atoire \u00e0 l'un des trois bateaux. En d'autres termes, une observation a autant de chances d'\u00eatre envoy\u00e9e \u00e0 n'importe quel bateau. Ainsi, m\u00eame si AquaByte collecte le plus souvent des observations entre minuit et 1h, les observations seront uniform\u00e9ment r\u00e9parties parmi les bateaux.</p> <ul> <li>Les observations ne seront pas r\u00e9parties uniform\u00e9ment.</li> </ul> <p>Pas tout \u00e0 fait. Les observations seront r\u00e9parties uniform\u00e9ment car chacune est attribu\u00e9e de mani\u00e8re al\u00e9atoire \u00e0 l'un des trois bateaux. En d'autres termes, une observation a autant de chances d'\u00eatre envoy\u00e9e \u00e0 n'importe quel bateau. Ainsi, m\u00eame si AquaByte collecte le plus souvent des observations entre minuit et 1h, les observations seront uniform\u00e9ment r\u00e9parties parmi les bateaux.</p> <p>Supposons qu'un chercheur souhaite interroger toutes les observations entre minuit et 1h. Sur combien de bateaux devra-t-il ex\u00e9cuter la requ\u00eate ?</p> <ul> <li>Le chercheur devra ex\u00e9cuter la requ\u00eate sur tous les bateaux.</li> </ul> <p>C'est correct. Comme les observations sont attribu\u00e9es de mani\u00e8re al\u00e9atoire \u00e0 n'importe quel bateau, chaque observation entre minuit et 1h pourrait se trouver sur l'un des trois bateaux. Si une requ\u00eate n'est ex\u00e9cut\u00e9e que sur un seul bateau, il y a une chance qu'elle ait manqu\u00e9 des observations, stock\u00e9es sur d'autres bateaux, qu'elle aurait d\u00fb retourner.</p> <ul> <li>Le chercheur devra ex\u00e9cuter la requ\u00eate sur seulement certains des bateaux.</li> </ul> <p>Pas tout \u00e0 fait. Consid\u00e9rez que chaque observation entre minuit et 1h a autant de chances de se trouver sur l'un des trois bateaux. Donc, si le chercheur ex\u00e9cute la requ\u00eate sur un seul des bateaux, il y a une chance que la requ\u00eate ait manqu\u00e9 des observations sur d'autres bateaux.</p> <p>Sur la base de ce que vous avez appris ci-dessus, des cours et de votre propre intuition, \u00e9crivez 2 \u00e0 3 phrases qui d\u00e9crivent \u00e0 la fois les raisons d'adopter cette approche et les raisons de ne pas l'adopter. \u00c9crivez les phrases dans <code>answers.md</code>, dans la section \u00ab Random Partitioning \u00bb.</p>"},{"location":"cours7/deep/instructions/#partitionnement-par-heure","title":"Partitionnement par Heure","text":"<p>Supposons que, pour les raisons que vous avez \u00e9crites, l'\u00e9quipe AquaByte d\u00e9cide de ne pas envoyer les observations d'AquaByte de mani\u00e8re al\u00e9atoire \u00e0 chaque bateau. Au lieu de cela, un membre de l'\u00e9quipe propose de partitionner les donn\u00e9es par heure de la journ\u00e9e. Par exemple,</p> <ul> <li>Le Bateau A recevra toutes les observations entre 0h et 7h (c'est-\u00e0-dire, de minuit \u00e0 7h59), inclus.</li> <li>Le Bateau B recevra toutes les observations entre 8h et 15h (c'est-\u00e0-dire, de 8h00 \u00e0 15h59), inclus.</li> <li>Le Bateau C recevra toutes les observations entre 16h et 23h (c'est-\u00e0-dire, de 16h00 \u00e0 23h59), inclus.</li> </ul> <p>Avec les questions suivantes, analysez les compromis techniques de cette d\u00e9cision de conception.</p> <p></p> <p>Consid\u00e9rez les deux questions suivantes. Une fois que vous avez une id\u00e9e en t\u00eate, choisissez la r\u00e9ponse qui correspond le mieux \u00e0 votre r\u00e9flexion en cliquant sur le menu d\u00e9roulant appropri\u00e9.</p> <p>Les observations seront-elles probablement r\u00e9parties uniform\u00e9ment sur tous les bateaux, m\u00eame si AquaByte collecte le plus souvent des observations entre minuit et 1h ? Pourquoi ou pourquoi pas ?</p> <ul> <li>Les observations seront r\u00e9parties uniform\u00e9ment.</li> </ul> <p>Pas tout \u00e0 fait. Les observations ne seront pas r\u00e9parties uniform\u00e9ment si AquaByte collecte le plus souvent des observations entre minuit et 1h. Puisque la plupart des observations sont collect\u00e9es entre minuit et 1h, et que le Bateau A recevra toutes les observations entre 0h et 7h (c'est-\u00e0-dire, de minuit \u00e0 7h59), inclus, le Bateau A recevra la plupart des observations.</p> <ul> <li>Les observations ne seront pas r\u00e9parties uniform\u00e9ment.</li> </ul> <p>C'est correct. Puisque la plupart des observations sont collect\u00e9es entre minuit et 1h, et que le Bateau A recevra toutes les observations entre 0h et 7h (c'est-\u00e0-dire, de minuit \u00e0 7h59), inclus, le Bateau A recevra la plupart des observations.</p> <p>Supposons qu'un chercheur souhaite interroger toutes les observations entre minuit et 1h. Sur combien de bateaux devra-t-il ex\u00e9cuter la requ\u00eate ?</p> <ul> <li>Le chercheur devra ex\u00e9cuter la requ\u00eate sur tous les bateaux.</li> </ul> <p>Pas tout \u00e0 fait. Le Bateau A recevra toutes les observations entre 0h et 7h (c'est-\u00e0-dire, de minuit \u00e0 7h59), inclus. Cela signifie que toutes les observations entre minuit et 1h peuvent \u00eatre trouv\u00e9es sur le Bateau A.</p> <ul> <li>Le chercheur devra ex\u00e9cuter la requ\u00eate sur seulement certains des bateaux.</li> </ul> <p>C'est correct. Le Bateau A recevra toutes les observations entre 0h et 7h (c'est-\u00e0-dire, de minuit \u00e0 7h59), inclus. Cela signifie que toutes les observations entre minuit et 1h peuvent \u00eatre trouv\u00e9es sur le Bateau A.</p> <p>Sur la base de ce que vous avez appris ci-dessus, des cours et de votre propre intuition, \u00e9crivez 2 \u00e0 3 phrases qui d\u00e9crivent \u00e0 la fois les raisons d'adopter cette approche et les raisons de ne pas l'adopter. \u00c9crivez les phrases dans <code>answers.md</code>, dans la section \u00ab Partitioning by Hour \u00bb.</p>"},{"location":"cours7/deep/instructions/#partitionnement-par-valeur-de-hachage","title":"Partitionnement par Valeur de Hachage","text":"<p>Supposons que, pour les raisons que vous avez identifi\u00e9es ci-dessus, l'\u00e9quipe AquaByte d\u00e9cide de ne pas envoyer les observations \u00e0 certains bateaux en fonction de l'heure \u00e0 laquelle elles ont \u00e9t\u00e9 collect\u00e9es. Au lieu de cela, un membre de l'\u00e9quipe propose de partitionner les observations par la valeur de hachage (hash value) de leur horodatage.</p> <p>Si vous n'\u00eates pas familier avec ce terme, une valeur de hachage est g\u00e9n\u00e9r\u00e9e par une fonction de hachage. Une fonction de hachage est un algorithme qui prend une entr\u00e9e (comme un horodatage, par exemple) et, en fonction de l'entr\u00e9e, produit un nombre arbitraire (la valeur de hachage).</p> <p>Par exemple, supposons que l'\u00e9quipe d\u00e9veloppe une fonction de hachage qui attribue une valeur comprise entre 0 et 1499, inclus, \u00e0 chaque cl\u00e9 primaire potentielle qu'AquaByte pourrait envoyer au syst\u00e8me de donn\u00e9es distribu\u00e9. Voici quelques exemples d'entr\u00e9es et de sorties :</p> <ul> <li>L'algorithme calcule la valeur de hachage 45 pour <code>2023-11-01 00:00:01.020</code>.</li> <li>L'algorithme calcule la valeur de hachage 588 pour <code>2023-11-01 16:21:59.924</code>.</li> <li>L'algorithme calcule la valeur de hachage 1200 pour <code>2023-11-01 00:00:04.127</code>.</li> </ul> <p>Il est important de noter que la fonction de hachage est coh\u00e9rente : elle calculera toujours la m\u00eame valeur de hachage pour le m\u00eame horodatage. La fonction de hachage r\u00e9partit \u00e9galement les horodatages uniform\u00e9ment sur toutes les valeurs de hachage possibles : c'est-\u00e0-dire qu'une seule observation n'a pas plus de chances de se voir attribuer une valeur de hachage qu'une autre. Avec les questions suivantes, analysez les compromis techniques de cette d\u00e9cision de conception.</p> <p></p> <p>Consid\u00e9rez les trois questions suivantes. Une fois que vous avez une id\u00e9e en t\u00eate, choisissez la r\u00e9ponse qui correspond le mieux \u00e0 votre r\u00e9flexion en cliquant sur le menu d\u00e9roulant appropri\u00e9.</p> <p>Les observations seront-elles probablement r\u00e9parties uniform\u00e9ment sur tous les bateaux, m\u00eame si AquaByte collecte le plus souvent des observations entre minuit et 1h ? Pourquoi ou pourquoi pas ?</p> <ul> <li>Les observations seront r\u00e9parties uniform\u00e9ment.</li> </ul> <p>C'est correct. Une seule observation n'a pas plus de chances de se voir attribuer une valeur de hachage qu'une autre, ce qui signifie qu'une seule observation pourrait \u00eatre envoy\u00e9e \u00e0 l'un des trois bateaux disponibles.</p> <ul> <li>Les observations ne seront pas r\u00e9parties uniform\u00e9ment.</li> </ul> <p>Pas tout \u00e0 fait. Bien qu'AquaByte collecte le plus souvent des observations entre minuit et 1h, une seule observation n'a pas plus de chances de se voir attribuer une valeur de hachage qu'une autre. Une seule observation pourrait \u00eatre envoy\u00e9e \u00e0 l'un des trois bateaux disponibles.</p> <p>Supposons qu'un chercheur souhaite interroger toutes les observations entre minuit et 1h. Sur combien de bateaux devra-t-il ex\u00e9cuter la requ\u00eate ?</p> <ul> <li>Le chercheur devra probablement ex\u00e9cuter la requ\u00eate sur tous les bateaux.</li> </ul> <p>C'est correct. Chaque observation dans une plage d'observations pourrait se voir attribuer une valeur de hachage arbitraire : les valeurs de hachage elles-m\u00eames ne sont pas dans une plage sp\u00e9cifi\u00e9e. Pour cette raison, la requ\u00eate serait mieux ex\u00e9cut\u00e9e sur tous les bateaux.</p> <ul> <li>Le chercheur devra probablement ex\u00e9cuter la requ\u00eate sur seulement certains des bateaux.</li> </ul> <p>Pas tout \u00e0 fait. Il est certes possible de conna\u00eetre la valeur de hachage d'une observation sp\u00e9cifique. Mais chaque observation dans une plage d'observations pourrait se voir attribuer une valeur de hachage arbitraire : les valeurs de hachage elles-m\u00eames ne sont pas dans une plage sp\u00e9cifi\u00e9e. Pour cette raison, la requ\u00eate serait mieux ex\u00e9cut\u00e9e sur tous les bateaux.</p> <p>Supposons qu'un chercheur souhaite interroger une observation sp\u00e9cifique, qui s'est produite exactement \u00e0 <code>2023-11-01 00:00:01.020</code>. Sur combien de bateaux devra-t-il ex\u00e9cuter la requ\u00eate ?</p> <ul> <li>Le chercheur devra ex\u00e9cuter la requ\u00eate sur tous les bateaux.</li> </ul> <p>Pas tout \u00e0 fait. Il est possible de conna\u00eetre la valeur de hachage d'un horodatage sp\u00e9cifique, ce qui peut indiquer au chercheur o\u00f9 ex\u00e9cuter la requ\u00eate.</p> <ul> <li>Le chercheur devra ex\u00e9cuter la requ\u00eate sur seulement certains des bateaux.</li> </ul> <p>C'est correct. Il est possible de conna\u00eetre la valeur de hachage d'un horodatage sp\u00e9cifique, ce qui peut indiquer au chercheur o\u00f9 ex\u00e9cuter la requ\u00eate.</p> <p>Sur la base de ce que vous avez appris ci-dessus, des cours et de votre propre intuition, \u00e9crivez 2 \u00e0 3 phrases qui d\u00e9crivent \u00e0 la fois les raisons d'adopter cette approche et les raisons de ne pas l'adopter. \u00c9crivez les phrases dans <code>answers.md</code>, dans la section \u00ab Partitioning by Hash Value \u00bb.</p>"},{"location":"cours7/dont-panic-python/instructions/","title":"Don't Panic Python","text":"<p># Don\u2019t Panic!</p> <p></p>"},{"location":"cours7/dont-panic-python/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Vous \u00eates un \u00ab pentester \u00bb (testeur de p\u00e9n\u00e9tration) form\u00e9. Apr\u00e8s votre succ\u00e8s dans une op\u00e9ration pr\u00e9c\u00e9dente, une nouvelle entreprise vous a engag\u00e9 pour effectuer un test de p\u00e9n\u00e9tration et rapporter les vuln\u00e9rabilit\u00e9s dans leur syst\u00e8me de donn\u00e9es. Cette fois, vous suspectez pouvoir faire mieux en \u00e9crivant un programme en Python qui automatise votre piratage.</p> <p>Pour r\u00e9ussir cette op\u00e9ration secr\u00e8te, vous devrez :</p> <ul> <li>Vous connecter, via Python, \u00e0 une base de donn\u00e9es SQLite.</li> <li>Modifier, dans votre programme Python, le mot de passe de l'administrateur.</li> </ul> <p>Si vous n'avez pas d'exp\u00e9rience avec Python, pas de souci ! Ce probl\u00e8me vous guidera \u00e0 chaque \u00e9tape.</p>"},{"location":"cours7/dont-panic-python/instructions/#demonstration","title":"D\u00e9monstration","text":"<pre><code>$ ls                                                                                                \ndont-panic.db  hack.py  reset.sql                                                                   \n$ python hack.py                                                                                    \nEnter a password: hacked!                                                                           \n$ sqlite3 dont-panic.db                                                                             \nsqlite&gt; SELECT \"password\"                                                                           \n   ...&gt; FROM \"users\"                                                                                \n   ...&gt; WHERE \"username\" = 'admin';    \n\n   +----------+                                                                                        \n| password |                                                                                        \n+----------+                                                                                        \n| hacked!  |                                                                                        \n+----------+                                                                                        \nsqlite&gt; .quit  \n</code></pre>"},{"location":"cours7/dont-panic-python/instructions/#code-de-distribution","title":"Code de Distribution","text":"<p>Pour ce probl\u00e8me, vous aurez besoin d'acc\u00e9der \u00e0 une base de donn\u00e9es, un fichier Python, et un ensemble d'instructions SQL pour r\u00e9initialiser la base de donn\u00e9es au cas o\u00f9 votre piratage \u00e9chouerait la premi\u00e8re fois (ne vous inqui\u00e9tez pas si c'est le cas !).</p>"},{"location":"cours7/dont-panic-python/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Dans <code>hack.py</code>, \u00e9crivez un programme Python pour r\u00e9aliser les t\u00e2ches suivantes :</p> <ul> <li>Connectez-vous, via Python, \u00e0 une base de donn\u00e9es SQLite.</li> <li>Modifiez, dans votre programme Python, le mot de passe de l'administrateur.</li> </ul> <p>Lorsque votre programme dans <code>hack.py</code> est ex\u00e9cut\u00e9 sur une nouvelle instance de la base de donn\u00e9es, il devrait produire les r\u00e9sultats ci-dessus.</p> <p>L'horloge tourne !</p>"},{"location":"cours7/dont-panic-python/instructions/#guide","title":"Guide","text":"<p>Si vous \u00eates nouveau dans Python (ou dans la connexion de Python avec SQL !), ce guide vous accompagnera \u00e0 chaque \u00e9tape de ce probl\u00e8me.</p>"},{"location":"cours7/dont-panic-python/instructions/#python","title":"Python","text":"<p>Lorsque vous t\u00e9l\u00e9chargez le code de distribution pour ce probl\u00e8me, vous devriez remarquer un fichier nomm\u00e9 <code>hack.py</code>. Vous pouvez dire que ce programme est un programme Python car il se termine par <code>.py</code>. L'extension <code>.py</code> identifie les fichiers comme des fichiers Python, tout comme l'extension <code>.sql</code> identifie les fichiers comme un ensemble d'instructions SQL.</p> <p>Au d\u00e9but, <code>hack.py</code> ne devrait contenir qu'une seule ligne de code Python :</p> <pre><code>print(\"Hacked!\")\n</code></pre> <p>Pour ex\u00e9cuter ce programme Python, assurez-vous que lorsque vous tapez <code>ls</code>, vous voyez <code>hack.py</code> parmi les fichiers de votre r\u00e9pertoire actuel. Ensuite, ex\u00e9cutez ce qui suit dans votre terminal :</p> <pre><code>python hack.py\n</code></pre> <p>Vous devriez voir \u00ab Hacked! \u00bb dans votre fen\u00eatre de terminal. Pas vraiment un piratage, mais vous \u00eates sur la bonne voie !</p>"},{"location":"cours7/dont-panic-python/instructions/#connexion-a-une-base-de-donnees","title":"Connexion \u00e0 une Base de Donn\u00e9es","text":"<p>Maintenant que vous pouvez ex\u00e9cuter votre programme Python, l'\u00e9tape suivante consiste \u00e0 connecter votre programme \u00e0 <code>dont-panic.db</code>. Pour ce faire, vous devrez utiliser la biblioth\u00e8que CS50 pour Python. Une biblioth\u00e8que est une collection de code que quelqu'un d'autre a \u00e9crit pour r\u00e9soudre un probl\u00e8me (et, surtout, que vous pouvez utiliser dans votre propre programme !). Dans ce cas, l'une des probl\u00e8mes que la biblioth\u00e8que CS50 pour Python vous aide \u00e0 r\u00e9soudre est le processus de connexion \u00e0 une base de donn\u00e9es SQLite.</p> <p>Pour utiliser la fonctionnalit\u00e9 SQL de la biblioth\u00e8que CS50 dans votre propre programme, remplacez <code>print(\"Hacked!\")</code> par ce qui suit :</p> <pre><code>from cs50 import SQL\n</code></pre> <p>Cette ligne de code Python indique que votre programme doit r\u00e9cup\u00e9rer (\u00ab importer \u00bb) des outils li\u00e9s \u00e0 SQL depuis la biblioth\u00e8que CS50, appel\u00e9e <code>cs50</code>.</p> <p>Avec cette biblioth\u00e8que maintenant incluse dans votre programme, \u00e9tablir une connexion \u00e0 <code>dont-panic.db</code> est aussi simple qu'une seule ligne de code Python :</p> <pre><code>from cs50 import SQL\n\ndb = SQL(\"sqlite:///dont-panic.db\")\n</code></pre> <p>Vous pouvez d\u00e9composer cette ligne de code en les \u00e9l\u00e9ments suivants :</p> <ul> <li><code>db = SQL(...)</code>, qui \u00e9tablit une connexion \u00e0 la base de donn\u00e9es donn\u00e9e en entr\u00e9e, entre les parenth\u00e8ses. Cette ligne de code garantit \u00e9galement que vous pouvez faire r\u00e9f\u00e9rence \u00e0 votre connexion de base de donn\u00e9es sous le nom <code>db</code> par la suite dans votre programme.</li> <li><code>sqlite:///dont-panic.db</code> est une URL (similaire \u00e0 une URL de site web !) qui identifie la base de donn\u00e9es \u00e0 laquelle se connecter (<code>dont-panic.db</code>) et le dialecte SQL \u00e0 utiliser (<code>sqlite</code>, dans ce cas, par opposition \u00e0 <code>mysql</code> ou <code>postgres</code>).</li> </ul> <p>Si vous vous sentez plus \u00e0 l'aise, vous pouvez en apprendre davantage sur cette ligne de code dans la documentation de la biblioth\u00e8que CS50 pour Python.</p> <p>Essayez d'ex\u00e9cuter votre programme maintenant. Vous ne verrez peut-\u00eatre rien se passer, et si c'est le cas, c'est bon signe !</p>"},{"location":"cours7/dont-panic-python/instructions/#execution-dinstructions-sql-avec-python","title":"Ex\u00e9cution d'Instructions SQL avec Python","text":"<p>La fonctionnalit\u00e9 SQL de la biblioth\u00e8que CS50 pour Python est fournie avec une m\u00e9thode appel\u00e9e <code>execute</code>. Une m\u00e9thode re\u00e7oit une entr\u00e9e et produit une sortie. Par exemple, une m\u00e9thode peut prendre une instruction SQL en entr\u00e9e, ex\u00e9cuter cette instruction SQL sur une base de donn\u00e9es, et vous renvoyer les r\u00e9sultats de l'instruction SQL. En fait, c'est exactement ce que fait la m\u00e9thode <code>execute</code> !</p> <pre><code>from cs50 import SQL\n\ndb = SQL(\"sqlite:///dont-panic.db\")\ndb.execute(\n    \"\"\"\n    UPDATE \"users\"\n    SET \"password\" = 'hacked!'\n    WHERE \"username\" = 'admin';\n    \"\"\"\n)\n</code></pre> <p>Remarquez que, \u00e0 l'int\u00e9rieur des parenth\u00e8ses associ\u00e9es \u00e0 la m\u00e9thode <code>execute</code>, vous avez maintenant \u00e9crit une requ\u00eate SQL enti\u00e8rement form\u00e9e. Lorsque vous ex\u00e9cutez votre programme Python, la requ\u00eate SQL sera ex\u00e9cut\u00e9e sur la base de donn\u00e9es.</p> <p>Apr\u00e8s avoir ex\u00e9cut\u00e9 votre programme, essayez d'ouvrir <code>dont-panic.db</code> avec <code>sqlite3</code>. Lorsque vous consultez le mot de passe de l'administrateur, vous devriez constater qu'il est maintenant \u00ab hacked! \u00bb.</p> <p>Si \u00e0 tout moment vous souhaitez r\u00e9initialiser <code>dont-panic.db</code> \u00e0 son \u00e9tat d'origine, rappelez-vous que vous pouvez utiliser <code>reset.sql</code>.</p>"},{"location":"cours7/dont-panic-python/instructions/#instructions-preparees","title":"Instructions Pr\u00e9par\u00e9es","text":"<p>Imaginez que vous souhaitiez qu'un utilisateur d\u00e9termine le nouveau mot de passe administratif au fur et \u00e0 mesure que votre programme Python s'ex\u00e9cute.</p> <p>Rappelez-vous du cours que une instruction pr\u00e9par\u00e9e est une requ\u00eate SQL avec des espaces r\u00e9serv\u00e9s pour des valeurs qui sont ins\u00e9r\u00e9es (\u00ab interpol\u00e9es \u00bb) plus tard. Puisque vous ne savez pas quel mot de passe votre utilisateur choisira, le mieux que vous puissiez faire est de d\u00e9finir un espace r\u00e9serv\u00e9 pour le mot de passe et permettre \u00e0 votre programme d'interpoler le mot de passe choisi par l'utilisateur plus tard. L'utilisation d'une instruction pr\u00e9par\u00e9e peut donc aider !</p> <p>La biblioth\u00e8que CS50 pour Python prend en charge l'utilisation d'instructions pr\u00e9par\u00e9es. Tout d'abord, modifiez votre programme pour accepter une entr\u00e9e de l'utilisateur :</p> <pre><code>from cs50 import SQL\n\ndb = SQL(\"sqlite:///dont-panic.db\")\npassword = input(\"Enter a password: \")\ndb.execute(\n    \"\"\"\n    UPDATE \"users\"\n    SET \"password\" = 'oops!'\n    WHERE \"username\" = 'admin';\n    \"\"\"\n)\n</code></pre> <p>Remarquez que si vous ex\u00e9cutez maintenant votre programme, vous serez invit\u00e9 \u00e0 entrer un mot de passe. Tout ce que vous entrez est stock\u00e9 dans la variable nomm\u00e9e <code>password</code>. Une variable est un nom pour une valeur qui peut changer.</p> <p>Maintenant, modifiez votre requ\u00eate SQL pour qu'elle soit une instruction pr\u00e9par\u00e9e. Dans la biblioth\u00e8que CS50, vous pouvez utiliser un <code>?</code> pour repr\u00e9senter un espace r\u00e9serv\u00e9 pour une valeur que vous fournirez plus tard.</p> <pre><code>from cs50 import SQL\n\ndb = SQL(\"sqlite:///dont-panic.db\")\npassword = input(\"Enter a password: \")\ndb.execute(\n    \"\"\"\n    UPDATE \"users\"\n    SET \"password\" = ?\n    WHERE \"username\" = 'admin';\n    \"\"\"\n)\n</code></pre> <p>La derni\u00e8re \u00e9tape, bien s\u00fbr, consiste \u00e0 indiquer \u00e0 la m\u00e9thode <code>execute</code> quelle valeur elle doit substituer \u00e0 l'espace r\u00e9serv\u00e9. Pour ce faire, vous pouvez ajouter la valeur \u00e0 substituer apr\u00e8s la requ\u00eate SQL, s\u00e9par\u00e9e par une virgule :</p> <pre><code>from cs50 import SQL\n\ndb = SQL(\"sqlite:///dont-panic.db\")\npassword = input(\"Enter a password: \")\ndb.execute(\n    \"\"\"\n    UPDATE \"users\"\n    SET \"password\" = ?\n    WHERE \"username\" = 'admin';\n    \"\"\",\n    password\n)\n</code></pre> <p>Maintenant, essayez d'ex\u00e9cuter votre programme et de consulter les modifications dans <code>dont-panic.db</code> !</p>"},{"location":"cours7/linkedin/instructions/","title":"LinkedIn","text":"<p># Happy to Connect</p> <p></p>"},{"location":"cours7/linkedin/instructions/#probleme-a-resoudre","title":"Probl\u00e8me \u00e0 R\u00e9soudre","text":"<p>Vous vous souvenez peut-\u00eatre d'un probl\u00e8me pr\u00e9c\u00e9dent  o\u00f9 LinkedIn est \u00ab le plus grand r\u00e9seau professionnel au monde \u00bb avec pour mission de \u00ab connecter les professionnels  du monde entier pour les rendre plus productifs et couronn\u00e9s de succ\u00e8s \u00bb.  Il est donc probable qu'ils utilisent des serveurs de bases de donn\u00e9es complets pour garantir que leur plateforme est hautement disponible dans le monde entier.</p> <p>Dans un fichier nomm\u00e9 <code>schema.sql</code> dans un dossier nomm\u00e9 <code>sentimental-connect</code>, \u00e9crivez un ensemble d'instructions SQL pour concevoir un sch\u00e9ma de base de donn\u00e9es MySQL que LinkedIn pourrait utiliser.</p>"},{"location":"cours7/linkedin/instructions/#specification","title":"Sp\u00e9cification","text":"<p>Votre t\u00e2che consiste \u00e0 cr\u00e9er une base de donn\u00e9es MySQL pour LinkedIn \u00e0 partir de z\u00e9ro. Les d\u00e9tails de mise en \u0153uvre d\u00e9pendent de vous, bien que vous deviez au minimum vous assurer que votre base de donn\u00e9es r\u00e9pond aux sp\u00e9cifications de la plateforme et qu'elle peut repr\u00e9senter les donn\u00e9es d'exemple donn\u00e9es. Vous \u00eates invit\u00e9 \u00e0 utiliser ou \u00e0 am\u00e9liorer votre conception d'une base de donn\u00e9es SQLite \u2014 gardez simplement \u00e0 l'esprit que vous disposez d\u00e9sormais d'un nouvel ensemble de types !</p>"},{"location":"cours7/linkedin/instructions/#plateforme","title":"Plateforme","text":""},{"location":"cours7/linkedin/instructions/#utilisateurs-users","title":"Utilisateurs (Users)","text":"<p>Le c\u0153ur de la plateforme LinkedIn est ses utilisateurs. Votre base de donn\u00e9es doit pouvoir repr\u00e9senter les informations suivantes concernant les utilisateurs de LinkedIn :</p> <ul> <li>Leur pr\u00e9nom et nom de famille (first and last name)</li> <li>Leur nom d'utilisateur (username)</li> <li>Leur mot de passe (password)</li> </ul> <p>Gardez \u00e0 l'esprit que, si une entreprise suit les meilleures pratiques, les mots de passe des applications sont \u00ab hach\u00e9s \u00bb (hashed). Pas besoin de vous inqui\u00e9ter du hachage des mots de passe ici, bien qu'il puisse \u00eatre utile de savoir que certains algorithmes de hachage peuvent produire des cha\u00eenes de jusqu'\u00e0 128 caract\u00e8res.</p>"},{"location":"cours7/linkedin/instructions/#ecoles-et-universites-schools-and-universities","title":"\u00c9coles et Universit\u00e9s (Schools and Universities)","text":"<p>LinkedIn permet \u00e9galement des comptes officiels d'\u00e9coles ou d'universit\u00e9s, comme celui de Harvard, afin que les anciens \u00e9l\u00e8ves (c'est-\u00e0-dire ceux qui ont fr\u00e9quent\u00e9 l'\u00e9tablissement) puissent identifier leur affiliation. Assurez-vous que la base de donn\u00e9es de LinkedIn peut stocker les informations suivantes sur chaque \u00e9cole :</p> <ul> <li>Le nom de l'\u00e9cole (name of the school)</li> <li>Le type d'\u00e9cole (type of school)</li> <li>L'emplacement de l'\u00e9cole (school\u2019s location)</li> <li>L'ann\u00e9e de fondation de l'\u00e9cole (year in which the school was founded)</li> </ul> <p>Vous devez supposer que LinkedIn ne permet aux \u00e9coles de choisir qu'un seul des trois types suivants : \u00ab Primaire \u00bb (Primary), \u00ab Secondaire \u00bb (Secondary) et \u00ab Enseignement Sup\u00e9rieur \u00bb (Higher Education).</p>"},{"location":"cours7/linkedin/instructions/#entreprises-companies","title":"Entreprises (Companies)","text":"<p>LinkedIn permet aux entreprises de cr\u00e9er leurs propres pages, comme celle de LinkedIn elle-m\u00eame, afin que les employ\u00e9s puissent identifier leur emploi pass\u00e9 ou actuel avec l'entreprise. Assurez-vous que la base de donn\u00e9es de LinkedIn peut stocker les informations suivantes pour chaque entreprise :</p> <ul> <li>Le nom de l'entreprise (name of the company)</li> <li>Le secteur d'activit\u00e9 de l'entreprise (company\u2019s industry)</li> <li>L'emplacement de l'entreprise (company\u2019s location)</li> </ul> <p>Vous devez supposer que LinkedIn ne permet aux entreprises de choisir qu'un seul des trois secteurs suivants : \u00ab Technologie \u00bb (Technology), \u00ab \u00c9ducation \u00bb (Education) et \u00ab Commerce \u00bb (Business).</p>"},{"location":"cours7/linkedin/instructions/#connexions-connections","title":"Connexions (Connections)","text":"<p>Enfin, l'essence de LinkedIn est sa capacit\u00e9 \u00e0 faciliter les connexions entre les personnes. Assurez-vous que la base de donn\u00e9es de LinkedIn peut prendre en charge chacune des connexions suivantes.</p> <p>Connexions avec des Personnes (Connections with People)</p> <p>La base de donn\u00e9es de LinkedIn doit pouvoir repr\u00e9senter des connexions mutuelles (r\u00e9ciproques, bidirectionnelles) entre les utilisateurs. Pas besoin de s'inqui\u00e9ter des connexions unidirectionnelles o\u00f9 l'utilisateur A \u00ab suit \u00bb (follows) l'utilisateur B sans que l'utilisateur B \u00ab suive \u00bb l'utilisateur A.</p> <p>Connexions avec des \u00c9coles (Connections with Schools)</p> <p>Un utilisateur doit pouvoir cr\u00e9er une affiliation avec une \u00e9cole donn\u00e9e. Et de m\u00eame, cette \u00e9cole doit pouvoir trouver ses anciens \u00e9l\u00e8ves. De plus, permettez \u00e0 un utilisateur de d\u00e9finir :</p> <ul> <li>La date de d\u00e9but de leur affiliation (c'est-\u00e0-dire, quand ils ont commenc\u00e9 \u00e0 fr\u00e9quenter l'\u00e9cole) (start date of their affiliation)</li> <li>La date de fin de leur affiliation (c'est-\u00e0-dire, quand ils ont obtenu leur dipl\u00f4me), le cas \u00e9ch\u00e9ant (end date of their affiliation, if applicable)</li> <li>Le type de dipl\u00f4me obtenu/poursuivi (par exemple, \u00ab BA \u00bb, \u00ab MA \u00bb, \u00ab PhD \u00bb, etc.) (type of degree earned/pursued)</li> </ul> <p>Connexions avec des Entreprises (Connections with Companies)</p> <p>Un utilisateur doit pouvoir cr\u00e9er une affiliation avec une entreprise donn\u00e9e. Et de m\u00eame, cette entreprise doit pouvoir trouver ses employ\u00e9s actuels et pass\u00e9s. De plus, permettez \u00e0 un utilisateur de d\u00e9finir :</p> <ul> <li>La date de d\u00e9but de leur affiliation (c'est-\u00e0-dire, la date \u00e0 laquelle ils ont commenc\u00e9 \u00e0 travailler avec l'entreprise) (start date of their affiliation)</li> <li>La date de fin de leur affiliation (c'est-\u00e0-dire, quand ils ont quitt\u00e9 l'entreprise), le cas \u00e9ch\u00e9ant (end date of their affiliation, if applicable)</li> </ul>"},{"location":"cours7/linkedin/instructions/#donnees-dexemple-sample-data","title":"Donn\u00e9es d'Exemple (Sample Data)","text":"<p>Votre base de donn\u00e9es doit pouvoir repr\u00e9senter\u2026</p> <ul> <li>Un utilisateur, Claudine Gay, dont le nom d'utilisateur est \u00ab claudine \u00bb et le mot de passe est \u00ab password \u00bb.</li> <li>Un utilisateur, Reid Hoffman, dont le nom d'utilisateur est \u00ab reid \u00bb et le mot de passe est \u00ab password \u00bb.</li> <li>Une \u00e9cole, Harvard University, qui est une universit\u00e9 situ\u00e9e \u00e0 Cambridge, Massachusetts, fond\u00e9e en 1636.</li> <li>Une entreprise, LinkedIn, qui est une entreprise technologique dont le si\u00e8ge est \u00e0 Sunnyvale, Californie.</li> <li>La connexion de Claudine Gay avec Harvard, poursuivant un doctorat du 1er janvier 1993 au 31 d\u00e9cembre 1998.</li> <li>La connexion de Reid Hoffman avec LinkedIn, avec le titre \u00ab CEO and Chairman \u00bb, du 1er janvier 2003 au 1er f\u00e9vrier 2007.</li> </ul>"},{"location":"cours7/linkedin/instructions/#conseils-advice","title":"Conseils (Advice)","text":"<ul> <li>Consid\u00e9rez toute la gamme des types pris en charge par MySQL, qui sont document\u00e9s dans le manuel de r\u00e9f\u00e9rence MySQL 8.0 \u00e0 l'adresse dev.mysql.com/doc/refman/8.0/en/data-types.html.</li> <li>Consid\u00e9rez \u00e9galement les conseils du manuel de r\u00e9f\u00e9rence sur le choix du bon type pour une colonne, document\u00e9s \u00e0 l'adresse dev.mysql.com/doc/refman/8.0/en/choosing-types.html.<ul> <li>Parmi les conseils de haut niveau, choisissez le type le plus pr\u00e9cis pour votre cas d'utilisation. Par exemple, si vous savez qu'une colonne d'entiers ne stockera que des valeurs positives, vous devriez envisager de modifier le type d'entier avec <code>UNSIGNED</code> (par exemple, <code>INT UNSIGNED</code> ou <code>TINYINT UNSIGNED</code>) pour obtenir la plage maximale de votre type.</li> </ul> </li> </ul>"},{"location":"cours7/linkedin/instructions/#utilisation-usage","title":"Utilisation (Usage)","text":"<p>Pour utiliser <code>mysql</code>, vous devez d'abord d\u00e9marrer un serveur MySQL, comme suit :</p> <pre><code>docker container run --name mysql -p 3306:3306 -v /workspaces/$RepositoryName:/mnt -e MYSQL_ROOT_PASSWORD=crimson -d mysql\n</code></pre> <p>Vous pouvez ensuite vous connecter au serveur avec :</p> <pre><code>mysql -h 127.0.0.1 -P 3306 -u root -p\n</code></pre> <p>Tapez crimson comme mot de passe.</p> <p>Si c'est la premi\u00e8re fois que vous vous connectez \u00e0 votre serveur <code>mysql</code>, vous devrez cr\u00e9er une nouvelle base de donn\u00e9es sur le serveur. \u00c0 votre invite <code>mysql&gt;</code>, essayez ce qui suit :</p> <pre><code>CREATE DATABASE `linkedin`;\n</code></pre> <p>Vous devriez voir quelque chose comme \u00ab Query OK, 1 row affected \u00bb. Ensuite, pour vous assurer que vos futures instructions SQL sont ex\u00e9cut\u00e9es sur votre nouvelle base de donn\u00e9es <code>linkedin</code>, ex\u00e9cutez ce qui suit :</p> <pre><code>USE `linkedin`;\n</code></pre> <p>Maintenant, rappelez-vous d'autres instructions MySQL du cours qui pourraient vous aider \u00e0 naviguer ! Vous pouvez toujours taper <code>quit</code> pour fermer votre connexion \u00e0 la base de donn\u00e9es MySQL.</p>"},{"location":"cours7/linkedin/instructions/#comment-tester-how-to-test","title":"Comment Tester (How to Test)","text":"<p>Bien que <code>check50</code> existe pour ce probl\u00e8me, seul vous pouvez vous assurer que votre base de donn\u00e9es r\u00e9pond aux sp\u00e9cifications de la plateforme et qu'elle peut stocker les donn\u00e9es d'exemple de mani\u00e8re efficace. Consid\u00e9rez si votre base de donn\u00e9es est enti\u00e8rement normalis\u00e9e !</p>"},{"location":"cours7/linkedin/instructions/#correction-correctness","title":"Correction (Correctness)","text":"<pre><code>check50 cs50/problems/2024/sql/sentimental/connect\n</code></pre>"},{"location":"cours7/linkedin/instructions/#depannage-troubleshooting","title":"D\u00e9pannage (Troubleshooting)","text":"<p>Parfois, vous pouvez rencontrer cette erreur lorsque vous essayez de vous connecter \u00e0 votre base de donn\u00e9es MySQL apr\u00e8s un red\u00e9marrage de Codespace :</p> <pre><code>ERROR 2003 (HY000): Can't connect to MySQL server on '127.0.0.1:3306' (111)\n</code></pre> <p>Vous pouvez ex\u00e9cuter la commande suivante pour red\u00e9marrer le conteneur mysql :</p> <pre><code>docker container start mysql\n</code></pre>"},{"location":"sqlite_python/","title":"Introduction","text":"<p>Voici une version modifi\u00e9e du guide SQLite avec Python, incluant des explications suppl\u00e9mentaires sur les concepts propres \u00e0 la biblioth\u00e8que <code>sqlite3</code>, notamment <code>cursor</code>, <code>fetchone</code>, <code>fetchmany</code>, <code>fetchall</code>, <code>commit</code>, <code>execute</code>, et <code>executemany</code>.</p>"},{"location":"sqlite_python/#sqlite-avec-python-guide-pratique","title":"SQLite avec Python : Guide Pratique","text":"<p>Ce guide se concentre sur les commandes Python pour manipuler une base de donn\u00e9es SQLite existante (<code>pokedex.sqlite</code>) en utilisant les op\u00e9rations CRUD (Create, Read, Update, Delete).</p>"},{"location":"sqlite_python/#table-des-matieres","title":"Table des mati\u00e8res","text":"<ol> <li>Connexion \u00e0 une base de donn\u00e9es existante</li> <li>Op\u00e9rations CRUD avec <code>sqlite3</code><ul> <li>Cr\u00e9ation (Create)</li> <li>Lecture (Read)</li> <li>Mise \u00e0 jour (Update)</li> <li>Suppression (Delete)</li> </ul> </li> <li>Utilisation avec Pandas</li> <li>Exemples pratiques avec la base de donn\u00e9es Pok\u00e9mon</li> </ol>"},{"location":"sqlite_python/#connexion-a-une-base-de-donnees-existante","title":"Connexion \u00e0 une base de donn\u00e9es existante","text":"<p>Pour commencer \u00e0 travailler avec une base de donn\u00e9es SQLite existante, utilisez le module <code>sqlite3</code> de Python :</p> <pre><code>import sqlite3\n\n# Connexion \u00e0 une base de donn\u00e9es existante\nconn = sqlite3.connect('pokedex.sqlite')\n\n# Cr\u00e9ation d'un curseur pour ex\u00e9cuter des commandes SQL\ncurseur = conn.cursor()\n\n# V\u00e9rifier que la connexion fonctionne\ncurseur.execute(\"SELECT sqlite_version();\")\nversion = curseur.fetchone()\nprint(f\"Version SQLite: {version[0]}\")\n</code></pre>"},{"location":"sqlite_python/#explications","title":"Explications :","text":"<ul> <li><code>sqlite3.connect('pokedex.sqlite')</code> : \u00c9tablit une connexion \u00e0 la base de donn\u00e9es SQLite nomm\u00e9e <code>pokedex.sqlite</code>.</li> <li><code>conn.cursor()</code> : Cr\u00e9e un objet curseur qui permet d'ex\u00e9cuter des commandes SQL.</li> <li><code>curseur.execute(\"SELECT sqlite_version();\")</code> : Ex\u00e9cute une commande SQL pour obtenir la version de SQLite.</li> <li><code>curseur.fetchone()</code> : R\u00e9cup\u00e8re le premier r\u00e9sultat de la requ\u00eate ex\u00e9cut\u00e9e.</li> </ul>"},{"location":"sqlite_python/#operations-crud-avec-sqlite3","title":"Op\u00e9rations CRUD avec <code>sqlite3</code>","text":""},{"location":"sqlite_python/#creation-create","title":"Cr\u00e9ation (Create)","text":""},{"location":"sqlite_python/#creer-une-nouvelle-table","title":"Cr\u00e9er une nouvelle table","text":"<pre><code># Cr\u00e9ation d'une nouvelle table\ncurseur.execute('''\nCREATE TABLE IF NOT EXISTS pokemon_types (\n    id INTEGER PRIMARY KEY,\n    pokemon_id INTEGER,\n    type_name TEXT,\n    FOREIGN KEY (pokemon_id) REFERENCES pokedex(id)\n)\n''')\n\n# Enregistrer les modifications\nconn.commit()\n</code></pre>"},{"location":"sqlite_python/#inserer-des-donnees","title":"Ins\u00e9rer des donn\u00e9es","text":"<pre><code># Insertion d'un seul enregistrement\ncurseur.execute('''\nINSERT INTO pokemon_types (pokemon_id, type_name) VALUES (?, ?)\n''', (1, 'grass'))\n\n# Insertion de plusieurs enregistrements\ntypes_data = [\n    (1, 'poison'),\n    (2, 'grass'),\n    (2, 'poison'),\n    (3, 'grass'),\n    (3, 'poison'),\n    (4, 'fire')\n]\ncurseur.executemany('INSERT INTO pokemon_types (pokemon_id, type_name) VALUES (?, ?)', types_data)\n\n# Enregistrer les modifications\nconn.commit()\n</code></pre>"},{"location":"sqlite_python/#explications_1","title":"Explications :","text":"<ul> <li><code>curseur.execute()</code> : Ex\u00e9cute une commande SQL unique.</li> <li><code>curseur.executemany()</code> : Ex\u00e9cute une commande SQL pour plusieurs enregistrements.</li> <li><code>conn.commit()</code> : Enregistre les modifications effectu\u00e9es dans la base de donn\u00e9es.</li> </ul>"},{"location":"sqlite_python/#lecture-read","title":"Lecture (Read)","text":""},{"location":"sqlite_python/#executer-des-requetes-simples","title":"Ex\u00e9cuter des requ\u00eates simples","text":"<pre><code># S\u00e9lection de tous les enregistrements d'une table\ncurseur.execute('SELECT * FROM pokedex LIMIT 5')\npokemons = curseur.fetchall()\n\n# Affichage des r\u00e9sultats\nfor pokemon in pokemons:\n    print(pokemon)\n</code></pre>"},{"location":"sqlite_python/#differentes-methodes-de-recuperation","title":"Diff\u00e9rentes m\u00e9thodes de r\u00e9cup\u00e9ration","text":"<pre><code>curseur.execute('SELECT name, hp, attack FROM pokedex')\npremier_pokemon = curseur.fetchone()  # R\u00e9cup\u00e8re uniquement le premier r\u00e9sultat\nquelques_pokemons = curseur.fetchmany(3)  # R\u00e9cup\u00e8re les 3 r\u00e9sultats suivants\ntous_les_pokemons = curseur.fetchall()  # R\u00e9cup\u00e8re tous les r\u00e9sultats restants\n</code></pre>"},{"location":"sqlite_python/#explications_2","title":"Explications :","text":"<ul> <li><code>curseur.fetchone()</code> : R\u00e9cup\u00e8re le premier r\u00e9sultat de la requ\u00eate.</li> <li><code>curseur.fetchmany(n)</code> : R\u00e9cup\u00e8re les <code>n</code> r\u00e9sultats suivants.</li> <li><code>curseur.fetchall()</code> : R\u00e9cup\u00e8re tous les r\u00e9sultats restants.</li> </ul>"},{"location":"sqlite_python/#requetes-avec-filtres","title":"Requ\u00eates avec filtres","text":"<pre><code># S\u00e9lection avec condition\ncurseur.execute('SELECT name, hp FROM pokedex WHERE type LIKE ?', ('%fire%',))\nfire_pokemons = curseur.fetchall()\nfor pokemon in fire_pokemons:\n    print(f\"Pok\u00e9mon de feu: {pokemon[0]} - HP: {pokemon[1]}\")\n\n# Recherche avec plusieurs conditions\ncurseur.execute('''\nSELECT name, attack, defense\nFROM pokedex\nWHERE hp &gt; ? AND defense &gt; ?\n''', (50, 60))\ntough_pokemons = curseur.fetchall()\n</code></pre>"},{"location":"sqlite_python/#acceder-aux-colonnes-par-nom","title":"Acc\u00e9der aux colonnes par nom","text":"<pre><code># Configurer la connexion pour retourner des dictionnaires\nconn = sqlite3.connect('pokedex.sqlite')\nconn.row_factory = sqlite3.Row\n\ncurseur = conn.cursor()\ncurseur.execute('SELECT id, name, hp, attack FROM pokedex LIMIT 3')\n\nfor row in curseur.fetchall():\n    print(f\"ID: {row['id']}, Nom: {row['name']}, HP: {row['hp']}\")\n</code></pre>"},{"location":"sqlite_python/#mise-a-jour-update","title":"Mise \u00e0 jour (Update)","text":"<pre><code># Mise \u00e0 jour d'un seul enregistrement\ncurseur.execute('''\nUPDATE pokedex\nSET hp = ?, attack = ?\nWHERE id = ?\n''', (50, 55, 1))\n\n# Mise \u00e0 jour de plusieurs enregistrements\ncurseur.execute('''\nUPDATE pokedex\nSET s_defense = s_defense * 1.1\nWHERE type LIKE ?\n''', ('%grass%',))\n\nconn.commit()\n</code></pre>"},{"location":"sqlite_python/#suppression-delete","title":"Suppression (Delete)","text":"<pre><code># Suppression d'un enregistrement\ncurseur.execute('DELETE FROM pokedex WHERE id = ?', (150,))\n\n# Suppression avec condition\ncurseur.execute('DELETE FROM pokedex WHERE hp &lt; ? AND speed &lt; ?', (40, 40))\n\nconn.commit()\n</code></pre>"},{"location":"sqlite_python/#transactions","title":"Transactions","text":"<p>SQLite supporte les transactions, qui permettent de grouper plusieurs op\u00e9rations et de les annuler en cas d'erreur :</p> <pre><code>try:\n    # Les op\u00e9rations suivantes seront dans une transaction\n    curseur.execute(\"UPDATE pokedex SET hp = hp + 5 WHERE id = 1\")\n    curseur.execute(\"UPDATE pokedex SET attack = attack + 3 WHERE id = 1\")\n\n    # Si tout va bien, on valide les changements\n    conn.commit()\n    print(\"Modifications valid\u00e9es avec succ\u00e8s\")\n\nexcept sqlite3.Error as e:\n    # En cas d'erreur, on annule tout\n    conn.rollback()\n    print(f\"Une erreur est survenue: {e}\")\n</code></pre>"},{"location":"sqlite_python/#fermeture-de-la-connexion","title":"Fermeture de la connexion","text":"<pre><code># Fermer le curseur et la connexion lorsque vous avez termin\u00e9\ncurseur.close()\nconn.close()\n</code></pre>"},{"location":"sqlite_python/#utilisation-avec-pandas","title":"Utilisation avec Pandas","text":"<p>Pandas facilite grandement l'analyse de donn\u00e9es issues de bases SQLite.</p>"},{"location":"sqlite_python/#lecture-de-donnees","title":"Lecture de donn\u00e9es","text":"<pre><code>import pandas as pd\nimport sqlite3\n\n# Connexion \u00e0 la base de donn\u00e9es\nconn = sqlite3.connect('pokedex.sqlite')\n\n# Ex\u00e9cution d'une requ\u00eate et conversion en DataFrame\ndf = pd.read_sql_query(\"SELECT * FROM pokedex\", conn)\n\n# Affichage des premi\u00e8res lignes\nprint(df.head())\n\n# Statistiques descriptives\nprint(df.describe())\n</code></pre>"},{"location":"sqlite_python/#filtrage-et-analyse","title":"Filtrage et analyse","text":"<pre><code># Filtrage de donn\u00e9es\nfire_pokemon = df[df['type'].str.contains('fire', case=False)]\nprint(f\"Nombre de Pok\u00e9mon de type feu : {len(fire_pokemon)}\")\n\n# Statistiques par groupe\nstats_by_type = df.groupby('type').agg({\n    'hp': 'mean',\n    'attack': 'mean',\n    'defense': 'mean'\n}).reset_index()\n\nprint(\"Statistiques moyennes par type:\")\nprint(stats_by_type)\n</code></pre>"},{"location":"sqlite_python/#ecriture-vers-la-base-de-donnees","title":"\u00c9criture vers la base de donn\u00e9es","text":"<pre><code># Cr\u00e9ation d'un nouveau DataFrame\nnew_pokemons = pd.DataFrame({\n    'id': [151, 152],\n    'name': ['mew', 'chikorita'],\n    'hp': [100, 45],\n    'attack': [100, 49],\n    'defense': [100, 65],\n    'type': ['{psychic}', '{grass}']\n})\n\n# \u00c9criture dans la base de donn\u00e9es\nnew_pokemons.to_sql('new_pokemon_data', conn, if_exists='replace', index=False)\n\n# V\u00e9rification\nverification = pd.read_sql_query(\"SELECT * FROM new_pokemon_data\", conn)\nprint(verification)\n\n# Fermeture de la connexion\nconn.close()\n</code></pre>"},{"location":"sqlite_python/#exemples-pratiques-avec-la-base-de-donnees-pokemon","title":"Exemples pratiques avec la base de donn\u00e9es Pok\u00e9mon","text":"<p>Voici un exemple de comment explorer et manipuler la base de donn\u00e9es Pok\u00e9mon que vous avez :</p> <pre><code>import sqlite3\nimport pandas as pd\n\n# Connexion \u00e0 la base de donn\u00e9es\nconn = sqlite3.connect('pokedex.sqlite')\ncurseur = conn.cursor()\n\n# Affichage des 5 premiers Pok\u00e9mon\ncurseur.execute('SELECT * FROM pokedex LIMIT 5')\ncolumns = [description[0] for description in curseur.description]\nrows = curseur.fetchall()\n\nprint(\"Structure de la table :\")\nprint(columns)\nprint(\"\\nDonn\u00e9es :\")\nfor row in rows:\n    print(row)\n\n# Utilisation de pandas pour une analyse plus avanc\u00e9e\ndf_pokemon = pd.read_sql_query(\"SELECT * FROM pokedex\", conn)\n\n# Analyse statistique par type\ndef extract_types(type_string):\n    \"\"\"Extraction des types depuis la cha\u00eene {type1,type2}\"\"\"\n    if not isinstance(type_string, str):\n        return []\n    return type_string.strip('{}').split(',')\n\n# Cr\u00e9er des colonnes pour chaque type primaire\ndf_pokemon['primary_type'] = df_pokemon['type'].apply(\n    lambda x: extract_types(x)[0] if extract_types(x) else None\n)\n\n# Statistiques par type primaire\nstats_by_primary = df_pokemon.groupby('primary_type').agg({\n    'hp': 'mean',\n    'attack': 'mean',\n    'defense': 'mean',\n    'speed': 'mean'\n}).reset_index()\n\nprint(\"\\nStatistiques moyennes par type primaire:\")\nprint(stats_by_primary)\n\n# Trouver les Pok\u00e9mon les plus \u00e9quilibr\u00e9s (stats similaires)\ndf_pokemon['stat_std'] = df_pokemon[['hp', 'attack', 'defense', 's_attack', 's_defense', 'speed']].std(axis=1)\nbalanced_pokemon = df_pokemon.sort_values('stat_std').head(5)\n\nprint(\"\\nPok\u00e9mon aux statistiques les plus \u00e9quilibr\u00e9es:\")\nprint(balanced_pokemon[['name', 'hp', 'attack', 'defense', 'stat_std']])\n\n# Fermeture de la connexion\nconn.close()\n</code></pre>"},{"location":"sqlite_python/#exemple-de-sortie-pour-la-requete-de-base","title":"Exemple de sortie pour la requ\u00eate de base :","text":"<pre><code>id  name    height  weight  hp  attack  defense s_attack    s_defense   speed   type    evo_set info\n1   bulbasaur   7   69  45  49  49  65  65  45  {grass,poison}  1   A strange seed was planted on its back at birth. The plant sprouts and grows with this POK\u00e9MON.\n2   ivysaur 10  130 60  62  63  80  80  60  {grass,poison}  1   When the bulb on its back grows large, it appears to lose the ability to stand on its hind legs.\n3   venusaur    20  1000    80  82  83  100 100 80  {grass,poison}  1   The plant blooms when it is absorbing solar energy. It stays on the move to seek sunlight.\n4   charmander  6   85  39  52  43  60  50  65  {fire}  2   Obviously prefers hot places. When it rains, steam is said to spout from the tip of its tail.\n5   charmeleon  11  190 58  64  58  80  65  80  {fire}  2   When it swings its burning tail, it elevates the temperature to unbearably high levels.\n</code></pre> <p>Ce guide devrait maintenant \u00eatre plus clair et informatif, avec des explications suppl\u00e9mentaires sur les concepts cl\u00e9s de la biblioth\u00e8que <code>sqlite3</code>.</p>"}]}